//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:35 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   bool useUVOffsets;                 // Offset:  184 Size:     4 [unused]
//   float2 sparkleTile;                // Offset:  192 Size:     8
//   float3 backlightScatterColor;      // Offset:  208 Size:    12
//   float3 specColorTint;              // Offset:  224 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// specColorSampler                  sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// normalSampler                     sampler      NA          NA             s5      1 
// aoSampler                         sampler      NA          NA             s6      1 
// sparkleDataSampler                sampler      NA          NA             s7      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// colorMap                          texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// normalMap                         texture  float4          2d            t21      1 
// glossMap                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// aoMap                             texture  float4          2d            t24      1 
// thicknessMap                      texture  float4          2d            t25      1 
// sparkleDataMap                    texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float   x   
// TEXCOORD                 0    yz         1     NONE   float    yz 
// UVOFFSETS                0   xyz         2     NONE   float       
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float   xyz 
// TEXCOORD                 3   xyz         5     NONE   float   xyz 
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// SV_IsFrontFace           0   x           7    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[15], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.x
dcl_input_ps linear v1.yz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps_sgv constant v7.x, is_front_face
dcl_output o0.xyzw
dcl_temps 53
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.yzyy, t0.xyzw, s1
add r1.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r0.wwww, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r1.xyzx
mul o0.w, r0.w, v1.x
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.yzyy, t24.yzwx, s6
sample_indexable(texture2d)(float,float,float,float) r1.x, v1.yzyy, t22.xyzw, s3
add r1.y, -cb0[11].x, cb0[11].y
mad r1.x, r1.x, r1.y, cb0[11].x
mul_sat r1.x, r1.x, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.yzyy, t21.wxyz, s5
add r1.yzw, r1.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
mad r1.yzw, cb0[10].wwww, r1.yyzw, l(0.000000, 0.500000, 0.500000, 0.000000)
mad r1.yz, r1.yyzy, l(0.000000, 1.99218750, 1.99218750, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
dp2 r2.x, r1.yzyy, r1.yzyy
add r2.x, -r2.x, l(1.000000)
max r2.x, r2.x, l(0.000000)
sqrt r2.x, r2.x
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(0.33333334)
min r1.w, r1.w, l(1.000000)
movc r2.y, v7.x, l(1.000000), l(-1.000000)
dp3 r2.z, v3.xyzx, v3.xyzx
rsq r2.z, r2.z
mul r3.xyz, r2.zzzz, v3.xyzx
mul r3.xyz, r2.yyyy, r3.xyzx
dp3 r2.z, v4.xyzx, v4.xyzx
rsq r2.z, r2.z
mul r4.xyz, r2.zzzz, v4.xyzx
mul r4.xyz, r2.yyyy, r4.xyzx
dp3 r2.z, v5.xyzx, v5.xyzx
rsq r2.z, r2.z
mul r5.xyz, r2.zzzz, v5.xyzx
mul r2.yzw, r2.yyyy, r5.xxyz
mul r1.x, r1.x, l(-17.000000)
exp r1.x, r1.x
add r1.x, r1.x, r1.w
log r1.x, r1.x
mul r1.x, r1.x, l(-0.05882353)
max r5.y, r1.x, l(0.000000)
mul r1.xzw, r1.zzzz, r2.yyzw
mad r1.xyz, r4.xyzx, r1.yyyy, r1.xzwx
mad r1.xyz, r3.xyzx, r2.xxxx, r1.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r1.xyz, r1.wwww, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.x, v1.yzyy, t25.xyzw, s1
mul r2.yzw, r0.xxyz, cb0[13].xxyz
add r2.x, -r2.x, l(1.000000)
mul r2.xyz, r2.xxxx, r2.yzwy
mul r3.xy, v1.yzyy, cb0[12].xyxx
sample_indexable(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t26.xyzw, s7
ftou r3.zw, v0.xxxy
ge r2.w, v0.z, l(0.984375)
mul r4.x, v0.z, l(1.01587307)
mad r4.y, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r4.y, r4.x
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
dp3 r4.x, -v6.xyzx, -v6.xyzx
rsq r4.x, r4.x
mul r4.yzw, r4.xxxx, -v6.xxyz
ine r5.z, cb1[92].x, l(0)
utof r6.xy, r3.wzww
dp2 r5.w, r6.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r7.x, r8.x, r5.w
dp2 r5.w, r6.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r5.w, r5.w
mul r5.w, r5.w, l(52.982918)
frc r5.w, r5.w
mad r5.w, r5.w, l(6.28318548), cb1[70].w
sincos r6.x, r9.x, r5.w
dp3 r5.w, r1.xyzx, r4.yzwy
mov_sat r5.x, r5.w
dp3 r6.y, -r4.yzwy, r1.xyzx
add r6.y, r6.y, r6.y
mad r10.xyz, r1.xyzx, -r6.yyyy, -r4.yzwy
mul r6.y, r5.y, l(17.000000)
exp r6.y, r6.y
add r6.y, r6.y, l(2.000000)
div r6.y, l(2.000000), r6.y
sqrt r6.z, r6.y
add r6.w, -r5.y, l(1.000000)
mul r7.y, r6.w, l(5.000000)
mad r7.z, r6.w, l(5.000000), l(-2.500000)
mul r7.z, r7.z, l(0.400000)
max r7.z, r7.z, l(0.000000)
mad r9.yz, -r6.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r7.w, r9.y
mul r7.w, r5.x, r7.w
mul r7.zw, r7.zzzw, l(0.000000, 0.000000, 100.000000, 9.136810)
mul r8.w, r6.w, r7.y
mad r8.w, -r8.w, l(2.015905), r9.z
exp r8.w, r8.w
mul r8.w, r5.x, r8.w
mul r8.w, r8.w, l(9.708090)
max r7.w, r7.w, r8.w
max r7.w, r7.w, l(1.268160)
iadd r8.w, cb2[0].y, -cb2[58].x
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r11.xy, r3.zwzz, l(6, 6, 0, 0)
ishl r11.z, r2.w, l(4)
and r2.w, r8.w, l(-32)
iadd r3.z, -r2.w, r8.w
and r3.w, cb2[0].y, l(-32)
iadd r9.y, -r3.w, cb2[0].y
mov r12.xy, l(0,0,0,0)
mov r13.w, l(0)
mov r14.yz, l(0,0,1.000000,0)
mov r15.xy, l(0,0,0,0)
mov r16.xz, l(1.000000,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.xy, l(0,0,0,0)
mov r19.xyzw, l(0,0,0,0)
mov r20.yzw, l(0,0,0,0)
mov r9.z, r2.w
loop 
  uge r9.w, r9.z, cb2[0].y
  breakc_nz r9.w
  ushr r12.z, r9.z, l(5)
  iadd r13.xyz, r11.xyzx, r12.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.w, r13.xyzw, t7.yzwx
  ieq r11.w, r2.w, r9.z
  bfi r12.z, r3.z, l(0), l(0), r9.w
  movc r9.w, r11.w, r12.z, r9.w
  ieq r11.w, r3.w, r9.z
  ubfe r12.z, r9.y, l(0), r9.w
  movc r9.w, r11.w, r12.z, r9.w
  iadd r11.w, r9.z, cb2[0].x
  mov r21.xyzw, r19.xyzw
  mov r22.xyz, r20.yzwy
  mov r12.z, r9.w
  loop 
    breakc_z r12.z
    firstbit_lo r12.w, r12.z
    ishl r13.x, l(1), r12.w
    and r13.y, r12.z, r13.x
    if_nz r13.y
      xor r12.z, r12.z, r13.x
      iadd r13.x, r11.w, r12.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r23.xyzw, r13.x, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r13.xy, r13.x, l(16), t11.xyxx
      add r23.xyz, r23.xyzx, -v6.xyzx
      mov r13.z, r23.w
      lt r13.xyz, |r23.xyzx|, r13.zxyz
      and r13.x, r13.y, r13.x
      and r13.x, r13.z, r13.x
      if_nz r13.x
        iadd r12.w, r9.z, r12.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r12.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r13.xy, r12.w, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(116), t15.zwxy
        add r25.xyz, -r23.yzwy, v6.xyzx
        and r13.z, r24.w, l(0x0000ffff)
        ubfe r14.w, l(6), l(25), r24.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r26.xyzw, r13.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r13.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r13.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r13.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(80), t16.xyzw
        dp3 r15.w, r26.xyzx, r25.xyzx
        add_sat r15.w, r26.w, r15.w
        dp3 r17.w, r27.xyzx, r25.xyzx
        add_sat r17.w, r27.w, r17.w
        mul r15.w, r15.w, r17.w
        dp3 r17.w, r28.xyzx, r25.xyzx
        add_sat r17.w, r28.w, r17.w
        mul r15.w, r15.w, r17.w
        dp3 r17.w, r29.xyzx, r25.xyzx
        add_sat r17.w, r29.w, r17.w
        mul r15.w, r15.w, r17.w
        dp3 r17.w, r30.xyzx, r25.xyzx
        add_sat r17.w, r30.w, r17.w
        mul r15.w, r15.w, r17.w
        dp3 r17.w, r31.xyzx, r25.xyzx
        add_sat r17.w, r31.w, r17.w
        mul r14.x, r15.w, r17.w
        and r15.w, r13.x, l(1)
        movc r26.xy, r15.wwww, r14.xyxx, r14.zxzz
        mov r14.x, r13.x
        mov r27.xy, r26.xyxx
        mov r15.w, l(1)
        loop 
          ige r17.w, r15.w, r14.w
          breakc_nz r17.w
          iadd r17.w, r13.z, r15.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t16.xyzw
          dp3 r17.w, r28.xyzx, r25.xyzx
          add_sat r17.w, r28.w, r17.w
          mul r17.w, r17.w, r27.x
          dp3 r18.w, r29.xyzx, r25.xyzx
          add_sat r18.w, r29.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r30.xyzx, r25.xyzx
          add_sat r18.w, r30.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r31.xyzx, r25.xyzx
          add_sat r18.w, r31.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r32.xyzx, r25.xyzx
          add_sat r18.w, r32.w, r18.w
          mul r17.w, r17.w, r18.w
          dp3 r18.w, r33.xyzx, r25.xyzx
          add_sat r18.w, r33.w, r18.w
          mul r27.x, r17.w, r18.w
          ushr r23.w, r14.x, l(2)
          ubfe r25.w, l(1), l(2), r14.x
          and r26.z, r23.w, l(2)
          max r26.w, r27.x, r27.y
          mad r17.w, -r17.w, r18.w, l(1.000000)
          mul r17.w, r17.w, r27.y
          movc r16.y, r26.z, r17.w, r26.w
          movc r27.xy, r25.wwww, r27.xyxx, r16.xyxx
          iadd r15.w, r15.w, l(1)
          mov r14.x, r23.w
        endloop 
        mov_sat r27.y, r27.y
        mul r13.x, r13.y, r27.y
        lt r13.z, l(0.000000), r13.x
        if_nz r13.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xy, r12.w, l(212), t15.xyxx
          mad r22.z, r27.y, r13.y, r22.z
          mul r12.w, r24.z, r13.x
          mov r24.z, r32.z
          dp3 r13.x, r10.xyzx, r24.xyzx
          dp3 r13.y, r25.xyzx, r24.xyzx
          add r13.y, -r32.w, r13.y
          ge r13.z, r13.y, l(0.000000)
          max r13.y, r7.z, |r13.y|
          movc r13.y, r13.z, r13.y, -r13.y
          max r13.x, -r13.x, l(0.00000010)
          div r13.x, r13.y, r13.x
          min r13.x, |r13.x|, l(131072.000000)
          mov r32.z, r33.z
          dp3 r13.y, r10.xyzx, r32.xyzx
          dp3 r13.z, r25.xyzx, r32.xyzx
          add r13.z, -r33.w, r13.z
          ge r14.x, r13.z, l(0.000000)
          max r13.z, r7.z, |r13.z|
          movc r13.z, r14.x, r13.z, -r13.z
          max r13.y, -r13.y, l(0.00000010)
          div r13.y, r13.z, r13.y
          min r13.x, |r13.y|, r13.x
          mov r33.z, r34.z
          dp3 r13.y, r10.xyzx, r33.xyzx
          dp3 r13.z, r25.xyzx, r33.xyzx
          add r13.z, -r34.w, r13.z
          ge r14.x, r13.z, l(0.000000)
          max r13.z, r7.z, |r13.z|
          movc r13.z, r14.x, r13.z, -r13.z
          max r13.y, -r13.y, l(0.00000010)
          div r13.y, r13.z, r13.y
          min r13.x, |r13.y|, r13.x
          mov r34.z, r35.z
          dp3 r13.y, r10.xyzx, r34.xyzx
          dp3 r13.z, r25.xyzx, r34.xyzx
          add r13.z, -r35.w, r13.z
          ge r14.x, r13.z, l(0.000000)
          max r13.z, r7.z, |r13.z|
          movc r13.z, r14.x, r13.z, -r13.z
          max r13.y, -r13.y, l(0.00000010)
          div r13.y, r13.z, r13.y
          min r13.x, |r13.y|, r13.x
          mov r35.z, r36.x
          dp3 r13.y, r10.xyzx, r35.xyzx
          dp3 r13.z, r25.xyzx, r35.xyzx
          add r13.z, -r36.y, r13.z
          ge r14.x, r13.z, l(0.000000)
          max r13.z, r7.z, |r13.z|
          movc r13.z, r14.x, r13.z, -r13.z
          max r13.y, -r13.y, l(0.00000010)
          div r13.y, r13.z, r13.y
          min r13.x, |r13.y|, r13.x
          mov r37.zw, r36.zzzw
          dp3 r13.y, r10.zxyz, r37.xzwx
          dp3 r13.z, r25.zxyz, r37.xzwx
          add r13.z, -r37.y, r13.z
          ge r14.x, r13.z, l(0.000000)
          max r13.z, r7.z, |r13.z|
          movc r13.z, r14.x, r13.z, -r13.z
          max r13.y, -r13.y, l(0.00000010)
          div r13.y, r13.z, r13.y
          min r13.x, |r13.y|, r13.x
          mov r24.x, r29.w
          mov r24.yz, r30.zzwz
          add r24.xyz, r25.xyzx, r24.xyzx
          mad r24.xyz, r10.xyzx, r13.xxxx, r24.xyzx
          dp3 r13.y, r24.xyzx, r24.xyzx
          sqrt r13.y, r13.y
          div r13.x, r13.x, r13.y
          add r13.x, r13.x, r13.x
          sqrt r13.x, r13.x
          mad r13.x, r6.w, l(5.000000), r13.x
          add r13.x, r13.x, l(-0.844800)
          mov r23.y, r26.z
          mov r23.z, r28.x
          dp3 r32.x, r24.xyzx, r23.xyzx
          mov r33.xy, r26.xwxx
          mov r33.z, r28.w
          dp3 r32.y, r24.xyzx, r33.xyzx
          mov r28.x, r26.y
          dp3 r32.z, r24.xyzx, r28.xyzx
          ubfe r13.y, l(9), l(16), r24.w
          utof r32.w, r13.y
          sample_l_indexable(texturecubearray)(float,float,float,float) r13.xyz, r32.xyzw, t8.xyzw, s2, r13.x
          dp3 r24.x, r25.xyzx, r23.xyzx
          dp3 r24.y, r25.xyzx, r33.xyzx
          dp3 r24.z, r25.xyzx, r28.xyzx
          mad_sat r24.xyz, r24.xyzx, r29.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r30.z, r31.x
          mad r24.xyz, r24.xyzx, r30.xyzx, r31.yzwy
          dp3 r32.x, r1.xyzx, r23.xyzx
          dp3 r32.y, r1.xyzx, r33.xyzx
          dp3 r32.z, r1.xyzx, r28.xyzx
          lt r23.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r32.xyzx
          movc r15.z, r23.x, l(0), l(0.500000)
          add r25.xyz, r15.xyzx, r24.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyz, r25.xyzx, t17.xyzw, s4, l(0.000000)
          mul r26.xyz, r32.xyzx, r32.xyzx
          mul r26.xyz, r12.wwww, r26.xyzx
          movc r17.z, r23.y, l(0), l(0.500000)
          add r23.xyw, r17.xyxz, r24.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r23.xyw, r23.xywx, t18.xywz, s4, l(0.000000)
          mul r23.xyw, r26.yyyy, r23.xyxw
          mad r23.xyw, r25.xyxz, r26.xxxx, r23.xyxw
          movc r18.z, r23.z, l(0), l(0.500000)
          add r24.xyz, r18.xyzx, r24.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
          mad r23.xyz, r24.xyzx, r26.zzzz, r23.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r24.xyz, r32.xyzw, t8.xyzw, s2, l(6.000000)
          mul r25.xyz, r23.xyzx, r24.xyzx
          dp3 r14.x, r25.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r21.xyz, r23.xyzx, r24.xyzx, r21.xyzx
          mul r14.w, r7.w, r14.x
          mul r13.xyz, r12.wwww, r13.xyzx
          dp3 r12.w, r13.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r12.w, r7.w, r14.x, r12.w
          div r12.w, r14.w, r12.w
          mov r23.x, r21.w
          mov r23.yz, r22.xxyx
          mad r22.xyw, r13.yzyx, r12.wwww, r23.yzyx
          mov r21.w, r22.w
        endif 
      endif 
    endif 
  endloop 
  mov r19.xyzw, r21.xyzw
  mov r20.yzw, r22.xxyz
  iadd r9.z, r9.z, l(32)
endloop 
lt r9.z, r20.w, l(1.000000)
if_nz r9.z
  mov r12.xy, l(0,0,0,0)
  mov r13.w, l(0)
  mov r14.yz, l(0,0,1.000000,0)
  mov r15.xy, l(0,0,0,0)
  mov r16.x, l(1.000000)
  mov r17.xy, l(0,0,0,0)
  mov r18.xy, l(0,0,0,0)
  mov r21.x, r19.w
  mov r21.yzw, r20.yyzw
  mov r22.xyz, r19.xyzx
  mov r9.z, r20.w
  mov r9.w, l(0)
  loop 
    uge r11.w, r9.w, r8.w
    breakc_nz r11.w
    ushr r12.z, r9.w, l(5)
    iadd r13.xyz, r11.xyzx, r12.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r13.xyzw, t7.yzwx
    ieq r12.z, r2.w, r9.w
    ubfe r12.w, r3.z, l(0), r11.w
    movc r11.w, r12.z, r12.w, r11.w
    iadd r12.z, r9.w, cb2[0].x
    mov r23.xyzw, r21.xyzw
    mov r13.xyz, r22.xyzx
    mov r12.w, r9.z
    mov r14.w, r11.w
    loop 
      breakc_z r14.w
      firstbit_lo r15.w, r14.w
      ishl r17.w, l(1), r15.w
      and r18.w, r14.w, r17.w
      if_nz r18.w
        xor r14.w, r14.w, r17.w
        iadd r17.w, r12.z, r15.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r24.xyzw, r17.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xy, r17.w, l(16), t11.xyxx
        add r24.xyz, r24.xyzx, -v6.xyzx
        mov r25.z, r24.w
        lt r24.xyz, |r24.xyzx|, r25.zxyz
        and r17.w, r24.y, r24.x
        and r17.w, r24.z, r17.w
        if_nz r17.w
          iadd r15.w, r9.w, r15.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r15.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xy, r15.w, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r15.w, l(116), t15.zwxy
          add r27.xyz, -r24.yzwy, v6.xyzx
          and r17.w, r26.w, l(0x0000ffff)
          ubfe r18.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t16.xyzw
          dp3 r22.w, r28.xyzx, r27.xyzx
          add_sat r22.w, r28.w, r22.w
          dp3 r24.w, r29.xyzx, r27.xyzx
          add_sat r24.w, r29.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r30.xyzx, r27.xyzx
          add_sat r24.w, r30.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r31.xyzx, r27.xyzx
          add_sat r24.w, r31.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r32.xyzx, r27.xyzx
          add_sat r24.w, r32.w, r24.w
          mul r22.w, r22.w, r24.w
          dp3 r24.w, r33.xyzx, r27.xyzx
          add_sat r24.w, r33.w, r24.w
          mul r14.x, r22.w, r24.w
          and r22.w, r25.x, l(1)
          movc r25.zw, r22.wwww, r14.xxxy, r14.zzzx
          mov r14.x, r25.x
          mov r28.xy, r25.zwzz
          mov r22.w, l(1)
          loop 
            ige r24.w, r22.w, r18.w
            breakc_nz r24.w
            iadd r24.w, r17.w, r22.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r24.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r24.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r24.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r24.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r24.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r24.w, l(80), t16.xyzw
            dp3 r24.w, r29.xyzx, r27.xyzx
            add_sat r24.w, r29.w, r24.w
            mul r24.w, r24.w, r28.x
            dp3 r27.w, r30.xyzx, r27.xyzx
            add_sat r27.w, r30.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r31.xyzx, r27.xyzx
            add_sat r27.w, r31.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r32.xyzx, r27.xyzx
            add_sat r27.w, r32.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r33.xyzx, r27.xyzx
            add_sat r27.w, r33.w, r27.w
            mul r24.w, r24.w, r27.w
            dp3 r27.w, r34.xyzx, r27.xyzx
            add_sat r27.w, r34.w, r27.w
            mul r28.x, r24.w, r27.w
            ushr r28.z, r14.x, l(2)
            ubfe r28.w, l(1), l(2), r14.x
            and r29.x, r28.z, l(2)
            max r29.y, r28.x, r28.y
            mad r24.w, -r24.w, r27.w, l(1.000000)
            mul r24.w, r24.w, r28.y
            movc r16.y, r29.x, r24.w, r29.y
            movc r28.xy, r28.wwww, r28.xyxx, r16.xyxx
            iadd r22.w, r22.w, l(1)
            mov r14.x, r28.z
          endloop 
          add_sat r14.x, -r12.w, r28.y
          mul r16.y, r25.y, r14.x
          lt r17.w, l(0.000000), r16.y
          if_nz r17.w
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r15.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r15.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r15.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r15.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r15.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r15.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r15.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r15.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r15.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r15.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r15.w, l(212), t15.xyxx
            mad r23.w, r14.x, r25.y, r23.w
            mul r14.x, r26.z, r16.y
            mov r26.z, r34.z
            dp3 r15.w, r10.xyzx, r26.xyzx
            dp3 r16.y, r27.xyzx, r26.xyzx
            add r16.y, -r34.w, r16.y
            ge r17.w, r16.y, l(0.000000)
            max r16.y, r7.z, |r16.y|
            movc r16.y, r17.w, r16.y, -r16.y
            max r15.w, -r15.w, l(0.00000010)
            div r15.w, r16.y, r15.w
            min r15.w, |r15.w|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r16.y, r10.xyzx, r34.xyzx
            dp3 r17.w, r27.xyzx, r34.xyzx
            add r17.w, -r35.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r7.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r17.w, r16.y
            min r15.w, r15.w, |r16.y|
            mov r35.z, r36.z
            dp3 r16.y, r10.xyzx, r35.xyzx
            dp3 r17.w, r27.xyzx, r35.xyzx
            add r17.w, -r36.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r7.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r17.w, r16.y
            min r15.w, r15.w, |r16.y|
            mov r36.z, r37.z
            dp3 r16.y, r10.xyzx, r36.xyzx
            dp3 r17.w, r27.xyzx, r36.xyzx
            add r17.w, -r37.w, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r7.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r17.w, r16.y
            min r15.w, r15.w, |r16.y|
            mov r37.z, r38.x
            dp3 r16.y, r10.xyzx, r37.xyzx
            dp3 r17.w, r27.xyzx, r37.xyzx
            add r17.w, -r38.y, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r7.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r17.w, r16.y
            min r15.w, r15.w, |r16.y|
            mov r39.zw, r38.zzzw
            dp3 r16.y, r10.zxyz, r39.xzwx
            dp3 r17.w, r27.zxyz, r39.xzwx
            add r17.w, -r39.y, r17.w
            ge r18.w, r17.w, l(0.000000)
            max r17.w, r7.z, |r17.w|
            movc r17.w, r18.w, r17.w, -r17.w
            max r16.y, -r16.y, l(0.00000010)
            div r16.y, r17.w, r16.y
            min r15.w, r15.w, |r16.y|
            mov r25.x, r31.w
            mov r25.yz, r32.zzwz
            add r25.xyz, r27.xyzx, r25.xyzx
            mad r25.xyz, r10.xyzx, r15.wwww, r25.xyzx
            dp3 r16.y, r25.xyzx, r25.xyzx
            sqrt r16.y, r16.y
            div r15.w, r15.w, r16.y
            add r15.w, r15.w, r15.w
            sqrt r15.w, r15.w
            mad r15.w, r6.w, l(5.000000), r15.w
            add r15.w, r15.w, l(-0.844800)
            mov r24.y, r29.z
            mov r24.z, r30.x
            dp3 r34.x, r25.xyzx, r24.xyzx
            mov r26.xy, r29.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r25.xyzx, r26.xyzx
            mov r30.x, r29.y
            dp3 r34.z, r25.xyzx, r30.xyzx
            ubfe r16.y, l(9), l(16), r26.w
            utof r34.w, r16.y
            sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r34.xyzw, t8.xyzw, s2, r15.w
            dp3 r29.x, r27.xyzx, r24.xyzx
            dp3 r29.y, r27.xyzx, r26.xyzx
            dp3 r29.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r29.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r1.xyzx, r24.xyzx
            dp3 r34.y, r1.xyzx, r26.xyzx
            dp3 r34.z, r1.xyzx, r30.xyzx
            lt r24.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r15.z, r24.x, l(0), l(0.500000)
            add r26.xyz, r15.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xzw, r34.xxyz, r34.xxyz
            mul r28.xzw, r14.xxxx, r28.xxzw
            movc r17.z, r24.y, l(0), l(0.500000)
            add r24.xyw, r17.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r24.xyw, r24.xywx, t18.xywz, s4, l(0.000000)
            mul r24.xyw, r28.zzzz, r24.xyxw
            mad r24.xyw, r26.xyxz, r28.xxxx, r24.xyxw
            movc r18.z, r24.z, l(0), l(0.500000)
            add r26.xyz, r18.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r24.xyz, r26.xyzx, r28.wwww, r24.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r24.xyzx, r26.xyzx
            dp3 r15.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r13.xyz, r24.xyzx, r26.xyzx, r13.xyzx
            mul r15.w, r7.w, r15.z
            mul r24.xyz, r14.xxxx, r25.xyzx
            dp3 r14.x, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r14.x, r7.w, r15.z, r14.x
            div r14.x, r15.w, r14.x
            mad r23.xyz, r24.xyzx, r14.xxxx, r23.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r21.xyzw, r23.xyzw
    mov r22.xyz, r13.xyzx
    iadd r9.w, r9.w, l(32)
  endloop 
  mov r20.xyzw, r21.zxyw
  mov r19.xyz, r22.xyzx
  mov r20.xyzw, r20.yzxw
else 
  mov r20.x, r19.w
endif 
max r6.w, r20.w, l(1.000000)
rcp r6.w, r6.w
mov_sat r20.w, r20.w
mul r12.xyz, r6.wwww, r19.xyzx
mul r13.xyz, r6.wwww, r20.xyzx
lt r7.z, r20.w, l(0.990000)
if_nz r7.z
  add r7.z, -r20.w, l(1.000000)
  mul r7.w, r7.z, cb2[19].x
  add r14.xyz, v6.xyzx, -cb2[35].xyzx
  mul r15.x, r14.x, cb2[35].w
  mul r15.yz, r14.yyzy, cb2[36].xxyx
  add_sat r14.xyz, r15.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r15.xy, r14.xyxx, cb2[36].zwzz
  mul r15.z, r14.z, cb2[37].x
  add r14.xyz, r15.xyzx, cb2[37].yzwy
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r17.xyz, r14.xyzx, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t17.xyzw, s4, l(0.000000)
  mul r18.xyz, r1.xyzx, r1.xyzx
  mul r18.xyz, r7.wwww, r18.xyzx
  add r20.xyz, r14.xyzx, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t18.xyzw, s4, l(0.000000)
  mul r20.xyz, r18.yyyy, r20.xyzx
  mad r17.xyz, r17.xyzx, r18.xxxx, r20.xyzx
  add r14.xyz, r14.xyzx, r15.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r14.xyz, r14.xyzx, t19.xyzw, s4, l(0.000000)
  mad r14.xyz, r14.xyzx, r18.zzzz, r17.xyzx
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r14.xyz, r14.xyzx, r15.xyzx
  dp3 r1.w, r14.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r12.xyz, r19.xyzx, r6.wwww, r14.xyzx
  mov r10.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r10.xyzw, t8.xyzw, s2, r7.y
  mad r6.w, cb2[19].x, r7.z, -r1.w
  mad r1.w, r5.y, r6.w, r1.w
  mad r13.xyz, r14.xyzx, r1.wwww, r13.xyzx
endif 
add r1.w, r0.w, r5.x
log r1.w, |r1.w|
mul r1.w, r1.w, r6.z
exp r1.w, r1.w
add r1.w, r0.w, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r12.xyz, r0.wwww, r12.yzxy
mad r7.zw, r5.xxxy, l(0.000000, 0.000000, 0.984375, 0.984375), l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r7.zw, r7.zwzz, t5.zwxy, s2, l(0.000000)
mul r13.xyz, r1.wwww, r13.xyzx
mul r14.xyz, r7.zzzz, r13.xyzx
mul r13.xyz, r7.wwww, r13.xyzx
sqrt r0.w, r6.z
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r0.w, r0.w, r0.w
mul r1.w, r0.w, l(0.500000)
mad r0.w, -r0.w, l(0.500000), l(1.000000)
mad r6.w, r5.x, r0.w, r1.w
mul r0.w, r0.w, r6.w
mul r1.w, r1.w, r6.w
dp3 r6.w, r1.xyzx, cb2[17].xyzx
ge r9.z, l(0.000000), |r6.w|
if_nz r9.z
  mov r9.w, l(0)
endif 
if_z r9.z
  mul r15.xyz, v6.yyyy, cb2[29].xyzx
  mad r15.xyz, v6.xxxx, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, v6.zzzz, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r10.w, r15.z, -cb2[17].w
  mad r10.w, -r10.w, l(0.00006104), l(1.000000)
  mov_sat r11.w, r10.w
  eq r11.w, r10.w, r11.w
  if_nz r11.w
    mov r11.w, l(0)
    mov r14.w, l(0)
    loop 
      ge r15.w, r11.w, l(3.000000)
      breakc_nz r15.w
      ftou r15.w, r11.w
      add r16.xy, r15.xyxx, -cb2[r15.w + 20].xyxx
      max r16.x, |r16.y|, |r16.x|
      mul r14.w, r16.x, cb2[r15.w + 20].z
      lt r15.w, r14.w, l(1.000000)
      if_nz r15.w
        break 
      endif 
      add r11.w, r11.w, l(1.000000)
      mov r14.w, l(0)
    endloop 
  else 
    mov r11.w, l(3.000000)
    mov r14.w, l(0)
  endif 
  ge r15.w, r11.w, l(3.000000)
  if_nz r15.w
    mul r17.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r18.xz, r17.xxxx
    mov r18.y, -r18.z
    mad r17.xyz, r15.xyxx, r18.xyzx, r17.yzyy
    add r18.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r17.xyz, r17.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r17.xyz, r18.xyzx, r17.xyzx
    mul r16.xy, r17.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r16.y, r16.y, cb2[27].x
    mad r16.x, r16.y, cb2[32].x, r16.x
    ftou r16.x, r16.x
    iadd r16.x, r16.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(0), t23.xxxx
    and r17.w, r16.y, l(0x40000000)
    ishl r18.x, r16.y, l(2)
    if_z r17.w
      and r17.w, r16.y, l(0x01ffffff)
      iadd r19.x, r16.x, r17.w
      ushr r16.x, r16.y, l(25)
      utof r16.x, r16.x
      mul r17.xyz, r16.xxxx, r17.xyzx
      frc r17.xyz, r17.xyzx
      mul r17.xyz, r17.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r17.xyz, r17.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      ushr r16.xy, r17.zyzz, l(6, 6, 0, 0)
      and r17.w, r19.z, l(0xc0000000)
      iadd r18.y, r19.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.y, r18.y, l(0), t23.xxxx
      movc r16.y, r16.y, r19.z, r18.y
      ushr r18.y, r16.y, l(13)
      movc r16.x, r16.x, r18.y, r16.y
      and r16.x, r16.x, l(8191)
      iadd r20.x, r16.x, r19.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
      mov r19.y, l(0)
      mov r20.y, l(1)
      movc r18.yzw, r17.wwww, r19.xxyz, r20.xxyz
      movc r20.yz, r17.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r16.xy, r17.zyzz, r20.yyyy
      and r16.xy, r16.xyxx, l(1, 1, 0, 0)
      and r19.w, r18.w, l(0xc0000000)
      iadd r20.y, r18.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.y, l(0), t23.xxxx
      movc r16.y, r16.y, r18.w, r20.y
      ushr r20.y, r16.y, l(13)
      movc r16.x, r16.x, r20.y, r16.y
      and r16.x, r16.x, l(8191)
      iadd r20.x, r16.x, r18.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.w, r20.x, l(0), t23.xxxx
      movc r18.yzw, r19.wwww, r18.yyzw, r20.xxzw
      movc r18.yzw, r17.wwww, r19.xxyz, r18.yyzw
      and r16.x, r18.w, l(0xc0000000)
      if_z r16.x
        iadd r16.x, -r18.z, l(6)
        ushr r16.xy, r17.zyzz, r16.xxxx
        or r17.w, r18.w, l(0x40000000)
        bfi r16.y, l(1), l(1), r16.y, l(0)
        bfi r16.x, l(1), l(0), r16.x, r16.y
        imul null, r16.x, r16.x, l(10)
        ushr r16.x, r17.w, r16.x
        and r16.x, r16.x, l(1023)
        iadd r19.x, r16.x, r18.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
        iadd r19.yz, r18.zzzz, l(0, 1, 2, 0)
        iadd r16.x, -r19.y, l(6)
        ushr r16.xy, r17.zyzz, r16.xxxx
        and r17.w, r19.w, l(0xc0000000)
        or r18.z, r19.w, l(0x40000000)
        bfi r16.y, l(1), l(1), r16.y, l(0)
        bfi r16.x, l(1), l(0), r16.x, r16.y
        imul null, r16.x, r16.x, l(10)
        ushr r16.x, r18.z, r16.x
        and r16.x, r16.x, l(1023)
        iadd r20.x, r16.x, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.z, r20.x, l(0), t23.xxxx
        mov r20.y, r19.z
        movc r20.xyz, r17.wwww, r19.xywx, r20.xyzx
        iadd r16.x, -r20.y, l(6)
        ushr r16.xy, r17.zyzz, r16.xxxx
        and r18.z, r20.z, l(0xc0000000)
        or r19.y, r20.z, l(0x40000000)
        bfi r16.y, l(1), l(1), r16.y, l(0)
        bfi r16.x, l(1), l(0), r16.x, r16.y
        imul null, r16.x, r16.x, l(10)
        ushr r16.x, r19.y, r16.x
        and r16.x, r16.x, l(1023)
        iadd r16.x, r16.x, r20.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(0), t23.xxxx
        movc r16.xy, r18.zzzz, r20.xzxx, r16.xyxx
        movc r18.yw, r17.wwww, r19.xxxw, r16.xxxy
      endif 
      and r16.x, r18.w, l(0xc0000000)
      if_z r16.x
        ubfe r16.y, l(14), l(15), r18.w
        utof r16.y, r16.y
        mul r16.y, r16.y, cb2[27].w
        mul r16.y, r16.y, l(0.00006104)
        and r19.xy, r18.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r17.w, r19.x
        mul r17.w, r17.w, cb2[27].w
        mul r17.w, r17.w, l(0.00003052)
        and r18.z, r17.y, l(3)
        iadd r18.z, r18.z, r18.y
        iadd r18.z, r18.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.z, l(0), t23.xxxx
        bfi r19.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r17.xxyz, l(0, 0, 0, 0)
        ushr r17.x, r18.z, r19.x
        and r17.x, r17.x, l(255)
        utof r17.x, r17.x
        mul r17.x, r17.w, r17.x
        mad r17.x, r17.x, l(0.00392157), r16.y
        iadd r17.y, r19.z, l(1)
        ubfe r17.z, l(1), l(1), r17.z
        iadd r17.y, r17.z, r17.y
        iadd r17.y, r17.y, r18.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.y, r17.y, l(0), t23.xxxx
        ushr r17.y, r17.y, r19.w
        and r17.y, r17.y, l(0x0000ffff)
        utof r17.y, r17.y
        mul r17.y, r17.w, r17.y
        mad r16.y, r17.y, l(0.00001526), r16.y
        movc r18.x, r19.y, r17.x, r16.y
      else 
        and r16.y, r18.w, l(0x80000000)
        iadd r17.x, r18.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
        movc r16.y, r16.y, r17.x, l(0)
        ishl r17.x, r18.w, l(2)
        ushr r17.y, r16.y, l(16)
        f16tof32 r17.y, r17.y
        and r16.y, r16.y, l(0x0000ffff)
        f16tof32 r16.y, r16.y
        mad r17.x, r15.x, r17.y, r17.x
        mad r16.y, r15.y, r16.y, r17.x
        movc r18.x, r16.x, r16.y, r18.x
      endif 
    endif 
    mad r15.z, -cb2[27].z, l(2.000000), r15.z
    lt r15.z, r18.x, r15.z
    movc r9.w, r15.z, l(0), l(1.000000)
  endif 
  if_z r15.w
    if_z cb2[58].y
      ftou r15.z, r11.w
      add r16.xy, r15.xyxx, -cb2[r15.z + 20].xyxx
      mul r15.zw, r16.xxxy, cb2[r15.z + 20].zzzz
      mad r17.xy, r15.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r15.z, cb2[26].y
      add r17.z, r11.w, r15.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.z, r17.xyzx, t13.xxxx, s13, r10.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t31.yzwx, s0, l(0.000000)
      add r15.z, r15.w, r15.z
      add_sat r15.z, r15.z, l(-1.000000)
      mul r15.w, r15.z, r15.z
      mul r9.w, r15.z, r15.w
    endif 
    if_nz cb2[58].y
      mov r17.x, -r7.x
      ftou r15.z, r11.w
      add r11.w, r11.w, l(1.000000)
      min r11.w, r11.w, l(2.000000)
      ftou r11.w, r11.w
      add r14.w, -r14.w, l(1.000000)
      mul r14.w, r14.w, l(28.000000)
      ftou r14.w, r14.w
      add r16.xy, r15.xyxx, -cb2[r15.z + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r15.z + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r15.xy, r15.xyxx, -cb2[r11.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r11.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r17.y, r8.x
      mov r17.z, r7.x
      mov r15.w, l(0)
      mov r17.w, l(0)
      loop 
        uge r18.x, r17.w, l(8)
        breakc_nz r18.x
        ult r18.x, r14.w, r17.w
        movc r18.yz, r18.xxxx, r15.xxyx, r16.xxyx
        movc r18.w, r18.x, cb2[r11.w + 20].w, cb2[r15.z + 20].w
        movc r18.x, r18.x, r11.w, r15.z
        dp2 r19.x, icb[r17.w + 0].yxyy, r17.xyxx
        dp2 r19.y, icb[r17.w + 0].yxyy, r17.yzyy
        mad r19.xy, r19.xyxx, r18.wwww, r18.yzyy
        iadd r18.x, r18.x, cb2[26].y
        utof r19.z, r18.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.x, r19.xyzx, t13.xxxx, s13, r10.w
        sample_l_indexable(texture2darray)(float,float,float,float) r18.y, r19.xyzx, t31.yxzw, s0, l(0.000000)
        add r18.x, r18.y, r18.x
        add_sat r18.x, r18.x, l(-1.000000)
        mad r15.w, r18.x, l(0.125000), r15.w
        iadd r17.w, r17.w, l(1)
      endloop 
      mul r10.w, r15.w, r15.w
      mul r9.w, r15.w, r10.w
    endif 
  endif 
endif 
lt r10.w, l(0.000000), |r6.w|
if_nz r10.w
  lt r11.w, l(0.000000), r9.w
  if_nz r11.w
    mul r11.w, r6.y, cb2[18].w
    mul r11.w, r11.w, l(0.250000)
    if_nz cb2[23].x
      add r15.xyz, v6.xyzx, cb1[24].xyzx
      mov r15.w, l(1.000000)
      dp4 r14.w, cb2[24].xyzw, r15.xyzw
      dp4 r15.x, cb2[25].xyzw, r15.xyzw
      frc r17.x, r14.w
      frc r17.y, r15.x
      iadd r14.w, l(-1), cb2[23].x
      utof r17.z, r14.w
      sample_l_indexable(texture2darray)(float,float,float,float) r15.xyz, r17.xyzx, t20.xyzw, s2, l(0.000000)
      add r15.xyz, r15.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r15.xyz, cb2[23].yyyy, r15.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r15.xyz, r15.xyzx, cb2[18].xyzx
    else 
      mov r15.xyz, cb2[18].xyzx
    endif 
    ushr r14.w, cb2[53].x, l(16)
    ult r15.w, l(0), r14.w
    and r15.w, r5.z, r15.w
    if_nz r15.w
      iadd r14.w, r14.w, cb2[0].x
      iadd r14.w, r14.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r14.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r14.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r14.w, l(148), t12.xyzw
      mad r16.x, |r6.w|, l(-0.200000), l(0.400000)
      lt r16.y, r6.w, l(0.000000)
      movc r16.x, r16.y, -r16.x, r16.x
      mad r21.xyz, r1.xyzx, r16.xxxx, v6.xyzx
      mov r21.w, l(1.000000)
      dp4 r16.x, r17.xyzw, r21.xyzw
      dp4 r16.y, r18.xyzw, r21.xyzw
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r16.xy, r20.zwzz, r16.xyxx
      mul r16.xy, r20.xyxx, r16.xyxx
      div r17.xy, r15.wwww, r19.xzxx
      add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r17.zw, r16.xxxy, r17.zzzw
      ge r17.xy, r17.xyxx, r16.xyxx
      or r17.xy, r17.xyxx, r17.zwzz
      or r17.x, r17.y, r17.x
      if_z r17.x
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.x, r14.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.yz, r14.w, l(164), t12.xxyx
        dp4 r14.w, r18.xyzw, r21.xyzw
        mov_sat r16.xy, r16.xyxx
        mad r18.xy, r16.xyxx, r19.xzxx, r19.ywyy
        add r14.w, r17.y, r14.w
        div r14.w, r14.w, r17.z
        max r14.w, r14.w, l(0.00006104)
        and r16.x, r17.x, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r7.x
          utof r19.z, r16.x
          mov r17.y, r8.x
          mov r17.z, r7.x
          mov r16.y, l(0)
          mov r17.w, l(0)
          loop 
            ige r18.w, r17.w, l(8)
            breakc_nz r18.w
            dp2 r20.x, icb[r17.w + 0].yxyy, r17.xyxx
            dp2 r20.y, icb[r17.w + 0].yxyy, r17.yzyy
            mad r19.xy, r20.xyxx, r15.wwww, r18.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r19.xyzx, t9.xxxx, s13, r14.w
            mad r16.y, r18.w, l(0.125000), r16.y
            iadd r17.w, r17.w, l(1)
          endloop 
        else 
          utof r18.z, r16.x
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.y, r18.xyzx, t9.xxxx, s13, r14.w
        endif 
        mul r14.w, r16.y, r16.y
        mul r14.w, r16.y, r14.w
      else 
        mov r14.w, l(1.000000)
      endif 
      mul r9.w, r9.w, r14.w
    else 
      and r14.w, cb2[53].x, l(0x0000ffff)
      ult r15.w, l(0), r14.w
      not r16.x, r5.z
      and r15.w, r15.w, r16.x
      if_nz r15.w
        iadd r14.w, r14.w, cb2[0].x
        iadd r14.w, r14.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r14.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r14.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r14.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r14.w, l(148), t12.xyzw
        mad r16.x, |r6.w|, l(-0.200000), l(0.400000)
        lt r16.y, r6.w, l(0.000000)
        movc r16.x, r16.y, -r16.x, r16.x
        mad r21.xyz, r1.xyzx, r16.xxxx, v6.xyzx
        mov r21.w, l(1.000000)
        dp4 r16.x, r17.xyzw, r21.xyzw
        dp4 r16.y, r18.xyzw, r21.xyzw
        mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r16.xy, r20.zwzz, r16.xyxx
        mul r16.xy, r20.xyxx, r16.xyxx
        div r17.xy, r15.wwww, r19.xzxx
        add r17.zw, -r17.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r17.zw, r16.xxxy, r17.zzzw
        ge r17.xy, r17.xyxx, r16.xyxx
        or r17.xy, r17.xyxx, r17.zwzz
        or r17.x, r17.y, r17.x
        if_z r17.x
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.x, r14.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.yz, r14.w, l(164), t12.xxyx
          dp4 r14.w, r18.xyzw, r21.xyzw
          mov_sat r16.xy, r16.xyxx
          mad r18.xy, r16.xyxx, r19.xzxx, r19.ywyy
          add r14.w, r17.y, r14.w
          div r14.w, r14.w, r17.z
          max r14.w, r14.w, l(0.00006104)
          and r16.x, r17.x, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r7.x
            utof r19.z, r16.x
            mov r17.y, r8.x
            mov r17.z, r7.x
            mov r16.y, l(0)
            mov r17.w, l(0)
            loop 
              ige r18.w, r17.w, l(8)
              breakc_nz r18.w
              dp2 r20.x, icb[r17.w + 0].yxyy, r17.xyxx
              dp2 r20.y, icb[r17.w + 0].yxyy, r17.yzyy
              mad r19.xy, r20.xyxx, r15.wwww, r18.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r19.xyzx, t9.xxxx, s13, r14.w
              mad r16.y, r18.w, l(0.125000), r16.y
              iadd r17.w, r17.w, l(1)
            endloop 
          else 
            utof r18.z, r16.x
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.y, r18.xyzx, t9.xxxx, s13, r14.w
          endif 
          mul r14.w, r16.y, r16.y
          mul r14.w, r16.y, r14.w
        else 
          mov r14.w, l(1.000000)
        endif 
        mul r9.w, r9.w, r14.w
      endif 
    endif 
    mad r14.w, -r5.x, l(0.500000), l(1.000000)
    mad r14.w, -|r6.w|, r14.w, l(1.000000)
    mul r14.w, r14.w, r14.w
    mad r14.w, -r14.w, l(0.620000), l(0.620000)
    add r14.w, -|r6.w|, r14.w
    mad r14.w, r6.z, r14.w, |r6.w|
    mul r14.w, r9.w, r14.w
    lt r15.w, l(0.000000), r6.w
    mad r17.xyz, r14.wwww, r15.yzxy, r12.xyzx
    mov_sat r14.w, r6.w
    mad r18.xyz, -v6.xyzx, r4.xxxx, cb2[17].xyzx
    dp3 r4.x, r18.xyzx, r18.xyzx
    rsq r4.x, r4.x
    mul r18.xyz, r4.xxxx, r18.xyzx
    dp3 r4.x, r18.xyzx, r4.yzwy
    dp3 r16.x, r1.xyzx, r18.xyzx
    mad r16.y, |r16.x|, r6.y, -|r16.x|
    mad r16.x, |r16.x|, r16.y, l(1.000000)
    mad r16.y, r14.w, r0.w, r1.w
    mul r16.x, r16.x, r16.x
    mul r16.x, r16.y, r16.x
    rcp r16.x, r16.x
    mul r11.w, r11.w, r14.w
    mul r11.w, r11.w, r16.x
    mul r9.w, r9.w, r11.w
    mad r18.yzw, r9.wwww, r15.xxyz, r13.xxyz
    add_sat r4.x, -r4.x, l(1.000000)
    mul r11.w, r4.x, r4.x
    mul r11.w, r11.w, r11.w
    mul r4.x, r4.x, r11.w
    mul r4.x, r4.x, r9.w
    mad r15.xyz, r4.xxxx, r15.xyzx, r14.xyzx
    mov r17.w, r12.z
    mov r12.w, r17.z
    movc r19.xyzw, r15.wwww, r17.zxyw, r12.zxyw
    mov r12.zw, r15.xxxy
    mov r17.zw, r14.xxxy
    movc r17.xyzw, r15.wwww, r12.xyzw, r17.xyzw
    mov r18.x, r15.z
    mov r13.w, r14.z
    movc r13.xyzw, r15.wwww, r18.yzwx, r13.xyzw
    mov r12.z, r19.w
    mov r12.xy, r17.xyxx
    mov r14.xy, r17.zwzz
    mov r14.z, r13.w
  else 
    mov r19.xyz, r12.zxyz
  endif 
else 
  mov r19.xyz, r12.zxyz
endif 
mov r15.x, -r7.x
not r4.x, r5.z
mad r5.x, -r5.x, l(0.500000), l(1.000000)
mov r17.xy, l(0,0,0,0)
mov r18.w, l(0)
mov r20.xyz, v6.xyzx
mov r20.w, l(1.000000)
mov r21.w, l(1.000000)
mov r15.z, r7.x
mov r22.w, l(1.000000)
mov r23.z, l(1.000000)
mov r24.w, l(1.000000)
mov r15.yw, r8.xxxx
mov r25.z, r7.x
mov r25.x, r15.w
mov r26.w, l(1.000000)
mov r8.y, r15.x
mov r8.z, r25.z
mov r27.w, l(1.000000)
mov r28.x, r8.x
mov r28.y, r15.x
mov r28.z, r25.z
mov r29.x, r8.x
mov r29.y, r15.x
mov r29.z, r25.z
mov r30.x, r8.x
mov r30.y, r15.x
mov r30.z, r25.z
mov r31.xyz, r19.xyzx
mov r32.xyz, r12.zxyz
mov r33.xyz, r14.xyzx
mov r34.xyz, r13.xyzx
mov r7.x, cb2[58].y
mov r9.w, l(0)
loop 
  uge r11.w, r9.w, cb2[0].x
  breakc_nz r11.w
  ushr r17.z, r9.w, l(5)
  iadd r18.xyz, r11.xyzx, r17.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r18.xyzw, t6.yzwx
  mov r18.xyz, r31.xyzx
  mov r35.xyz, r32.xyzx
  mov r36.xyz, r33.xyzx
  mov r37.xyz, r34.xyzx
  mov r12.w, r7.x
  mov r13.w, r11.w
  loop 
    breakc_z r13.w
    firstbit_lo r14.w, r13.w
    ishl r16.x, l(1), r14.w
    and r16.y, r13.w, r16.x
    if_nz r16.y
      xor r13.w, r13.w, r16.x
      iadd r14.w, r9.w, r14.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r39.xy, r14.w, l(16), t11.xyxx
      add r38.xyz, r38.xyzx, -v6.xyzx
      mov r39.z, r38.w
      lt r38.xyz, |r38.xyzx|, r39.zxyz
      and r16.x, r38.y, r38.x
      and r16.x, r38.z, r16.x
      if_nz r16.x
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r14.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r14.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r14.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r14.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r14.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r14.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r14.w, l(96), t12.yzwx
        ubfe r16.x, l(3), l(24), r39.w
        switch r16.x
          case l(4)
          lt r16.x, l(0.000000), r44.x
          mov r45.xy, r43.zwzz
          mov r45.z, r44.w
          mad r46.xyz, -r45.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r38.yzwy
          add r47.xyz, r46.xyzx, -v6.xyzx
          dp3 r16.y, r45.xyzx, r47.xyzx
          div_sat r17.z, -r16.y, r44.x
          mad r48.xyz, r17.zzzz, r45.xyzx, r46.xyzx
          movc r48.xyz, r16.xxxx, r48.xyzx, r38.yzwy
          add r48.xyz, r48.xyzx, -v6.xyzx
          dp3 r17.w, r48.xyzx, r48.xyzx
          rsq r19.w, r17.w
          mul r48.xyz, r19.wwww, r48.xyzx
          dp3 r19.w, r1.xyzx, r48.xyzx
          lt r23.w, l(0.000000), |r19.w|
          if_nz r23.w
            sqrt r23.w, r17.w
            mul r25.w, r41.x, r41.x
            div r17.w, r25.w, r17.w
            min r17.w, r17.w, l(1.000000)
            mad_sat r48.xy, r23.wwww, r40.xzxx, r40.ywyy
            mul r48.zw, r48.xxxy, r48.xxxy
            mad r48.xy, r48.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r48.xy, r48.xyxx, r48.zwzz
            mul r17.w, r17.w, r48.x
            mul r17.w, r48.y, r17.w
            lt r23.w, l(0.000000), r17.w
            if_nz r23.w
              ubfe r23.w, l(3), l(27), r39.w
              ine r23.w, r23.w, l(1)
              if_nz r23.w
                mad r23.w, |r19.w|, l(-0.200000), l(0.400000)
                lt r25.w, r19.w, l(0.000000)
                movc r23.w, r25.w, -r23.w, r23.w
                mad r48.xyz, r1.xyzx, r23.wwww, v6.xyzx
                add r48.xyz, -r42.xyzx, r48.xyzx
                max r23.w, |r48.z|, |r48.y|
                max r23.w, r23.w, |r48.x|
                div r23.w, r43.x, r23.w
                add r23.w, r43.y, r23.w
                dp3 r25.w, r48.xyzx, r48.xyzx
                rsq r25.w, r25.w
                max r23.w, r23.w, l(0.00006104)
                and r28.w, r39.w, l(0x0000ffff)
                utof r49.w, r28.w
                mov r28.w, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r50.y, icb[r29.w + 0].yxyy, r15.xyxx
                  dp2 r50.z, icb[r29.w + 0].yxyy, r15.yzyy
                  mul r50.yz, r41.yyyy, r50.yyzy
                  mul r50.x, r9.x, r50.y
                  mul r50.w, r6.x, r50.y
                  mad r49.xyz, r48.xyzx, r25.wwww, r50.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r30.w, r49.xyzw, t10.xxxx, s13, r23.w
                  mad r28.w, r30.w, l(0.125000), r28.w
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                mov r28.w, l(1.000000)
              endif 
              mul r17.w, r17.w, r28.w
              lt r23.w, l(0.000000), r17.w
              if_nz r23.w
                mul r23.w, r6.y, r39.x
                mul r23.w, r23.w, l(0.250000)
                dp3 r25.w, r45.xyzx, r10.xyzx
                dp3 r29.w, r10.xyzx, r47.xyzx
                mad r30.w, -r25.w, r25.w, r44.x
                mad r16.y, r25.w, r29.w, -r16.y
                div_sat r16.y, r16.y, r30.w
                div r25.w, r30.w, r44.x
                mul r25.w, r25.w, l(10.000000)
                min r25.w, r25.w, l(1.000000)
                add r16.y, -r17.z, r16.y
                mad r16.y, r25.w, r16.y, r17.z
                mad r45.xyz, r16.yyyy, r45.xyzx, r46.xyzx
                movc r45.xyz, r16.xxxx, r45.xyzx, r38.yzwy
                add r45.xyz, r45.xyzx, -v6.xyzx
                dp3 r16.x, r45.xyzx, r45.xyzx
                rsq r16.x, r16.x
                mul r46.xyz, r16.xxxx, r45.xyzx
                ubfe r16.y, l(4), l(16), r39.w
                ult r17.z, l(0), r16.y
                and r17.z, r5.z, r17.z
                if_nz r17.z
                  iadd r16.y, r16.y, cb2[0].x
                  iadd r16.y, r16.y, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.z, r16.y, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r16.y, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r16.y, l(116), t12.xyzw
                  mad r25.w, |r19.w|, l(-0.200000), l(0.400000)
                  lt r29.w, r19.w, l(0.000000)
                  movc r25.w, r29.w, -r25.w, r25.w
                  mad r21.xyz, r1.xyzx, r25.wwww, v6.xyzx
                  dp4 r25.w, r47.xyzw, r21.xyzw
                  dp4 r29.w, r48.xyzw, r21.xyzw
                  lt r30.w, r29.w, r25.w
                  if_z r30.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r16.y, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r16.y, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r16.y, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r16.y, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xy, r16.y, l(164), t12.xyxx
                    dp4 r47.x, r47.xyzw, r21.xyzw
                    dp4 r47.y, r48.xyzw, r21.xyzw
                    div r21.xy, r47.xyxx, r29.wwww
                    mad r21.xy, r21.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r21.xy, r50.zwzz, r21.xyxx
                    mul r21.xy, r50.xyxx, r21.xyxx
                    div r47.xy, r17.zzzz, r49.xzxx
                    add r47.zw, -r47.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r47.zw, r21.xxxy, r47.zzzw
                    ge r47.xy, r47.xyxx, r21.xyxx
                    or r47.xy, r47.xyxx, r47.zwzz
                    or r21.z, r47.y, r47.x
                    mov_sat r21.xy, r21.xyxx
                    mad r47.xy, r21.xyxx, r49.xzxx, r49.ywyy
                    mul r21.x, r29.w, r51.y
                    mad r21.y, r51.x, r29.w, r25.w
                    div r21.x, r21.y, r21.x
                  else 
                    mov r21.z, l(-1)
                  endif 
                  or r21.y, r30.w, r21.z
                  if_z r21.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(28), t12.xxxx
                    max r21.x, r21.x, l(0.00006104)
                    and r16.y, r16.y, l(0x0000ffff)
                    if_nz r12.w
                      utof r48.z, r16.y
                      mov r21.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r21.z, l(8)
                        breakc_nz r25.w
                        dp2 r49.x, icb[r21.z + 0].yxyy, r15.xwxx
                        dp2 r49.y, icb[r21.z + 0].yxyy, r25.xzxx
                        mad r48.xy, r49.xyxx, r17.zzzz, r47.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r48.xyzx, t9.xxxx, s13, r21.x
                        mad r21.y, r25.w, l(0.125000), r21.y
                        iadd r21.z, r21.z, l(1)
                      endloop 
                    else 
                      utof r47.z, r16.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.y, r47.xyzx, t9.xxxx, s13, r21.x
                    endif 
                    mul r16.y, r21.y, r21.y
                    mul r16.y, r21.y, r16.y
                  else 
                    mov r16.y, l(1.000000)
                  endif 
                  mul r17.w, r16.y, r17.w
                else 
                  ubfe r16.y, l(4), l(20), r39.w
                  ult r17.z, l(0), r16.y
                  and r17.z, r4.x, r17.z
                  if_nz r17.z
                    iadd r16.y, r16.y, cb2[0].x
                    iadd r16.y, r16.y, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.z, r16.y, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r16.y, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r16.y, l(116), t12.xyzw
                    mad r21.x, |r19.w|, l(-0.200000), l(0.400000)
                    lt r21.z, r19.w, l(0.000000)
                    movc r21.x, r21.z, -r21.x, r21.x
                    mad r22.xyz, r1.xyzx, r21.xxxx, v6.xyzx
                    dp4 r21.x, r47.xyzw, r22.xyzw
                    dp4 r21.z, r48.xyzw, r22.xyzw
                    lt r25.w, r21.z, r21.x
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r47.xyzw, r16.y, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r48.xyzw, r16.y, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r16.y, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r16.y, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xy, r16.y, l(164), t12.xyxx
                      dp4 r47.x, r47.xyzw, r22.xyzw
                      dp4 r47.y, r48.xyzw, r22.xyzw
                      div r22.xy, r47.xyxx, r21.zzzz
                      mad r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r22.xy, r50.zwzz, r22.xyxx
                      mul r22.xy, r50.xyxx, r22.xyxx
                      div r47.xy, r17.zzzz, r49.xzxx
                      add r47.zw, -r47.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r47.zw, r22.xxxy, r47.zzzw
                      ge r47.xy, r47.xyxx, r22.xyxx
                      or r47.xy, r47.xyxx, r47.zwzz
                      or r22.z, r47.y, r47.x
                      mov_sat r22.xy, r22.xyxx
                      mad r47.xy, r22.xyxx, r49.xzxx, r49.ywyy
                      mul r22.x, r21.z, r51.y
                      mad r21.x, r51.x, r21.z, r21.x
                      div r21.x, r21.x, r22.x
                    else 
                      mov r22.z, l(-1)
                    endif 
                    or r21.z, r25.w, r22.z
                    if_z r21.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(28), t12.xxxx
                      max r21.x, r21.x, l(0.00006104)
                      and r16.y, r16.y, l(0x0000ffff)
                      if_nz r12.w
                        utof r22.z, r16.y
                        mov r21.z, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r29.w, r25.w, l(8)
                          breakc_nz r29.w
                          dp2 r48.x, icb[r25.w + 0].xyxx, r8.xyxx
                          dp2 r48.y, icb[r25.w + 0].yxyy, r8.xzxx
                          mad r22.xy, r48.xyxx, r17.zzzz, r47.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.x, r22.xyzx, t9.xxxx, s13, r21.x
                          mad r21.z, r22.x, l(0.125000), r21.z
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r47.z, r16.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.z, r47.xyzx, t9.xxxx, s13, r21.x
                      endif 
                      mul r16.y, r21.z, r21.z
                      mul r16.y, r21.z, r16.y
                    else 
                      mov r16.y, l(1.000000)
                    endif 
                    mul r17.w, r16.y, r17.w
                  endif 
                endif 
                mad r16.y, -|r19.w|, r5.x, l(1.000000)
                mul r16.y, r16.y, r16.y
                mad r16.y, -r16.y, l(0.620000), l(0.620000)
                add r16.y, -|r19.w|, r16.y
                mad r16.y, r6.z, r16.y, |r19.w|
                mul r16.y, r17.w, r16.y
                mov r39.x, r38.x
                lt r17.z, l(0.000000), r19.w
                mad r22.xyz, r16.yyyy, r39.xyzx, r18.xyzx
                dp3_sat r19.w, r1.xyzx, r46.xyzx
                mad r45.xyz, r45.xyzx, r16.xxxx, r4.yzwy
                dp3 r16.x, r45.xyzx, r45.xyzx
                rsq r16.x, r16.x
                mul r45.xyz, r16.xxxx, r45.xyzx
                dp3 r16.x, r45.xyzx, r4.yzwy
                dp3 r21.x, r1.xyzx, r45.xyzx
                mad r25.w, |r21.x|, r6.y, -|r21.x|
                mad r21.x, |r21.x|, r25.w, l(1.000000)
                mad r25.w, r19.w, r0.w, r1.w
                mul r21.x, r21.x, r21.x
                mul r21.x, r25.w, r21.x
                rcp r21.x, r21.x
                mul r19.w, r23.w, r19.w
                mul r19.w, r19.w, r21.x
                mul r17.w, r17.w, r19.w
                mad r45.xyz, r17.wwww, r39.xyzx, r37.xyzx
                add_sat r16.x, -r16.x, l(1.000000)
                mul r19.w, r16.x, r16.x
                mul r19.w, r19.w, r19.w
                mul r16.x, r16.x, r19.w
                mul r16.x, r16.x, r17.w
                mad r46.xyz, r16.xxxx, r39.xyzx, r36.xyzx
                mad r47.xyz, r16.yyyy, r39.xyzx, r35.xyzx
                movc r18.xyz, r17.zzzz, r22.xyzx, r18.xyzx
                movc r35.xyz, r17.zzzz, r35.xyzx, r47.xyzx
                movc r36.xyz, r17.zzzz, r46.xyzx, r36.xyzx
                movc r37.xyz, r17.zzzz, r45.xyzx, r37.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r22.xy, r41.zwzz
          mov r22.z, r42.w
          add r22.xyz, r22.xyzx, -v6.xyzx
          dp3 r16.x, r22.xyzx, r22.xyzx
          rsq r16.x, r16.x
          mul r45.xyz, r16.xxxx, r22.xyzx
          dp3 r16.y, r1.xyzx, r45.xyzx
          lt r17.z, l(0.000000), |r16.y|
          if_nz r17.z
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r45.xyzw, r14.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.xyzw, r14.w, l(128), t12.zxyw
            mov r47.xyz, r45.xyzx
            mov r47.w, r46.y
            dp4 r17.z, r47.xyzw, r20.xyzw
            lt r17.w, r17.z, l(1.000000)
            if_nz r17.w
              mov r48.xyz, l(1.000000,1.000000,1.000000,0)
              mov r17.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r49.xyzw, r14.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r50.xyzw, r14.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r51.xyzw, r14.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.w, r14.w, l(236), t12.xxxx
              add r52.xyz, r38.yzwy, -v6.xyzx
              mul r21.x, r41.x, r41.x
              dp3 r23.w, r52.xyzx, r52.xyzx
              div r21.x, r21.x, r23.w
              min r21.x, r21.x, l(1.000000)
              mad_sat r40.xy, r17.zzzz, r40.xzxx, r40.ywyy
              mul r40.zw, r40.xxxy, r40.xxxy
              mad r40.xy, r40.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r40.xy, r40.xyxx, r40.zwzz
              mul r21.x, r21.x, r40.x
              mul r21.x, r40.y, r21.x
              mov r42.w, r43.x
              dp4 r40.x, r42.xyzw, r20.xyzw
              mov r52.xyz, r43.yzwy
              mov r52.w, r44.w
              dp4 r40.y, r52.xyzw, r20.xyzw
              div r23.xy, r40.xyxx, r17.zzzz
              lt r17.z, r49.w, l(0.00048828)
              if_nz r17.z
                mov r50.y, r51.x
                mad_sat r40.xy, |r23.xyxx|, r50.zwzz, r50.xyxx
                mul r40.zw, r40.xxxy, r40.xxxy
                mad r40.xy, r40.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r40.xy, r40.xyxx, r40.zwzz
                mul r17.z, r40.y, r40.x
              else 
                mov r49.w, r50.y
                mul_sat r40.xyzw, |r23.yyxx|, r49.xyzw
                log r40.xyzw, r40.xyzw
                mul r40.xyzw, r40.xyzw, r50.xxxx
                exp r40.xyzw, r40.xyzw
                add r40.xy, r40.zwzz, r40.xyxx
                log r40.xy, r40.xyxx
                mul r40.xy, r40.xyxx, r51.xxxx
                exp r40.xy, r40.xyxx
                mul r23.w, r40.x, r50.z
                mad r25.w, r50.w, r40.y, l(-1.000000)
                mad r23.w, r50.w, r40.y, -r23.w
                div_sat r23.w, r25.w, r23.w
                mul r25.w, r23.w, r23.w
                mad r23.w, r23.w, l(-2.000000), l(3.000000)
                mul r17.z, r23.w, r25.w
              endif 
              mul r17.w, r17.z, r21.x
              and r17.z, r19.w, l(255)
              if_nz r17.z
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyz, r14.w, l(220), t12.xyzx
                dp3 r19.w, r51.yzwy, r23.xyzx
                dp3 r21.x, r40.xyzx, r23.xyzx
                frc r40.x, r19.w
                frc r40.y, r21.x
                iadd r17.z, r17.z, l(-1)
                utof r40.z, r17.z
                sample_l_indexable(texture2darray)(float,float,float,float) r48.xyz, r40.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r48.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r38.yz, r39.yyzy
            mul r23.xyw, r48.xyxz, r38.xyxz
            lt r17.z, l(0.000000), r17.w
            if_nz r17.z
              ubfe r17.z, l(3), l(27), r39.w
              ine r17.z, r17.z, l(1)
              if_nz r17.z
                mad r17.z, |r16.y|, l(-0.200000), l(0.400000)
                lt r19.w, r16.y, l(0.000000)
                movc r17.z, r19.w, -r17.z, r17.z
                mad r24.xyz, r1.xyzx, r17.zzzz, v6.xyzx
                mov r45.xyz, r44.xyzx
                dp4 r17.z, r45.xyzw, r24.xyzw
                dp4 r19.w, r47.xyzw, r24.xyzw
                ge r21.x, r19.w, r17.z
                if_nz r21.x
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r46.y, r14.w, l(144), t12.xxxx
                  mov r42.w, r43.x
                  dp4 r38.x, r42.xyzw, r24.xyzw
                  mov r44.xyz, r43.yzwy
                  dp4 r38.y, r44.xyzw, r24.xyzw
                  div r24.xy, r38.xyxx, r19.wwww
                  mad_sat r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r24.xy, r24.xyxx, r46.zwzz, r46.xyxx
                  div r14.w, r17.z, r19.w
                  max r14.w, r14.w, l(0.00006104)
                  and r17.z, r39.w, l(0x0000ffff)
                  if_nz r12.w
                    utof r38.z, r17.z
                    mov r19.w, l(0)
                    mov r21.x, l(0)
                    loop 
                      ige r25.w, r21.x, l(8)
                      breakc_nz r25.w
                      dp2 r40.x, icb[r21.x + 0].xyxx, r28.xyxx
                      dp2 r40.y, icb[r21.x + 0].yxyy, r28.xzxx
                      mad r38.xy, r40.xyxx, r41.yyyy, r24.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r38.xyzx, t9.xxxx, s13, r14.w
                      mad r19.w, r25.w, l(0.125000), r19.w
                      iadd r21.x, r21.x, l(1)
                    endloop 
                  else 
                    utof r24.z, r17.z
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.w, r24.xyzx, t9.xxxx, s13, r14.w
                  endif 
                  mul r14.w, r19.w, r19.w
                  mul r14.w, r19.w, r14.w
                else 
                  mov r14.w, l(1.000000)
                endif 
              else 
                mov r14.w, l(1.000000)
              endif 
              mul r14.w, r14.w, r17.w
              lt r17.z, l(0.000000), r14.w
              if_nz r17.z
                mul r17.z, r6.y, r39.x
                mul r17.z, r17.z, l(0.250000)
                ubfe r17.w, l(4), l(16), r39.w
                ult r21.x, l(0), r17.w
                and r21.x, r5.z, r21.x
                if_nz r21.x
                  iadd r17.w, r17.w, cb2[0].x
                  iadd r17.w, r17.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r17.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r17.w, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r17.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r17.w, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r17.w, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r17.w, l(148), t12.xyzw
                  mad r24.x, |r16.y|, l(-0.200000), l(0.400000)
                  lt r24.y, r16.y, l(0.000000)
                  movc r24.x, r24.y, -r24.x, r24.x
                  mad r26.xyz, r1.xyzx, r24.xxxx, v6.xyzx
                  dp4 r24.x, r38.xyzw, r26.xyzw
                  dp4 r24.y, r40.xyzw, r26.xyzw
                  dp4 r24.z, r41.xyzw, r26.xyzw
                  dp4 r25.w, r42.xyzw, r26.xyzw
                  lt r26.x, r25.w, r24.z
                  div r24.xy, r24.xyxx, r25.wwww
                  mad r24.xy, r24.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r24.xy, r44.zwzz, r24.xyxx
                  mul r24.xy, r44.xyxx, r24.xyxx
                  div r26.yz, r21.xxxx, r43.xxzx
                  add r38.xy, -r26.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                  ge r38.xy, r24.xyxx, r38.xyxx
                  ge r26.yz, r26.yyzy, r24.xxyx
                  or r26.yz, r26.yyzy, r38.xxyx
                  or r26.y, r26.z, r26.y
                  or r26.x, r26.x, r26.y
                  if_z r26.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.x, r17.w, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.yz, r17.w, l(164), t12.xxyx
                    mov_sat r24.xy, r24.xyxx
                    mad r38.xy, r24.xyxx, r43.xzxx, r43.ywyy
                    mul r17.w, r25.w, r26.z
                    mad r24.x, r26.y, r25.w, r24.z
                    div r17.w, r24.x, r17.w
                    max r17.w, r17.w, l(0.00006104)
                    and r24.x, r26.x, l(0x0000ffff)
                    if_nz r12.w
                      utof r26.z, r24.x
                      mov r24.yz, l(0,0,0,0)
                      loop 
                        ige r25.w, r24.z, l(8)
                        breakc_nz r25.w
                        dp2 r39.x, icb[r24.z + 0].xyxx, r29.xyxx
                        dp2 r39.y, icb[r24.z + 0].yxyy, r29.xzxx
                        mad r26.xy, r39.xyxx, r21.xxxx, r38.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r26.xyzx, t9.xxxx, s13, r17.w
                        mad r24.y, r25.w, l(0.125000), r24.y
                        iadd r24.z, r24.z, l(1)
                      endloop 
                    else 
                      utof r38.z, r24.x
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.y, r38.xyzx, t9.xxxx, s13, r17.w
                    endif 
                    mul r17.w, r24.y, r24.y
                    mul r17.w, r24.y, r17.w
                  else 
                    mov r17.w, l(1.000000)
                  endif 
                  mul r14.w, r14.w, r17.w
                else 
                  ubfe r17.w, l(4), l(20), r39.w
                  ult r21.x, l(0), r17.w
                  and r21.x, r4.x, r21.x
                  if_nz r21.x
                    iadd r17.w, r17.w, cb2[0].x
                    iadd r17.w, r17.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r17.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r17.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r17.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r17.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r17.w, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r17.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r17.w, l(148), t12.xyzw
                    mad r24.x, |r16.y|, l(-0.200000), l(0.400000)
                    lt r24.z, r16.y, l(0.000000)
                    movc r24.x, r24.z, -r24.x, r24.x
                    mad r27.xyz, r1.xyzx, r24.xxxx, v6.xyzx
                    dp4 r26.x, r38.xyzw, r27.xyzw
                    dp4 r26.y, r39.xyzw, r27.xyzw
                    dp4 r24.x, r40.xyzw, r27.xyzw
                    dp4 r24.z, r41.xyzw, r27.xyzw
                    lt r25.w, r24.z, r24.x
                    div r26.xy, r26.xyxx, r24.zzzz
                    mad r26.xy, r26.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r26.xy, r43.zwzz, r26.xyxx
                    mul r26.xy, r43.xyxx, r26.xyxx
                    div r27.xy, r21.xxxx, r42.xzxx
                    add r38.xy, -r27.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r38.xy, r26.xyxx, r38.xyxx
                    ge r27.xy, r27.xyxx, r26.xyxx
                    or r27.xy, r27.xyxx, r38.xyxx
                    or r26.z, r27.y, r27.x
                    or r25.w, r25.w, r26.z
                    if_z r25.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.w, r17.w, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r27.xy, r17.w, l(164), t12.xyxx
                      mov_sat r26.xy, r26.xyxx
                      mad r26.xy, r26.xyxx, r42.xzxx, r42.ywyy
                      mul r17.w, r24.z, r27.y
                      mad r24.x, r27.x, r24.z, r24.x
                      div r17.w, r24.x, r17.w
                      max r17.w, r17.w, l(0.00006104)
                      and r24.x, r25.w, l(0x0000ffff)
                      if_nz r12.w
                        utof r27.z, r24.x
                        mov r24.z, l(0)
                        mov r25.w, l(0)
                        loop 
                          ige r29.w, r25.w, l(8)
                          breakc_nz r29.w
                          dp2 r38.x, icb[r25.w + 0].xyxx, r30.xyxx
                          dp2 r38.y, icb[r25.w + 0].yxyy, r30.xzxx
                          mad r27.xy, r38.xyxx, r21.xxxx, r26.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.x, r27.xyzx, t9.xxxx, s13, r17.w
                          mad r24.z, r27.x, l(0.125000), r24.z
                          iadd r25.w, r25.w, l(1)
                        endloop 
                      else 
                        utof r26.z, r24.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.z, r26.xyzx, t9.xxxx, s13, r17.w
                      endif 
                      mul r17.w, r24.z, r24.z
                      mul r17.w, r24.z, r17.w
                    else 
                      mov r17.w, l(1.000000)
                    endif 
                    mul r14.w, r14.w, r17.w
                  endif 
                endif 
                mad r17.w, -|r16.y|, r5.x, l(1.000000)
                mul r17.w, r17.w, r17.w
                mad r17.w, -r17.w, l(0.620000), l(0.620000)
                add r17.w, -|r16.y|, r17.w
                mad r17.w, r6.z, r17.w, |r16.y|
                mul r17.w, r14.w, r17.w
                lt r21.x, l(0.000000), r16.y
                mad r26.xyz, r17.wwww, r23.xywx, r18.xyzx
                mov_sat r16.y, r16.y
                mad r22.xyz, r22.xyzx, r16.xxxx, r4.yzwy
                dp3 r16.x, r22.xyzx, r22.xyzx
                rsq r16.x, r16.x
                mul r22.xyz, r16.xxxx, r22.xyzx
                dp3 r16.x, r22.xyzx, r4.yzwy
                dp3 r22.x, r1.xyzx, r22.xyzx
                mad r22.y, |r22.x|, r6.y, -|r22.x|
                mad r22.x, |r22.x|, r22.y, l(1.000000)
                mad r22.y, r16.y, r0.w, r1.w
                mul r22.x, r22.x, r22.x
                mul r22.x, r22.y, r22.x
                rcp r22.x, r22.x
                mul r16.y, r17.z, r16.y
                mul r16.y, r16.y, r22.x
                mul r14.w, r14.w, r16.y
                mad r22.xyz, r14.wwww, r23.xywx, r37.xyzx
                add_sat r16.x, -r16.x, l(1.000000)
                mul r16.y, r16.x, r16.x
                mul r16.y, r16.y, r16.y
                mul r16.x, r16.y, r16.x
                mul r14.w, r14.w, r16.x
                mad r27.xyz, r14.wwww, r23.xywx, r36.xyzx
                mad r23.xyw, r17.wwww, r23.xyxw, r35.xyxz
                movc r18.xyz, r21.xxxx, r26.xyzx, r18.xyzx
                movc r35.xyz, r21.xxxx, r35.xyzx, r23.xywx
                movc r36.xyz, r21.xxxx, r27.xyzx, r36.xyzx
                movc r37.xyz, r21.xxxx, r22.xyzx, r37.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r31.xyz, r18.xyzx
  mov r32.xyz, r35.xyzx
  mov r33.xyz, r36.xyzx
  mov r34.xyz, r37.xyzx
  iadd r9.w, r9.w, l(32)
endloop 
mov r6.xy, l(0,0,0,0)
mov r12.w, l(0)
mov r13.yz, l(0,0,1.000000,0)
mov r4.x, l(0)
mov r0.w, r2.w
loop 
  uge r1.w, r0.w, cb2[0].y
  breakc_nz r1.w
  ushr r6.z, r0.w, l(5)
  iadd r12.xyz, r6.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r1.w, r12.xyzw, t7.yzwx
  ieq r5.x, r2.w, r0.w
  bfi r5.z, r3.z, l(0), l(0), r1.w
  movc r1.w, r5.x, r5.z, r1.w
  ieq r5.x, r3.w, r0.w
  ubfe r5.z, r9.y, l(0), r1.w
  movc r1.w, r5.x, r5.z, r1.w
  iadd r5.x, r0.w, cb2[0].x
  mov r5.z, r4.x
  mov r6.z, r1.w
  loop 
    breakc_z r6.z
    firstbit_lo r7.x, r6.z
    ishl r8.y, l(1), r7.x
    and r8.z, r6.z, r8.y
    if_nz r8.z
      xor r6.z, r6.z, r8.y
      iadd r8.y, r5.x, r7.x
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xyzw, r8.y, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r8.y, l(16), t11.xyxx
      add r14.xyz, r14.xyzx, -v6.xyzx
      mov r12.z, r14.w
      lt r12.xyz, |r14.xyzx|, r12.zxyz
      and r8.y, r12.y, r12.x
      and r8.y, r12.z, r8.y
      if_nz r8.y
        iadd r7.x, r0.w, r7.x
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.xyz, r7.x, l(0), t15.xyzx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r8.yz, r7.x, l(96), t15.xxyx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r7.x, r7.x, l(120), t15.xxxx
        add r12.xyz, -r12.xyzx, v6.xyzx
        and r9.x, r7.x, l(0x0000ffff)
        ubfe r7.x, l(6), l(25), r7.x
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r14.xyzw, r9.x, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r9.x, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r9.x, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r9.x, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r9.x, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r9.x, l(80), t16.xyzw
        dp3 r9.w, r14.xyzx, r12.xyzx
        add_sat r9.w, r14.w, r9.w
        dp3 r11.w, r17.xyzx, r12.xyzx
        add_sat r11.w, r17.w, r11.w
        mul r9.w, r9.w, r11.w
        dp3 r11.w, r18.xyzx, r12.xyzx
        add_sat r11.w, r18.w, r11.w
        mul r9.w, r9.w, r11.w
        dp3 r11.w, r19.xyzx, r12.xyzx
        add_sat r11.w, r19.w, r11.w
        mul r9.w, r9.w, r11.w
        dp3 r11.w, r20.xyzx, r12.xyzx
        add_sat r11.w, r20.w, r11.w
        mul r9.w, r9.w, r11.w
        dp3 r11.w, r21.xyzx, r12.xyzx
        add_sat r11.w, r21.w, r11.w
        mul r13.x, r9.w, r11.w
        and r9.w, r8.y, l(1)
        movc r13.xw, r9.wwww, r13.xxxy, r13.zzzx
        mov r9.w, r8.y
        mov r14.xy, r13.xwxx
        mov r11.w, l(1)
        loop 
          ige r14.z, r11.w, r7.x
          breakc_nz r14.z
          iadd r14.z, r9.x, r11.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r14.z, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r14.z, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r14.z, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r14.z, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r14.z, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r14.z, l(80), t16.xyzw
          dp3 r14.z, r17.xyzx, r12.xyzx
          add_sat r14.z, r17.w, r14.z
          mul r14.z, r14.z, r14.x
          dp3 r14.w, r18.xyzx, r12.xyzx
          add_sat r14.w, r18.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r19.xyzx, r12.xyzx
          add_sat r14.w, r19.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r20.xyzx, r12.xyzx
          add_sat r14.w, r20.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r21.xyzx, r12.xyzx
          add_sat r14.w, r21.w, r14.w
          mul r14.z, r14.w, r14.z
          dp3 r14.w, r22.xyzx, r12.xyzx
          add_sat r14.w, r22.w, r14.w
          mul r14.x, r14.w, r14.z
          ushr r15.y, r9.w, l(2)
          ubfe r15.z, l(1), l(2), r9.w
          and r15.w, r15.y, l(2)
          max r16.x, r14.x, r14.y
          mad r14.z, -r14.z, r14.w, l(1.000000)
          mul r14.z, r14.z, r14.y
          movc r16.w, r15.w, r14.z, r16.x
          movc r14.xy, r15.zzzz, r14.xyxx, r16.zwzz
          iadd r11.w, r11.w, l(1)
          mov r9.w, r15.y
        endloop 
        mov_sat r14.y, r14.y
        mul r7.x, r8.z, r14.y
        lt r7.x, l(0.000000), r7.x
        if_nz r7.x
          mad r5.z, r14.y, r8.z, r5.z
        endif 
      endif 
    endif 
  endloop 
  mov r4.x, r5.z
  iadd r0.w, r0.w, l(32)
endloop 
lt r0.w, r4.x, l(1.000000)
if_nz r0.w
  mov r6.xy, l(0,0,0,0)
  mov r12.w, l(0)
  mov r13.yz, l(0,0,1.000000,0)
  mov r9.x, l(1.000000)
  mov r0.w, r4.x
  mov r1.w, r4.x
  mov r3.w, l(0)
  loop 
    uge r5.x, r3.w, r8.w
    breakc_nz r5.x
    ushr r6.z, r3.w, l(5)
    iadd r12.xyz, r6.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r5.x, r12.xyzw, t7.xyzw
    ieq r5.z, r2.w, r3.w
    ubfe r6.z, r3.z, l(0), r5.x
    movc r5.x, r5.z, r6.z, r5.x
    iadd r5.z, r3.w, cb2[0].x
    mov r6.z, r0.w
    mov r7.x, r1.w
    mov r8.y, r5.x
    loop 
      breakc_z r8.y
      firstbit_lo r8.z, r8.y
      ishl r9.w, l(1), r8.z
      and r11.w, r8.y, r9.w
      if_nz r11.w
        xor r8.y, r8.y, r9.w
        iadd r9.w, r5.z, r8.z
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r14.xyzw, r9.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r12.xy, r9.w, l(16), t11.xyxx
        add r14.xyz, r14.xyzx, -v6.xyzx
        mov r12.z, r14.w
        lt r12.xyz, |r14.xyzx|, r12.zxyz
        and r9.w, r12.y, r12.x
        and r9.w, r12.z, r9.w
        if_nz r9.w
          iadd r8.z, r3.w, r8.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r12.xyz, r8.z, l(0), t15.xyzx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.xy, r8.z, l(96), t15.xyxx
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r8.z, r8.z, l(120), t15.xxxx
          add r12.xyz, -r12.xyzx, v6.xyzx
          and r9.w, r8.z, l(0x0000ffff)
          ubfe r8.z, l(6), l(25), r8.z
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r16.xyzw, r9.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r9.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r9.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r9.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r9.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r9.w, l(80), t16.xyzw
          dp3 r11.w, r16.xyzx, r12.xyzx
          add_sat r11.w, r16.w, r11.w
          dp3 r13.w, r17.xyzx, r12.xyzx
          add_sat r13.w, r17.w, r13.w
          mul r11.w, r11.w, r13.w
          dp3 r13.w, r18.xyzx, r12.xyzx
          add_sat r13.w, r18.w, r13.w
          mul r11.w, r11.w, r13.w
          dp3 r13.w, r19.xyzx, r12.xyzx
          add_sat r13.w, r19.w, r13.w
          mul r11.w, r11.w, r13.w
          dp3 r13.w, r20.xyzx, r12.xyzx
          add_sat r13.w, r20.w, r13.w
          mul r11.w, r11.w, r13.w
          dp3 r13.w, r21.xyzx, r12.xyzx
          add_sat r13.w, r21.w, r13.w
          mul r13.x, r11.w, r13.w
          and r11.w, r14.x, l(1)
          movc r13.xw, r11.wwww, r13.xxxy, r13.zzzx
          mov r11.w, r14.x
          mov r16.xy, r13.xwxx
          mov r14.z, l(1)
          loop 
            ige r14.w, r14.z, r8.z
            breakc_nz r14.w
            iadd r14.w, r9.w, r14.z
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r17.xyzw, r14.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r19.xyzw, r14.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r20.xyzw, r14.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r14.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r14.w, l(80), t16.xyzw
            dp3 r14.w, r17.xyzx, r12.xyzx
            add_sat r14.w, r17.w, r14.w
            mul r14.w, r14.w, r16.x
            dp3 r15.y, r18.xyzx, r12.xyzx
            add_sat r15.y, r18.w, r15.y
            mul r14.w, r14.w, r15.y
            dp3 r15.y, r19.xyzx, r12.xyzx
            add_sat r15.y, r19.w, r15.y
            mul r14.w, r14.w, r15.y
            dp3 r15.y, r20.xyzx, r12.xyzx
            add_sat r15.y, r20.w, r15.y
            mul r14.w, r14.w, r15.y
            dp3 r15.y, r21.xyzx, r12.xyzx
            add_sat r15.y, r21.w, r15.y
            mul r14.w, r14.w, r15.y
            dp3 r15.y, r22.xyzx, r12.xyzx
            add_sat r15.y, r22.w, r15.y
            mul r16.x, r14.w, r15.y
            ushr r15.z, r11.w, l(2)
            ubfe r15.w, l(1), l(2), r11.w
            and r16.z, r15.z, l(2)
            max r16.w, r16.x, r16.y
            mad r14.w, -r14.w, r15.y, l(1.000000)
            mul r14.w, r14.w, r16.y
            movc r9.y, r16.z, r14.w, r16.w
            movc r16.xy, r15.wwww, r16.xyxx, r9.xyxx
            iadd r14.z, r14.z, l(1)
            mov r11.w, r15.z
          endloop 
          add_sat r8.z, -r7.x, r16.y
          mul r9.y, r14.y, r8.z
          lt r9.y, l(0.000000), r9.y
          if_nz r9.y
            mad r6.z, r8.z, r14.y, r6.z
          endif 
        endif 
      endif 
    endloop 
    mov r0.w, r6.z
    iadd r3.w, r3.w, l(32)
  endloop 
  mov r4.x, r0.w
endif 
mov_sat r4.x, r4.x
lt r0.w, r4.x, l(0.990000)
if_nz r0.w
  add r0.w, -r4.x, l(1.000000)
  mul r0.w, r0.w, cb2[19].x
  add r6.xyz, -r3.yyyy, r10.xyzx
  min r12.xyz, |r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
  dp3 r1.w, v6.xyzx, v6.xyzx
  rsq r1.w, r1.w
  mul r6.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, r12.xyzx, -r6.xyzx
  add r2.w, -r3.y, r1.w
  min r2.w, |r2.w|, l(1.000000)
  mul r2.w, r2.w, l(10.000000)
  min r2.w, r2.w, l(1.000000)
  mad r3.z, r2.w, l(-2.000000), l(3.000000)
  mul r2.w, r2.w, r2.w
  mad r2.w, -r3.z, r2.w, l(1.000000)
  mul r3.z, r2.w, r2.w
  mul r3.z, r3.z, r3.z
  mul r2.w, r2.w, r3.z
  mul r2.w, r3.x, r2.w
  mul r2.w, r2.w, cb2[19].x
  mul r2.w, r2.w, l(20.000000)
  add r1.w, r1.w, l(0.500000)
  mul_sat r1.w, r1.w, l(4.000000)
  mad r3.z, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r3.z
  mul r1.w, r1.w, r2.w
  mov r12.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r6.xyz, r12.xyzw, t8.xyzw, s2, r7.y
  mul r6.xyz, r1.wwww, r6.xyzx
  mul r0.w, r0.w, r5.y
  mul r5.xyz, r0.wwww, r6.xyzx
else 
  mov r5.xyz, l(0,0,0,0)
endif 
mul r12.xyz, r7.zzzz, r5.xyzx
mul r5.xyz, r7.wwww, r5.xyzx
if_nz r9.z
  mov r0.w, l(0)
endif 
if_z r9.z
  mul r6.xyz, v6.yyyy, cb2[29].xyzx
  mad r6.xyz, v6.xxxx, cb2[28].xyzx, r6.xyzx
  mad r6.xyz, v6.zzzz, cb2[30].xyzx, r6.xyzx
  add r6.xyz, r6.xyzx, cb2[31].xyzx
  add r1.w, r6.z, -cb2[17].w
  mad r1.w, -r1.w, l(0.00006104), l(1.000000)
  mov_sat r2.w, r1.w
  eq r2.w, r1.w, r2.w
  if_nz r2.w
    mov r2.w, l(0)
    mov r3.z, l(0)
    loop 
      ge r3.w, r2.w, l(3.000000)
      breakc_nz r3.w
      ftou r3.w, r2.w
      add r7.xy, r6.xyxx, -cb2[r3.w + 20].xyxx
      max r4.x, |r7.y|, |r7.x|
      mul r3.z, r4.x, cb2[r3.w + 20].z
      lt r3.w, r3.z, l(1.000000)
      if_nz r3.w
        break 
      endif 
      add r2.w, r2.w, l(1.000000)
      mov r3.z, l(0)
    endloop 
  else 
    mov r2.w, l(3.000000)
    mov r3.z, l(0)
  endif 
  ge r3.w, r2.w, l(3.000000)
  if_nz r3.w
    mul r7.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r9.xz, r7.xxxx
    mov r9.y, -r9.z
    mad r7.xyz, r6.xyxx, r9.xyzx, r7.yzyy
    add r8.yzw, l(0.000000, -0.00781250, -0.00781250, -0.00781250), cb2[27].xxyx
    max r7.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r7.xyz, r8.yzwy, r7.xyzx
    mul r8.yz, r7.zzyz, cb2[32].xxxx
    round_ni r8.yz, r8.yyzy
    mul r4.x, r8.z, cb2[27].x
    mad r4.x, r4.x, cb2[32].x, r8.y
    ftou r4.x, r4.x
    iadd r4.x, r4.x, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.w, r4.x, l(0), t23.xxxx
    and r8.y, r7.w, l(0x40000000)
    ishl r8.z, r7.w, l(2)
    if_z r8.y
      and r8.y, r7.w, l(0x01ffffff)
      iadd r9.x, r4.x, r8.y
      ushr r4.x, r7.w, l(25)
      utof r4.x, r4.x
      mul r7.xyz, r4.xxxx, r7.xyzx
      frc r7.xyz, r7.xyzx
      mul r7.xyz, r7.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r7.xyz, r7.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.z, r9.x, l(0), t23.xxxx
      ushr r8.yw, r7.zzzy, l(0, 6, 0, 6)
      and r4.x, r9.z, l(0xc0000000)
      iadd r7.w, r9.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.w, r7.w, l(0), t23.xxxx
      movc r7.w, r8.w, r9.z, r7.w
      ushr r8.w, r7.w, l(13)
      movc r7.w, r8.y, r8.w, r7.w
      and r7.w, r7.w, l(8191)
      iadd r13.x, r7.w, r9.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
      mov r9.y, l(0)
      mov r13.y, l(1)
      movc r13.xyz, r4.xxxx, r9.xyzx, r13.xyzx
      movc r14.yz, r4.xxxx, l(0,6,1,0), l(0,5,2,0)
      ushr r8.yw, r7.zzzy, r14.yyyy
      and r8.yw, r8.yyyw, l(0, 1, 0, 1)
      and r7.w, r13.z, l(0xc0000000)
      iadd r9.w, r13.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.w, r9.w, l(0), t23.xxxx
      movc r8.w, r8.w, r13.z, r9.w
      ushr r9.w, r8.w, l(13)
      movc r8.y, r8.y, r9.w, r8.w
      and r8.y, r8.y, l(8191)
      iadd r14.x, r8.y, r13.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.w, r14.x, l(0), t23.xxxx
      movc r13.xyz, r7.wwww, r13.xyzx, r14.xzwx
      movc r9.xyz, r4.xxxx, r9.xyzx, r13.xyzx
      and r4.x, r9.z, l(0xc0000000)
      if_z r4.x
        iadd r4.x, -r9.y, l(6)
        ushr r8.yw, r7.zzzy, r4.xxxx
        or r4.x, r9.z, l(0x40000000)
        bfi r7.w, l(1), l(1), r8.w, l(0)
        bfi r7.w, l(1), l(0), r8.y, r7.w
        imul null, r7.w, r7.w, l(10)
        ushr r4.x, r4.x, r7.w
        and r4.x, r4.x, l(1023)
        iadd r13.x, r4.x, r9.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.x, l(0), t23.xxxx
        iadd r13.yz, r9.yyyy, l(0, 1, 2, 0)
        iadd r4.x, -r13.y, l(6)
        ushr r8.yw, r7.zzzy, r4.xxxx
        and r4.x, r13.w, l(0xc0000000)
        or r7.w, r13.w, l(0x40000000)
        bfi r8.w, l(1), l(1), r8.w, l(0)
        bfi r8.y, l(1), l(0), r8.y, r8.w
        imul null, r8.y, r8.y, l(10)
        ushr r7.w, r7.w, r8.y
        and r7.w, r7.w, l(1023)
        iadd r14.x, r7.w, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.z, r14.x, l(0), t23.xxxx
        mov r14.y, r13.z
        movc r14.xyz, r4.xxxx, r13.xywx, r14.xyzx
        iadd r7.w, -r14.y, l(6)
        ushr r8.yw, r7.zzzy, r7.wwww
        and r7.w, r14.z, l(0xc0000000)
        or r9.y, r14.z, l(0x40000000)
        bfi r8.w, l(1), l(1), r8.w, l(0)
        bfi r8.y, l(1), l(0), r8.y, r8.w
        imul null, r8.y, r8.y, l(10)
        ushr r8.y, r9.y, r8.y
        and r8.y, r8.y, l(1023)
        iadd r16.x, r8.y, r14.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(0), t23.xxxx
        movc r8.yw, r7.wwww, r14.xxxz, r16.xxxy
        movc r9.xz, r4.xxxx, r13.xxwx, r8.yywy
      endif 
      and r4.x, r9.z, l(0xc0000000)
      if_z r4.x
        ubfe r7.w, l(14), l(15), r9.z
        utof r7.w, r7.w
        mul r7.w, r7.w, cb2[27].w
        mul r7.w, r7.w, l(0.00006104)
        and r8.yw, r9.zzzz, l(0, 0x00007fff, 0, 0x20000000)
        utof r8.y, r8.y
        mul r8.y, r8.y, cb2[27].w
        mul r8.y, r8.y, l(0.00003052)
        and r9.y, r7.y, l(3)
        iadd r9.y, r9.y, r9.x
        iadd r9.y, r9.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r9.y, r9.y, l(0), t23.xxxx
        bfi r13.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r7.xyzx, l(0, 0, 0, 0)
        ushr r7.x, r9.y, r13.x
        and r7.x, r7.x, l(255)
        utof r7.x, r7.x
        mul r7.x, r8.y, r7.x
        mad r7.x, r7.x, l(0.00392157), r7.w
        iadd r7.y, r13.y, l(1)
        ubfe r7.z, l(1), l(1), r7.z
        iadd r7.y, r7.z, r7.y
        iadd r7.y, r7.y, r9.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.y, r7.y, l(0), t23.xxxx
        ushr r7.y, r7.y, r13.z
        and r7.y, r7.y, l(0x0000ffff)
        utof r7.y, r7.y
        mul r7.y, r8.y, r7.y
        mad r7.y, r7.y, l(0.00001526), r7.w
        movc r8.z, r8.w, r7.x, r7.y
      else 
        and r7.x, r9.z, l(0x80000000)
        iadd r7.y, r9.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r7.y, r7.y, l(0), t23.xxxx
        movc r7.x, r7.x, r7.y, l(0)
        ishl r7.y, r9.z, l(2)
        ushr r7.z, r7.x, l(16)
        and r7.x, r7.x, l(0x0000ffff)
        f16tof32 r7.xz, r7.xxzx
        mad r7.y, r6.x, r7.z, r7.y
        mad r7.x, r6.y, r7.x, r7.y
        movc r8.z, r4.x, r7.x, r8.z
      endif 
    endif 
    mad r4.x, -cb2[27].z, l(2.000000), r6.z
    lt r4.x, r8.z, r4.x
    movc r0.w, r4.x, l(0), l(1.000000)
  endif 
  if_z r3.w
    if_z cb2[58].y
      ftou r3.w, r2.w
      add r7.xy, r6.xyxx, -cb2[r3.w + 20].xyxx
      mul r7.xy, r7.xyxx, cb2[r3.w + 20].zzzz
      mad r7.xy, r7.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r3.w, cb2[26].y
      add r7.z, r2.w, r3.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r3.w, r7.xyzx, t13.xxxx, s13, r1.w
      sample_l_indexable(texture2darray)(float,float,float,float) r4.x, r7.xyzx, t31.xyzw, s0, l(0.000000)
      add r3.w, r3.w, r4.x
      add_sat r3.w, r3.w, l(-1.000000)
      mul r4.x, r3.w, r3.w
      mul r0.w, r3.w, r4.x
    endif 
    if_nz cb2[58].y
      ftou r3.w, r2.w
      add r2.w, r2.w, l(1.000000)
      min r2.w, r2.w, l(2.000000)
      ftou r2.w, r2.w
      add r3.z, -r3.z, l(1.000000)
      mul r3.z, r3.z, l(28.000000)
      ftou r3.z, r3.z
      add r7.xy, r6.xyxx, -cb2[r3.w + 20].xyxx
      mul r7.xy, r7.xyxx, cb2[r3.w + 20].zzzz
      mad r7.xy, r7.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r6.xy, r6.xyxx, -cb2[r2.w + 20].xyxx
      mul r6.xy, r6.xyxx, cb2[r2.w + 20].zzzz
      mad r6.xy, r6.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r25.x, r8.x
      mov r25.y, r15.x
      mov r4.x, l(0)
      mov r6.z, l(0)
      loop 
        uge r7.z, r6.z, l(8)
        breakc_nz r7.z
        ult r7.z, r3.z, r6.z
        movc r8.xy, r7.zzzz, r6.xyxx, r7.xyxx
        movc r7.w, r7.z, cb2[r2.w + 20].w, cb2[r3.w + 20].w
        movc r7.z, r7.z, r2.w, r3.w
        dp2 r9.x, icb[r6.z + 0].xyxx, r25.xyxx
        dp2 r9.y, icb[r6.z + 0].yxyy, r25.xzxx
        mad r8.xy, r9.xyxx, r7.wwww, r8.xyxx
        iadd r7.z, r7.z, cb2[26].y
        utof r8.z, r7.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r7.z, r8.xyzx, t13.xxxx, s13, r1.w
        sample_l_indexable(texture2darray)(float,float,float,float) r7.w, r8.xyzx, t31.yzwx, s0, l(0.000000)
        add r7.z, r7.w, r7.z
        add_sat r7.z, r7.z, l(-1.000000)
        mad r4.x, r7.z, l(0.125000), r4.x
        iadd r6.z, r6.z, l(1)
      endloop 
      mul r1.w, r4.x, r4.x
      mul r0.w, r4.x, r1.w
    endif 
  endif 
endif 
if_nz r10.w
  lt r0.w, l(0.000000), r0.w
  if_nz r0.w
    if_nz cb2[23].x
      add r7.xyz, v6.xyzx, cb1[24].xyzx
      mov r7.w, l(1.000000)
      dp4 r0.w, cb2[24].xyzw, r7.xyzw
      dp4 r1.w, cb2[25].xyzw, r7.xyzw
      frc r6.x, r0.w
      frc r6.y, r1.w
      iadd r0.w, l(-1), cb2[23].x
      utof r6.z, r0.w
      sample_l_indexable(texture2darray)(float,float,float,float) r6.xyz, r6.xyzx, t20.xyzw, s2, l(0.000000)
      add r6.xyz, r6.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r6.xyz, cb2[23].yyyy, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r6.xyz, r6.xyzx, cb2[18].xyzx
    else 
      mov r6.xyz, cb2[18].xyzx
    endif 
    lt r0.w, l(0.000000), r6.w
    add r1.w, r5.w, r5.w
    mad r7.xyz, r1.xyzx, -r1.wwww, r4.yzwy
    dp3 r1.w, r7.xyzx, -cb2[17].xyzx
    add r2.w, -r3.y, r1.w
    min r2.w, |r2.w|, l(1.000000)
    mul r2.w, r2.w, l(10.000000)
    min r2.w, r2.w, l(1.000000)
    mad r3.z, r2.w, l(-2.000000), l(3.000000)
    mul r2.w, r2.w, r2.w
    mad r2.w, -r3.z, r2.w, l(1.000000)
    mul r3.z, r2.w, r2.w
    mul r3.z, r3.z, r3.z
    mul r2.w, r2.w, r3.z
    mul r2.w, r3.x, r2.w
    mul r2.w, r2.w, l(20.000000)
    add r1.w, r1.w, l(0.500000)
    mul_sat r1.w, r1.w, l(4.000000)
    mad r3.z, r1.w, l(-2.000000), l(3.000000)
    mul r1.w, r1.w, r1.w
    mul r1.w, r1.w, r3.z
    mul r3.z, r1.w, r2.w
    mad r7.xyz, r3.zzzz, r6.xyzx, r5.xyzx
    mad_sat r1.w, -r2.w, r1.w, l(1.000000)
    mul r2.w, r1.w, r1.w
    mul r2.w, r2.w, r2.w
    mul r1.w, r1.w, r2.w
    mul r1.w, r1.w, r3.z
    mad r6.xyz, r1.wwww, r6.xyzx, r12.xyzx
    mov r6.w, r7.x
    mov r12.w, r5.x
    movc r12.xyzw, r0.wwww, r6.xyzw, r12.xyzw
    movc r5.yz, r0.wwww, r7.yyzy, r5.yyzy
    mov r5.x, r12.w
  endif 
endif 
add r0.w, r5.w, r5.w
mad r4.xyz, r1.xyzx, -r0.wwww, r4.yzwy
mov r6.xy, l(0,0,0,0)
mov r7.w, l(0)
mov r8.xyz, v6.xyzx
mov r8.w, l(1.000000)
mov r9.z, l(1.000000)
mov r13.xyz, r12.xyzx
mov r14.xyz, r5.xyzx
mov r0.w, l(0)
loop 
  uge r1.w, r0.w, cb2[0].x
  breakc_nz r1.w
  ushr r6.z, r0.w, l(5)
  iadd r7.xyz, r6.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r1.w, r7.xyzw, t6.yzwx
  mov r7.xyz, r13.xyzx
  mov r15.xyz, r14.xyzx
  mov r2.w, r1.w
  loop 
    breakc_z r2.w
    firstbit_lo r3.z, r2.w
    ishl r3.w, l(1), r3.z
    and r4.w, r2.w, r3.w
    if_nz r4.w
      xor r2.w, r2.w, r3.w
      iadd r3.z, r0.w, r3.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r3.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r3.z, l(16), t11.xyxx
      add r16.xyz, r16.xyzx, -v6.xyzx
      mov r17.z, r16.w
      lt r16.xyz, |r16.xyzx|, r17.zxyz
      and r3.w, r16.y, r16.x
      and r3.w, r16.z, r3.w
      if_nz r3.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r3.z, l(0), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xy, r3.z, l(16), t12.xyxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r3.z, l(28), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r6.zw, r3.z, l(44), t12.xxxy
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r3.z, l(88), t12.wxyz
        ubfe r3.w, l(3), l(24), r18.x
        switch r3.w
          case l(4)
          lt r3.w, l(0.000000), r19.x
          mad r20.xyz, -r19.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r16.xyzx
          add r21.xyz, r20.xyzx, -v6.xyzx
          dp3 r4.w, r19.yzwy, r21.xyzx
          div_sat r5.w, -r4.w, r19.x
          mad r22.xyz, r5.wwww, r19.yzwy, r20.xyzx
          movc r22.xyz, r3.wwww, r22.xyzx, r16.xyzx
          add r22.xyz, r22.xyzx, -v6.xyzx
          dp3 r9.w, r22.xyzx, r22.xyzx
          rsq r10.w, r9.w
          mul r22.xyz, r10.wwww, r22.xyzx
          dp3 r10.w, r1.xyzx, r22.xyzx
          lt r11.w, l(0.000000), |r10.w|
          if_nz r11.w
            sqrt r11.w, r9.w
            mul r12.w, r6.w, r6.w
            div r9.w, r12.w, r9.w
            min r9.w, r9.w, l(1.000000)
            mad_sat r12.w, r11.w, r18.y, r18.z
            mad_sat r11.w, r11.w, r18.w, r6.z
            mul r13.w, r12.w, r12.w
            mad r12.w, r12.w, l(-2.000000), l(3.000000)
            mul r12.w, r12.w, r13.w
            mul r9.w, r9.w, r12.w
            mul r12.w, r11.w, r11.w
            mad r11.w, r11.w, l(-2.000000), l(3.000000)
            mul r11.w, r11.w, r12.w
            mul r9.w, r9.w, r11.w
            lt r9.w, l(0.000000), r9.w
            if_nz r9.w
              dp3 r9.w, r19.yzwy, r10.xyzx
              dp3 r11.w, r10.xyzx, r21.xyzx
              mad r12.w, -r9.w, r9.w, r19.x
              mad r4.w, r9.w, r11.w, -r4.w
              div_sat r4.w, r4.w, r12.w
              div r9.w, r12.w, r19.x
              mul r9.w, r9.w, l(10.000000)
              min r9.w, r9.w, l(1.000000)
              add r4.w, -r5.w, r4.w
              mad r4.w, r9.w, r4.w, r5.w
              mad r20.xyz, r4.wwww, r19.yzwy, r20.xyzx
              movc r20.xyz, r3.wwww, r20.xyzx, r16.xyzx
              add r20.xyz, r20.xyzx, -v6.xyzx
              dp3 r3.w, r20.xyzx, r20.xyzx
              rsq r3.w, r3.w
              mul r20.xyz, r3.wwww, r20.xyzx
              lt r3.w, l(0.000000), r10.w
              dp3 r4.w, r4.xyzx, -r20.xyzx
              add r5.w, -r3.y, r4.w
              min r5.w, |r5.w|, l(1.000000)
              mul r5.w, r5.w, l(10.000000)
              min r5.w, r5.w, l(1.000000)
              mad r9.w, r5.w, l(-2.000000), l(3.000000)
              mul r5.w, r5.w, r5.w
              mad r5.w, -r9.w, r5.w, l(1.000000)
              mul r9.w, r5.w, r5.w
              mul r9.w, r9.w, r9.w
              mul r5.w, r5.w, r9.w
              mul r5.w, r3.x, r5.w
              mul r5.w, r5.w, l(20.000000)
              add r4.w, r4.w, l(0.500000)
              mul_sat r4.w, r4.w, l(4.000000)
              mad r9.w, r4.w, l(-2.000000), l(3.000000)
              mul r4.w, r4.w, r4.w
              mul r4.w, r4.w, r9.w
              mul r9.w, r4.w, r5.w
              mov r17.z, r16.w
              mad r20.xyz, r9.wwww, r17.zxyz, r15.xyzx
              mad_sat r4.w, -r5.w, r4.w, l(1.000000)
              mul r5.w, r4.w, r4.w
              mul r5.w, r5.w, r5.w
              mul r4.w, r4.w, r5.w
              mul r4.w, r4.w, r9.w
              mad r21.xyz, r4.wwww, r17.zxyz, r7.xyzx
              movc r7.xyz, r3.wwww, r21.xyzx, r7.xyzx
              movc r15.xyz, r3.wwww, r20.xyzx, r15.xyzx
            endif 
          endif 
          break 
          case l(2)
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.xyzw, r3.z, l(56), t12.wxyz
          add r21.xyz, r20.yzwy, -v6.xyzx
          dp3 r3.w, r21.xyzx, r21.xyzx
          rsq r3.w, r3.w
          mul r21.xyz, r3.wwww, r21.xyzx
          dp3 r3.w, r1.xyzx, r21.xyzx
          lt r4.w, l(0.000000), |r3.w|
          if_nz r4.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.xyzw, r3.z, l(116), t12.xyzw
            dp4 r4.w, r22.xyzw, r8.xyzw
            lt r5.w, r4.w, l(1.000000)
            if_nz r5.w
              mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              mov r5.w, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.xyzw, r3.z, l(72), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.xyzw, r3.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r25.xyzw, r3.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r26.xyzw, r3.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r3.z, l(236), t12.xxxx
              add r16.xyz, r16.xyzx, -v6.xyzx
              mul r6.w, r6.w, r6.w
              dp3 r10.w, r16.xyzx, r16.xyzx
              div r6.w, r6.w, r10.w
              min r6.w, r6.w, l(1.000000)
              mad_sat r10.w, r4.w, r18.y, r18.z
              mad_sat r6.z, r4.w, r18.w, r6.z
              mul r11.w, r10.w, r10.w
              mad r10.w, r10.w, l(-2.000000), l(3.000000)
              mul r10.w, r10.w, r11.w
              mul r6.w, r6.w, r10.w
              mul r10.w, r6.z, r6.z
              mad r6.z, r6.z, l(-2.000000), l(3.000000)
              mul r6.z, r6.z, r10.w
              mul r6.z, r6.z, r6.w
              mov r20.yzw, r23.xxyz
              dp4 r16.x, r20.xyzw, r8.xyzw
              mov r19.x, r23.w
              dp4 r16.y, r19.xyzw, r8.xyzw
              div r9.xy, r16.xyxx, r4.wwww
              lt r4.w, r24.w, l(0.00048828)
              if_nz r4.w
                mov r25.y, r26.x
                mad_sat r16.xy, |r9.xyxx|, r25.zwzz, r25.xyxx
                mul r18.xy, r16.xyxx, r16.xyxx
                mad r16.xy, r16.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r16.xy, r16.xyxx, r18.xyxx
                mul r4.w, r16.y, r16.x
              else 
                mov r24.w, r25.y
                mul_sat r18.xyzw, |r9.yyxx|, r24.xyzw
                log r18.xyzw, r18.xyzw
                mul r18.xyzw, r18.xyzw, r25.xxxx
                exp r18.xyzw, r18.xyzw
                add r16.xy, r18.zwzz, r18.xyxx
                log r16.xy, r16.xyxx
                mul r16.xy, r16.xyxx, r26.xxxx
                exp r16.xy, r16.xyxx
                mul r6.w, r16.x, r25.z
                mad r10.w, r25.w, r16.y, l(-1.000000)
                mad r6.w, r25.w, r16.y, -r6.w
                div_sat r6.w, r10.w, r6.w
                mul r10.w, r6.w, r6.w
                mad r6.w, r6.w, l(-2.000000), l(3.000000)
                mul r4.w, r6.w, r10.w
              endif 
              mul r5.w, r4.w, r6.z
              and r4.w, r9.w, l(255)
              if_nz r4.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyz, r3.z, l(220), t12.xyzx
                dp3 r3.z, r26.yzwy, r9.xyzx
                dp3 r6.z, r16.xyzx, r9.xyzx
                frc r16.x, r3.z
                frc r16.y, r6.z
                iadd r3.z, r4.w, l(-1)
                utof r16.z, r3.z
                sample_l_indexable(texture2darray)(float,float,float,float) r22.xyz, r16.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r22.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r17.w, r16.w
            mul r9.xyw, r17.wxwy, r22.xyxz
            lt r3.z, l(0.000000), r5.w
            if_nz r3.z
              lt r3.z, l(0.000000), r3.w
              dp3 r3.w, r4.xyzx, -r21.xyzx
              add r4.w, -r3.y, r3.w
              min r4.w, |r4.w|, l(1.000000)
              mul r4.w, r4.w, l(10.000000)
              min r4.w, r4.w, l(1.000000)
              mad r5.w, r4.w, l(-2.000000), l(3.000000)
              mul r4.w, r4.w, r4.w
              mad r4.w, -r5.w, r4.w, l(1.000000)
              mul r5.w, r4.w, r4.w
              mul r5.w, r5.w, r5.w
              mul r4.w, r4.w, r5.w
              mul r4.w, r3.x, r4.w
              mul r4.w, r4.w, l(20.000000)
              add r3.w, r3.w, l(0.500000)
              mul_sat r3.w, r3.w, l(4.000000)
              mad r5.w, r3.w, l(-2.000000), l(3.000000)
              mul r3.w, r3.w, r3.w
              mul r3.w, r3.w, r5.w
              mul r5.w, r3.w, r4.w
              mad r16.xyz, r5.wwww, r9.xywx, r15.xyzx
              mad_sat r3.w, -r4.w, r3.w, l(1.000000)
              mul r4.w, r3.w, r3.w
              mul r4.w, r4.w, r4.w
              mul r3.w, r3.w, r4.w
              mul r3.w, r3.w, r5.w
              mad r9.xyw, r3.wwww, r9.xyxw, r7.xyxz
              movc r7.xyz, r3.zzzz, r9.xywx, r7.xyzx
              movc r15.xyz, r3.zzzz, r16.xyzx, r15.xyzx
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r13.xyz, r7.xyzx
  mov r14.xyz, r15.xyzx
  iadd r0.w, r0.w, l(32)
endloop 
mul r1.xyz, r2.xyzx, r32.xyzx
mad r0.xyz, r31.xyzx, r0.xyzx, r1.xyzx
mul r1.xyz, r33.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r1.xyz, r34.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
add r1.xyz, -cb0[14].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r13.xyzx
mad r1.xyz, r14.xyzx, cb0[14].xyzx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v6.xyzx, v6.xyzx
  rsq r1.x, r0.w
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.w, r0.w
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.w, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.wwww, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xyzx, r2.xyzx, r1.xyzx
else 
  mul r0.w, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.w|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.w, r2.x, l(1.000000), r0.w
  div r0.w, r1.w, r0.w
  movc r0.w, r2.x, r2.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.w, r0.w, r2.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r2.w
  add r2.xyz, -r0.xyzx, r2.xyzx
  mad r1.xyz, r0.wwww, r2.xyzx, r0.xyzx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 2744 instruction slots used
