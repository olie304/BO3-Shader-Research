//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:23:03 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4
//   uint enableCountDebug;             // Offset:  836 Size:     4
//   uint centerGroupIDx;               // Offset:  840 Size:     4
//   uint centerGroupIDy;               // Offset:  844 Size:     4
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4
//   float drawNumLighstScale;          // Offset:  856 Size:     4
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4
//   uint showAO;                       // Offset:  880 Size:     4
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for lightingDebug
// {
//
//   struct LightingDebug
//   {
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:    0
//           uint activeLights;         // Offset:    4
//           uint litLights;            // Offset:    8
//           uint visibleProbes;        // Offset:   12
//           uint activeProbes;         // Offset:   16
//
//       } maxCounts;                   // Offset:    0
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   20
//           uint activeLights;         // Offset:   24
//           uint litLights;            // Offset:   28
//           uint visibleProbes;        // Offset:   32
//           uint activeProbes;         // Offset:   36
//
//       } centerCounts;                // Offset:   20
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   40
//           uint activeLights;         // Offset:   44
//           uint litLights;            // Offset:   48
//           uint visibleProbes;        // Offset:   52
//           uint activeProbes;         // Offset:   56
//
//       } sumDeferredCounts;           // Offset:   40
//       
//       struct LightingDebugCounts
//       {
//           
//           uint visibleLights;        // Offset:   60
//           uint activeLights;         // Offset:   64
//           uint litLights;            // Offset:   68
//           uint visibleProbes;        // Offset:   72
//           uint activeProbes;         // Offset:   76
//
//       } sumForwardCounts;            // Offset:   60
//       float3 cameraWorldPos;         // Offset:   80
//       float3 pickedWldPos;           // Offset:   92
//       uint numPickedLights;          // Offset:  104
//       uint numPickedProbes;          // Offset:  108
//       
//       struct LightingDebugLight
//       {
//           
//           uint flags;                // Offset:  112
//           float3 wldOrigin;          // Offset:  116
//           float activeAttenuation;   // Offset:  128
//           float litAttenuation;      // Offset:  132
//
//       } pickedLights[32];            // Offset:  112
//       
//       struct LightingDebugProbe
//       {
//           
//           uint flags;                // Offset:  880
//           float3 wldOrigin;          // Offset:  884
//           float weight;              // Offset:  896
//
//       } pickedProbes[32];            // Offset:  880
//       uint overdrawHistogram[64];    // Offset: 1520
//       uint overdrawSum;              // Offset: 1776
//       uint overdrawMax;              // Offset: 1780
//       float padding0;                // Offset: 1784
//       float padding1;                // Offset: 1788
//
//   } $Element;                        // Offset:    0 Size:  1792
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerPointClamp                 sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gDownsampledScene                 texture  float4          2d            t21      1 
// gMotionVectors                    texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gSSAODepthTexture                 texture   float          2d            t28      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// lightingDebug                         UAV  struct         r/w             u2      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3584], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2d (float,float,float,float) t28
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_structured u2, 1792
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 26
dcl_tgsm_raw g0, 4
dcl_tgsm_raw g1, 20
dcl_tgsm_raw g2, 20
dcl_thread_group 8, 8, 1
if_z vThreadIDInGroupFlattened.x
  store_raw g0.x, l(0), l(0)
  store_raw g1.xyzw, l(0), l(0,0,0,0)
  store_raw g1.x, l(16), l(0)
  store_raw g2.xyzw, l(0), l(0,0,0,0)
  store_raw g2.x, l(16), l(0)
endif 
sync_g_t
imad r0.x, cb2[57].x, l(41), vThreadGroupID.x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xz, r0.xxyx, l(4095, 0, 4095, 0)
imad r1.xy, r0.xzxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r3.xy, cb1[44].xyxx
ult r3.xy, r1.xyxx, r3.xyxx
and r0.w, r3.y, r3.x
lt r3.x, l(0.000000), r2.z
and r0.w, r0.w, r3.x
if_z r0.w
  ret 
endif 
ld_indexable(texture2d)(float,float,float,float) r3.xyzw, r1.xyww, t2.xyzw
utof r4.xy, r1.xyxx
add r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r5.xy, r4.zwzz, cb1[44].zwzz
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t27.xyzw, s4, l(0.000000)
mul r3.z, r3.z, r5.x
if_nz cb2[55].x
  mul r5.x, r3.z, l(0.750000)
  store_uav_typed u0.xyzw, r1.xyyy, r5.xxxx
  ret 
else 
  movc r5.x, cb2[54].w, r3.z, l(1.000000)
endif 
ge r3.z, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r5.y, r1.xyww, t4.yxzw
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t0.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r9.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r10.xyz, r1.xyzw, t2.xywz
ge r11.x, r5.y, l(0.984375)
mul r1.z, r5.y, l(1.01587307)
mad r1.w, r5.y, l(64.000000), l(-63.000000)
movc r1.z, r11.x, r1.w, r1.z
max r1.z, r1.z, l(0.00000001)
rcp r11.y, r1.z
and r1.zw, r0.wwww, r11.xxxy
add r4.zw, r4.zzzw, -cb1[71].xxxy
mul r4.zw, r4.zzzw, cb1[44].zzzw
mad r4.zw, r4.zzzw, l(0.000000, 0.000000, 2.000000, -2.000000), l(0.000000, 0.000000, -1.000000, 1.000000)
mul r11.x, r4.z, cb1[12].x
mul r11.y, r4.w, cb1[13].y
mov r11.z, l(1.000000)
mul r5.yzw, r1.wwww, r11.xxyz
mul r11.xyz, r5.zzzz, cb1[17].xyzx
mad r11.xyz, r5.yyyy, cb1[16].xyzx, r11.xyzx
mad r5.yzw, r5.wwww, cb1[18].xxyz, r11.xxyz
mad r0.w, r2.w, l(3.000000), l(0.500000)
ftou r0.w, r0.w
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.wwww, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.w, r12.w, r12.z
movc r12.z, r0.w, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.w, r3.z, l(-0.500000), l(-0.00146628)
add r0.w, r0.w, r2.z
mul_sat r2.y, r0.w, l(2.00982332)
dp3 r0.w, -r5.yzwy, -r5.yzwy
rsq r0.w, r0.w
mul r12.xyz, r0.wwww, -r5.yzwy
dp2 r2.z, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.z, r2.z
mul r2.z, r2.z, l(52.982918)
frc r2.z, r2.z
mad r2.z, r2.z, l(6.28318548), cb1[70].w
sincos r4.x, r13.x, r2.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r2.z, -r12.xyzx, r11.xyzx
add r2.z, r2.z, r2.z
mad r14.xyz, r11.xyzx, -r2.zzzz, -r12.xyzx
mul r2.z, r2.y, l(17.000000)
exp r2.z, r2.z
add r2.z, r2.z, l(2.000000)
div r2.z, l(2.000000), r2.z
sqrt r2.w, r2.z
mul r4.yz, cb1[44].xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
ftou r13.yz, r4.yyzy
ieq r13.yz, r1.xxyx, r13.yyzy
and r3.z, r13.z, r13.y
lt r4.w, l(0.83333331), r2.y
lt r6.w, l(60.000000), r1.w
and r4.w, r4.w, r6.w
if_nz r4.w
  mul r13.yzw, r5.zzzz, cb1[9].xxyw
  mad r13.yzw, r5.yyyy, cb1[8].xxyw, r13.yyzw
  mad r13.yzw, r5.wwww, cb1[10].xxyw, r13.yyzw
  add r13.yzw, r13.yyzw, cb1[11].xxyw
  mad r15.xyz, r14.xyzx, l(2000.000000, 2000.000000, 2000.000000, 0.000000), r5.yzwy
  mul r16.xyz, r15.yyyy, cb1[9].xywx
  mad r15.xyw, r15.xxxx, cb1[8].xyxw, r16.xyxz
  mad r15.xyz, r15.zzzz, cb1[10].xywx, r15.xywx
  add r15.xyz, r15.xyzx, cb1[11].xywx
  ge r4.w, r15.z, r13.w
  if_nz r4.w
    rcp r16.z, r13.w
    mul r16.xy, r13.yzyy, r16.zzzz
    rcp r17.z, r15.z
    mul r17.xy, r15.xyxx, r17.zzzz
    lt r13.yz, l(0.000000, 1.000000, 1.000000, 0.000000), r17.xxyx
    mad r18.xyzw, r15.xxyy, r17.zzzz, l(-1.000000, 1.000000, -1.000000, 1.000000)
    mad r19.xyzw, r15.xxyy, r17.zzzz, -r16.xxyy
    lt r15.xy, r17.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
    div r18.xyzw, r18.xyzw, r19.xyzw
    and r15.xy, r15.xyxx, r18.ywyy
    movc r13.yz, r13.yyzy, r18.xxzx, r15.xxyx
    max r4.w, r13.z, r13.y
    add r15.xyw, r16.xyxz, -r17.xyxz
    mad r15.xyw, r4.wwww, r15.xyxw, r17.xyxz
    mad r13.yz, r16.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    mad r17.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r13.yz, r13.yyzy, -r17.xxyx
    mul r13.yz, r4.yyzy, |r13.yyzy|
    max r4.w, r13.z, r13.y
    max r4.w, r4.w, l(1.000000)
    rcp r4.w, r4.w
    mad r16.xyz, r16.xyzx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    mad r18.xyz, r15.xywx, l(0.500000, -0.500000, 1.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    add r19.xyz, -r16.xyzx, r18.xyzx
    mad r16.xyz, r4.wwww, r19.xyzx, r16.xyzx
    add r18.xyz, -r16.xyzx, r18.xyzx
    mul r19.xyz, r18.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000)
    mul r4.yz, r4.yyzy, |r19.xxyx|
    max r4.y, r4.z, r4.y
    log r4.y, r4.y
    round_pi r4.y, r4.y
    max r4.y, r4.y, l(0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.z, r16.xyxx, t28.yzxw, s1, r4.y
    mad r20.xyz, r18.xyzx, l(0.031250, 0.031250, 0.031250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.z, |r4.z|, |r4.w|
    mul r4.z, r20.z, r4.z
    lt r4.z, r4.z, l(1.000000)
    and r6.w, r4.z, l(1)
    mad r20.xyz, r18.xyzx, l(0.062500, 0.062500, 0.062500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r7.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    bfi r4.z, l(1), l(0), r4.z, l(2)
    movc r4.z, r4.w, r4.z, r6.w
    mad r20.xyz, r18.xyzx, l(0.093750, 0.093750, 0.093750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r7.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(4)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(8)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.156250, 0.156250, 0.156250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(16)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.187500, 0.187500, 0.187500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(32)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.218750, 0.218750, 0.218750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(64)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(128)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.281250, 0.281250, 0.281250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(256)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.312500, 0.312500, 0.312500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(512)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.343750, 0.343750, 0.343750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(1024)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.375000, 0.375000, 0.375000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(2048)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.406250, 0.406250, 0.406250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(4096)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.437500, 0.437500, 0.437500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(8192)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.468750, 0.468750, 0.468750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00004000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00008000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.531250, 0.531250, 0.531250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00010000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.562500, 0.562500, 0.562500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00020000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.593750, 0.593750, 0.593750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00040000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.625000, 0.625000, 0.625000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00080000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.656250, 0.656250, 0.656250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00100000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.687500, 0.687500, 0.687500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00200000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.718750, 0.718750, 0.718750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00400000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.750000, 0.750000, 0.750000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x00800000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.781250, 0.781250, 0.781250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x01000000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.812500, 0.812500, 0.812500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x02000000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.843750, 0.843750, 0.843750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x04000000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.875000, 0.875000, 0.875000, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x08000000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.906250, 0.906250, 0.906250, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x10000000)
    movc r4.z, r6.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.937500, 0.937500, 0.937500, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r6.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r4.w, |r4.w|, |r6.w|
    mul r4.w, r20.z, r4.w
    lt r4.w, r4.w, l(1.000000)
    iadd r7.w, r4.z, l(0x20000000)
    movc r4.z, r4.w, r7.w, r4.z
    mad r20.xyz, r18.xyzx, l(0.968750, 0.968750, 0.968750, 0.000000), r16.xyzx
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r20.xyxx, t28.yzwx, s1, r4.y
    min r6.w, |r6.w|, |r4.w|
    mul r6.w, r20.z, r6.w
    lt r6.w, r6.w, l(1.000000)
    iadd r7.w, r4.z, l(0x40000000)
    movc r4.z, r6.w, r7.w, r4.z
    sample_l_indexable(texture2d)(float,float,float,float) r4.y, r17.xyxx, t28.yxzw, s1, r4.y
    min r4.y, |r4.w|, |r4.y|
    mul r4.y, r15.w, r4.y
    lt r4.y, r4.y, l(1.000000)
    iadd r4.w, r4.z, l(0x80000000)
    movc r4.y, r4.y, r4.w, r4.z
    mov r20.w, l(-1)
    mov r21.z, l(-1)
    mov r4.zw, l(0,0,0,0)
    mov r6.w, l(0)
    mov r7.w, r4.y
    mov r8.w, r17.z
    mov r22.yz, l(0,0,0,0)
    mov r20.z, l(0)
    mov r9.w, l(0)
    loop 
      breakc_z r7.w
      firstbit_lo r20.y, r7.w
      ishl r10.w, l(1), r20.y
      xor r20.x, r7.w, r10.w
      utof r12.w, r20.y
      mul r12.w, r12.w, l(0.031250)
      mad r15.xyw, r18.xyxz, r12.wwww, r16.xyxz
      sample_l_indexable(texture2d)(float,float,float,float) r12.w, r15.xyxx, t28.yzwx, s1, l(0.000000)
      mul r13.y, r15.w, |r12.w|
      lt r13.y, r13.y, l(1.000000)
      if_nz r13.y
        if_nz r20.z
          lt r13.y, r13.w, |r12.w|
          lt r13.z, r8.w, r15.w
          and r13.y, r13.z, r13.y
          movc r17.xy, r13.yyyy, r15.xyxx, r4.zwzz
          mov r20.z, r15.w
          mov r22.x, r8.w
          movc r23.xyz, r13.yyyy, r20.zxyz, r22.xyzx
          mov r7.w, r20.x
          mov r20.z, l(-1)
          mov r4.zw, r17.xxxy
          mov r8.w, r23.x
          mov r22.yz, r23.yyzy
          continue 
        endif 
        mov r13.y, r22.y
        mov r13.z, l(0)
      else 
        not r10.w, r10.w
        and r13.y, r10.w, r22.y
        mov r13.z, r20.z
      endif 
      if_nz r9.w
        mov r7.w, r20.x
        mov r22.y, r13.y
        mov r20.z, r13.z
        mov r9.w, l(-1)
        continue 
      endif 
      mov r17.xy, r4.zwzz
      mov r10.w, r6.w
      mov r16.w, r8.w
      mov r22.y, r13.y
      mov r22.x, r22.z
      mov r20.z, r13.z
      mov r21.w, r9.w
      mov r17.w, r15.w
      mov r18.w, |r12.w|
      mov r19.w, l(0)
      loop 
        ige r22.w, r19.w, l(4)
        breakc_nz r22.w
        itof r22.w, r19.w
        add r22.w, r22.w, l(1.000000)
        mul r22.w, r22.w, l(0.250000)
        mad r23.xyz, r19.xyzx, r22.wwww, r15.xywx
        sample_l_indexable(texture2d)(float,float,float,float) r22.w, r23.xyxx, t28.yzwx, s1, l(0.000000)
        mul r23.w, r23.z, |r22.w|
        lt r23.w, r23.w, l(1.000000)
        if_nz r23.w
          lt r23.w, r13.w, |r22.w|
          add r24.x, -r17.w, r23.z
          add r24.y, -r18.w, |r22.w|
          mul r24.z, r17.w, r23.z
          mul r24.y, r24.z, |r24.y|
          lt r24.x, r24.y, |r24.x|
          lt r24.z, r16.w, r23.z
          and r24.yw, r23.wwww, r24.xxxz
          movc r21.xy, r24.wwww, r20.xyxx, r22.yxyy
          or r24.x, r24.x, r24.z
          and r23.w, r23.w, r24.x
          movc r23.xy, r23.wwww, r23.xyxx, r17.xyxx
          movc r24.x, r24.y, l(1.000000), r10.w
          movc r23.w, r23.w, r23.z, r16.w
          movc r25.xyzw, r24.yyyy, r20.xyzw, r21.xyzw
          mov r10.w, r24.x
          mov r17.xy, r23.xyxx
          mov r16.w, r23.w
          mov r22.xy, r25.yxyy
          mov r20.z, r25.z
          mov r21.w, r25.w
          break 
        endif 
        mov r17.w, r23.z
        mov r18.w, |r22.w|
        iadd r19.w, r19.w, l(1)
      endloop 
      mov r4.zw, r17.xxxy
      mov r6.w, r10.w
      mov r8.w, r16.w
      mov r22.yz, r22.yyxy
      mov r9.w, r21.w
      mov r7.w, r20.x
    endloop 
    rcp r4.y, r8.w
    add r4.y, -r13.w, r4.y
    add r7.w, -r13.w, r15.z
    div r4.y, |r4.y|, |r7.w|
    min r15.x, r4.y, l(1.000000)
    countbits r4.y, r22.y
    utof r4.y, r4.y
    add r4.y, r4.y, l(1.000000)
    iadd r7.w, -r22.z, l(32)
    utof r7.w, r7.w
    div r4.y, r4.y, r7.w
    min r15.y, r4.y, l(1.000000)
  else 
    mov r15.xy, l(1.000000,0,0,0)
    mov r6.w, l(0)
  endif 
  add r4.y, r2.y, l(-0.83333331)
  mul r4.y, r4.y, l(5.99999952)
  max r4.y, r4.y, l(0.000000)
  mad r7.w, r4.y, l(-2.000000), l(3.000000)
  mul r4.y, r4.y, r4.y
  mul r4.y, r4.y, r7.w
  add r1.w, r1.w, l(-60.000000)
  mul_sat r1.w, r1.w, l(0.01666667)
  mad r7.w, r1.w, l(-2.000000), l(3.000000)
  mul r1.w, r1.w, r1.w
  mul r1.w, r1.w, r7.w
  mul r1.w, r1.w, r4.y
  mul r1.w, r15.y, r1.w
  mad r13.yz, r4.zzwz, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  add r13.yz, |r13.yyzy|, l(0.000000, -0.500000, -0.500000, 0.000000)
  add_sat r13.yz, r13.yyzy, r13.yyzy
  mad r15.yz, r13.yyzy, l(0.000000, -2.000000, -2.000000, 0.000000), l(0.000000, 3.000000, 3.000000, 0.000000)
  mul r13.yz, r13.yyzy, r13.yyzy
  mad r13.yz, -r15.yyzy, r13.yyzy, l(0.000000, 1.000000, 1.000000, 0.000000)
  mul r4.y, r13.z, r13.y
  mul r1.w, r1.w, r4.y
  mul r4.y, r15.x, l(10.000000)
  min r4.y, r4.y, l(1.000000)
  add r7.w, -r6.w, l(1.000000)
  mul r7.w, r1.w, r7.w
  add r4.y, r4.y, l(-1.000000)
  mad r4.y, r7.w, r4.y, l(1.000000)
  mul r1.w, r6.w, r1.w
  lt r6.w, l(0.000000), r1.w
  if_nz r6.w
    sample_l_indexable(texture2d)(float,float,float,float) r13.yz, r4.zwzz, t22.zxyw, s4, l(0.000000)
    add r15.xy, |r13.yzyy|, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add_sat r15.xy, r15.xyxx, r15.xyxx
    add r15.zw, |r13.yyyz|, |r13.yyyz|
    min r15.zw, r15.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    mul r15.zw, r15.zzzw, l(0.000000, 0.000000, 10.000000, 10.000000)
    mad r15.xy, r15.xyxx, l(30.000000, 30.000000, 0.000000, 0.000000), r15.zwzz
    ge r13.yz, r13.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
    movc r13.yz, r13.yyzy, r15.xxyx, -r15.xxyx
    mad r4.zw, -r13.yyyz, cb1[44].zzzw, r4.zzzw
    sample_l_indexable(texture2d)(float,float,float,float) r13.yzw, r4.zwzz, t21.wxyz, s4, l(0.000000)
    mul r13.yzw, r13.yyzw, cb1[85].xxxx
    mul r13.yzw, r1.wwww, r13.yyzw
  else 
    mov r13.yzw, l(0,0,0,0)
    mov r1.w, l(0)
  endif 
else 
  mov r13.yzw, l(0,0,0,0)
  mov r4.y, l(1.000000)
  mov r1.w, l(0)
endif 
dp3 r4.z, r11.xyzx, cb2[17].xyzx
mov_sat r4.w, r4.z
ge r6.w, l(0.000000), r4.w
if_nz r6.w
  mov r7.w, l(0)
endif 
if_z r6.w
  mul r15.xyz, r5.zzzz, cb2[29].xyzx
  mad r15.xyz, r5.yyyy, cb2[28].xyzx, r15.xyzx
  mad r15.xyz, r5.wwww, cb2[30].xyzx, r15.xyzx
  add r15.xyz, r15.xyzx, cb2[31].xyzx
  add r6.w, r15.z, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r8.w, r6.w
  eq r8.w, r6.w, r8.w
  if_nz r8.w
    mov r8.w, l(0)
    mov r9.w, l(0)
    loop 
      ge r10.w, r8.w, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r8.w
      add r16.xy, r15.xyxx, -cb2[r10.w + 20].xyxx
      max r12.w, |r16.y|, |r16.x|
      mul r9.w, r12.w, cb2[r10.w + 20].z
      lt r10.w, r9.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r8.w, r8.w, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r8.w, l(3.000000)
    mov r9.w, l(0)
  endif 
  ge r10.w, r8.w, l(3.000000)
  if_nz r10.w
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r15.xyxx, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r12.w, r17.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r17.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r12.w, l(0), t23.xxxx
    and r16.w, r15.w, l(0x40000000)
    ishl r17.x, r15.w, l(2)
    if_z r16.w
      and r16.w, r15.w, l(0x01ffffff)
      iadd r18.x, r12.w, r16.w
      ushr r12.w, r15.w, l(25)
      utof r12.w, r12.w
      mul r16.xyz, r12.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.yz, r16.zzyz, l(0, 6, 6, 0)
      and r12.w, r18.z, l(0xc0000000)
      iadd r15.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r17.z, r18.z, r15.w
      ushr r16.w, r15.w, l(13)
      movc r15.w, r17.y, r16.w, r15.w
      and r15.w, r15.w, l(8191)
      iadd r19.x, r15.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r17.yzw, r12.wwww, r18.xxyz, r19.xxyz
      movc r19.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r15.w, r17.w, l(0xc0000000)
      iadd r16.w, r17.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r20.y, r17.w, r16.w
      ushr r18.w, r16.w, l(13)
      movc r16.w, r20.x, r18.w, r16.w
      and r16.w, r16.w, l(8191)
      iadd r19.x, r16.w, r17.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r17.yzw, r15.wwww, r17.yyzw, r19.xxzw
      movc r17.yzw, r12.wwww, r18.xxyz, r17.yyzw
      and r12.w, r17.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r17.z, l(6)
        ushr r18.xy, r16.zyzz, r12.wwww
        or r12.w, r17.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r18.y, l(0)
        bfi r15.w, l(1), l(0), r18.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r12.w, r12.w, r15.w
        and r12.w, r12.w, l(1023)
        iadd r18.x, r12.w, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
        iadd r12.w, -r18.y, l(6)
        ushr r19.xy, r16.zyzz, r12.wwww
        and r12.w, r18.w, l(0xc0000000)
        or r15.w, r18.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r19.y, l(0)
        bfi r16.w, l(1), l(0), r19.x, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r15.w, r15.w, r16.w
        and r15.w, r15.w, l(1023)
        iadd r19.x, r15.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r12.wwww, r18.xywx, r19.xyzx
        iadd r15.w, -r19.y, l(6)
        ushr r18.yz, r16.zzyz, r15.wwww
        and r15.w, r19.z, l(0xc0000000)
        or r16.w, r19.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r18.z, l(0)
        bfi r17.z, l(1), l(0), r18.y, r17.z
        imul null, r17.z, r17.z, l(10)
        ushr r16.w, r16.w, r17.z
        and r16.w, r16.w, l(1023)
        iadd r20.x, r16.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r15.wwww, r19.xxzx, r20.xxyx
        movc r17.yw, r12.wwww, r18.xxxw, r18.yyyz
      endif 
      and r12.w, r17.w, l(0xc0000000)
      if_z r12.w
        ubfe r15.w, l(14), l(15), r17.w
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.w, r18.x
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00003052)
        and r17.z, r16.y, l(3)
        iadd r17.z, r17.z, r17.y
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r16.xxyz, l(0, 0, 0, 0)
        ushr r16.x, r17.z, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r16.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r15.w
        iadd r16.y, r18.z, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.w
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r16.y, r16.w, r16.y
        mad r15.w, r16.y, l(0.00001526), r15.w
        movc r17.x, r18.y, r16.x, r15.w
      else 
        and r15.w, r17.w, l(0x80000000)
        iadd r16.x, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        movc r15.w, r15.w, r16.x, l(0)
        ishl r16.x, r17.w, l(2)
        ushr r16.y, r15.w, l(16)
        f16tof32 r16.y, r16.y
        and r15.w, r15.w, l(0x0000ffff)
        f16tof32 r15.w, r15.w
        mad r16.x, r15.x, r16.y, r16.x
        mad r15.w, r15.y, r15.w, r16.x
        movc r17.x, r12.w, r15.w, r17.x
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r15.z
    lt r12.w, r17.x, r12.w
    movc r7.w, r12.w, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r10.w, r8.w
      add r15.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r10.w + 20].zzzz
      mad r16.xy, r15.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r8.w, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r16.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.w, r10.w, r12.w
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.w, r10.w, r10.w
      mul r7.w, r10.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r16.x, -r4.x
      ftou r10.w, r8.w
      add r8.w, r8.w, l(1.000000)
      min r8.w, r8.w, l(2.000000)
      ftou r8.w, r8.w
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.w, r9.w
      add r15.zw, r15.xxxy, -cb2[r10.w + 20].xxxy
      mul r15.zw, r15.zzzw, cb2[r10.w + 20].zzzz
      mad r15.zw, r15.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r15.xy, r15.xyxx, -cb2[r8.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r8.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r16.y, r13.x
      mov r16.z, r4.x
      mov r12.w, l(0)
      mov r16.w, l(0)
      loop 
        uge r17.x, r16.w, l(8)
        breakc_nz r17.x
        ult r17.x, r9.w, r16.w
        movc r17.yz, r17.xxxx, r15.xxyx, r15.zzwz
        movc r17.w, r17.x, cb2[r8.w + 20].w, cb2[r10.w + 20].w
        movc r17.x, r17.x, r8.w, r10.w
        dp2 r18.x, icb[r16.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r16.w + 0].yxyy, r16.yzyy
        mad r18.xy, r18.xyxx, r17.wwww, r17.yzyy
        iadd r17.x, r17.x, cb2[26].y
        utof r18.z, r17.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r18.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r17.y, r18.xyzx, t31.yxzw, s0, l(0.000000)
        add r17.x, r17.y, r17.x
        add_sat r17.x, r17.x, l(-1.000000)
        mad r12.w, r17.x, l(0.125000), r12.w
        iadd r16.w, r16.w, l(1)
      endloop 
      mul r6.w, r12.w, r12.w
      mul r7.w, r12.w, r6.w
    endif 
  endif 
endif 
add r6.w, -r2.y, l(1.000000)
mul r8.w, r6.w, l(5.000000)
mad r9.w, r6.w, l(5.000000), l(-2.500000)
mul r9.w, r9.w, l(0.400000)
max r9.w, r9.w, l(0.000000)
mul r9.w, r9.w, l(100.000000)
mad r15.xy, -r6.wwww, l(10.000000, 5.000000, 0.000000, 0.000000), l(6.857410, 7.085000, 0.000000, 0.000000)
exp r10.w, r15.x
mul r10.w, r2.x, r10.w
mul r10.w, r10.w, l(9.136810)
mul r12.w, r6.w, r8.w
mad r12.w, -r12.w, l(2.015905), r15.y
exp r12.w, r12.w
mul r12.w, r2.x, r12.w
mul r12.w, r12.w, l(9.708090)
max r10.w, r10.w, r12.w
max r10.w, r10.w, l(1.268160)
iadd r12.w, cb2[0].y, -cb2[58].x
ushr r0.y, r0.y, l(24)
uge r15.x, r0.y, r12.w
ult r15.y, r0.y, cb2[0].y
and r15.x, r15.y, r15.x
if_nz r15.x
  imul null, r15.x, r0.y, l(14)
  if_nz r3.z
    add r16.yzw, cb1[24].xxyz, cb10[r15.x + 0].xxyz
    mov r16.x, l(16)
    store_structured u2.xyzw, cb2[52].x, l(880), r16.xyzw
  endif 
  add r15.yzw, r5.yyzw, -cb10[r15.x + 0].xxyz
  and r16.x, l(0x0000ffff), cb10[r15.x + 7].z
  ubfe r16.y, l(6), l(25), cb10[r15.x + 7].z
  imul null, r16.z, r16.x, l(6)
  dp3 r16.w, cb11[r16.z + 0].xyzx, r15.yzwy
  add_sat r16.w, r16.w, cb11[r16.z + 0].w
  dp3 r17.x, cb11[r16.z + 1].xyzx, r15.yzwy
  add_sat r17.x, r17.x, cb11[r16.z + 1].w
  mul r16.w, r16.w, r17.x
  dp3 r17.x, cb11[r16.z + 2].xyzx, r15.yzwy
  add_sat r17.x, r17.x, cb11[r16.z + 2].w
  mul r16.w, r16.w, r17.x
  dp3 r17.x, cb11[r16.z + 3].xyzx, r15.yzwy
  add_sat r17.x, r17.x, cb11[r16.z + 3].w
  mul r16.w, r16.w, r17.x
  dp3 r17.x, cb11[r16.z + 4].xyzx, r15.yzwy
  add_sat r17.x, r17.x, cb11[r16.z + 4].w
  mul r16.w, r16.w, r17.x
  dp3 r17.x, cb11[r16.z + 5].xyzx, r15.yzwy
  add_sat r16.z, r17.x, cb11[r16.z + 5].w
  mul r17.x, r16.z, r16.w
  and r16.z, l(1), cb10[r15.x + 6].x
  mov r17.yz, l(0,0,1.000000,0)
  movc r16.zw, r16.zzzz, r17.xxxy, r17.zzzx
  mov r17.x, l(1.000000)
  mov r17.z, cb10[r15.x + 6].x
  mov r18.xy, r16.zwzz
  mov r17.w, l(1)
  loop 
    ige r18.z, r17.w, r16.y
    breakc_nz r18.z
    iadd r18.z, r16.x, r17.w
    imul null, r18.z, r18.z, l(6)
    dp3 r18.w, cb11[r18.z + 0].xyzx, r15.yzwy
    add_sat r18.w, r18.w, cb11[r18.z + 0].w
    mul r18.w, r18.w, r18.x
    dp3 r19.x, cb11[r18.z + 1].xyzx, r15.yzwy
    add_sat r19.x, r19.x, cb11[r18.z + 1].w
    mul r18.w, r18.w, r19.x
    dp3 r19.x, cb11[r18.z + 2].xyzx, r15.yzwy
    add_sat r19.x, r19.x, cb11[r18.z + 2].w
    mul r18.w, r18.w, r19.x
    dp3 r19.x, cb11[r18.z + 3].xyzx, r15.yzwy
    add_sat r19.x, r19.x, cb11[r18.z + 3].w
    mul r18.w, r18.w, r19.x
    dp3 r19.x, cb11[r18.z + 4].xyzx, r15.yzwy
    add_sat r19.x, r19.x, cb11[r18.z + 4].w
    mul r18.w, r18.w, r19.x
    dp3 r19.x, cb11[r18.z + 5].xyzx, r15.yzwy
    add_sat r18.z, r19.x, cb11[r18.z + 5].w
    mul r18.x, r18.z, r18.w
    ushr r19.x, r17.z, l(2)
    ubfe r19.y, l(1), l(2), r17.z
    and r19.z, r19.x, l(2)
    max r19.w, r18.x, r18.y
    mad r18.z, -r18.w, r18.z, l(1.000000)
    mul r18.z, r18.z, r18.y
    movc r17.y, r19.z, r18.z, r19.w
    movc r18.xy, r19.yyyy, r18.xyxx, r17.xyxx
    iadd r17.w, r17.w, l(1)
    mov r17.z, r19.x
  endloop 
  mov_sat r18.y, r18.y
  mul r16.x, r18.y, cb10[r15.x + 6].y
  lt r16.y, l(0.000000), r16.x
  if_nz r16.y
    if_nz r3.z
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r16.y, cb2[52].x, l(880), u2.xxxx
      or r16.y, r16.y, l(32)
      store_structured u2.x, cb2[52].x, l(880), r16.y
      store_structured u2.x, cb2[52].x, l(896), r16.x
    endif 
    mul r16.y, r16.x, cb10[r15.x + 7].y
    mov r17.x, cb10[r15.x + 7].w
    mov r17.yz, cb10[r15.x + 8].xxyx
    dp3 r16.z, r14.xyzx, r17.xyzx
    dp3 r16.w, r15.yzwy, r17.xyzx
    add r16.w, r16.w, -cb10[r15.x + 8].z
    ge r17.x, r16.w, l(0.000000)
    max r16.w, r9.w, |r16.w|
    movc r16.w, r17.x, r16.w, -r16.w
    max r16.z, -r16.z, l(0.00000010)
    div r16.z, r16.w, r16.z
    min r16.z, |r16.z|, l(131072.000000)
    mov r17.x, cb10[r15.x + 8].w
    mov r17.yz, cb10[r15.x + 9].xxyx
    dp3 r16.w, r14.xyzx, r17.xyzx
    dp3 r17.x, r15.yzwy, r17.xyzx
    add r17.x, r17.x, -cb10[r15.x + 9].z
    ge r17.y, r17.x, l(0.000000)
    max r17.x, r9.w, |r17.x|
    movc r17.x, r17.y, r17.x, -r17.x
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.x, r16.w
    min r16.z, |r16.w|, r16.z
    mov r17.x, cb10[r15.x + 9].w
    mov r17.yz, cb10[r15.x + 10].xxyx
    dp3 r16.w, r14.xyzx, r17.xyzx
    dp3 r17.x, r15.yzwy, r17.xyzx
    add r17.x, r17.x, -cb10[r15.x + 10].z
    ge r17.y, r17.x, l(0.000000)
    max r17.x, r9.w, |r17.x|
    movc r17.x, r17.y, r17.x, -r17.x
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.x, r16.w
    min r16.z, |r16.w|, r16.z
    mov r17.x, cb10[r15.x + 10].w
    mov r17.yz, cb10[r15.x + 11].xxyx
    dp3 r16.w, r14.xyzx, r17.xyzx
    dp3 r17.x, r15.yzwy, r17.xyzx
    add r17.x, r17.x, -cb10[r15.x + 11].z
    ge r17.y, r17.x, l(0.000000)
    max r17.x, r9.w, |r17.x|
    movc r17.x, r17.y, r17.x, -r17.x
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.x, r16.w
    min r16.z, |r16.w|, r16.z
    mov r17.x, cb10[r15.x + 11].w
    mov r17.yz, cb10[r15.x + 12].xxyx
    dp3 r16.w, r14.xyzx, r17.xyzx
    dp3 r17.x, r15.yzwy, r17.xyzx
    add r17.x, r17.x, -cb10[r15.x + 12].z
    ge r17.y, r17.x, l(0.000000)
    max r17.x, r9.w, |r17.x|
    movc r17.x, r17.y, r17.x, -r17.x
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.x, r16.w
    min r16.z, |r16.w|, r16.z
    mov r17.x, cb10[r15.x + 12].w
    mov r17.yz, cb10[r15.x + 13].xxyx
    dp3 r16.w, r14.xyzx, r17.xyzx
    dp3 r17.x, r15.yzwy, r17.xyzx
    add r17.x, r17.x, -cb10[r15.x + 13].z
    ge r17.y, r17.x, l(0.000000)
    max r17.x, r9.w, |r17.x|
    movc r17.x, r17.y, r17.x, -r17.x
    max r16.w, -r16.w, l(0.00000010)
    div r16.w, r17.x, r16.w
    min r16.z, |r16.w|, r16.z
    add r17.x, r15.y, cb10[r15.x + 3].w
    add r17.yz, r15.zzwz, cb10[r15.x + 4].xxyx
    mad r17.xyz, r14.xyzx, r16.zzzz, r17.xyzx
    dp3 r16.w, r17.xyzx, r17.xyzx
    sqrt r16.w, r16.w
    div r16.z, r16.z, r16.w
    add r16.z, r16.z, r16.z
    sqrt r16.z, r16.z
    mad r16.z, r6.w, l(5.000000), r16.z
    add r16.z, r16.z, l(-0.844800)
    mov r18.x, cb10[r15.x + 0].w
    mov r18.y, cb10[r15.x + 1].z
    mov r18.z, cb10[r15.x + 2].y
    dp3 r19.x, r17.xyzx, r18.xyzx
    mov r20.xy, cb10[r15.x + 1].xwxx
    mov r20.z, cb10[r15.x + 2].z
    dp3 r19.y, r17.xyzx, r20.xyzx
    mov r21.x, cb10[r15.x + 1].y
    mov r21.yz, cb10[r15.x + 2].xxwx
    dp3 r19.z, r17.xyzx, r21.xyzx
    ubfe r16.w, l(9), l(16), cb10[r15.x + 7].z
    utof r19.w, r16.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r19.xyzw, t8.xyzw, s2, r16.z
    and r22.xyz, r17.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r22.xyz, r22.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r16.z, r22.y, r22.x
    or r16.z, r22.z, r16.z
    movc r17.xyz, r16.zzzz, l(1.000000,1.000000,0,0), r17.xyzx
    dp3 r22.x, r15.yzwy, r18.xyzx
    dp3 r22.y, r15.yzwy, r20.xyzx
    dp3 r22.z, r15.yzwy, r21.xyzx
    mad_sat r15.yzw, r22.xxyz, cb10[r15.x + 3].xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    mul r22.xy, r15.yzyy, cb10[r15.x + 4].zwzz
    mul r22.z, r15.w, cb10[r15.x + 5].x
    add r15.xyz, r22.xyzx, cb10[r15.x + 5].yzwy
    dp3 r19.x, r11.xyzx, r18.xyzx
    dp3 r19.y, r11.xyzx, r20.xyzx
    dp3 r19.z, r11.xyzx, r21.xyzx
    lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r19.xyzx
    movc r20.z, r18.x, l(0), l(0.500000)
    mov r20.xy, l(0,0,0,0)
    add r20.xyz, r15.xyzx, r20.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
    mul r21.xyz, r19.xyzx, r19.xyzx
    mul r21.xyz, r16.yyyy, r21.xyzx
    movc r22.z, r18.y, l(0), l(0.500000)
    mov r22.xy, l(0,0,0,0)
    add r18.xyw, r15.xyxz, r22.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r18.xyw, r18.xywx, t18.xywz, s4, l(0.000000)
    mul r18.xyw, r21.yyyy, r18.xyxw
    mad r18.xyw, r20.xyxz, r21.xxxx, r18.xyxw
    movc r20.z, r18.z, l(0), l(0.500000)
    mov r20.xy, l(0,0,0,0)
    add r15.xyz, r15.xyzx, r20.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
    mad r15.xyz, r15.xyzx, r21.zzzz, r18.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.xyz, r19.xyzw, t8.xyzw, s2, l(6.000000)
    and r19.xyz, r18.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r19.xyz, r19.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r15.w, r19.y, r19.x
    or r15.w, r19.z, r15.w
    movc r18.xyz, r15.wwww, l(1.000000,1.000000,0,0), r18.xyzx
    mul r15.xyz, r15.xyzx, r18.xyzx
    dp3 r15.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mul r16.z, r10.w, r15.w
    mul r17.xyz, r16.yyyy, r17.xyzx
    dp3 r16.y, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r15.w, r10.w, r15.w, r16.y
    div r15.w, r16.z, r15.w
    mul r16.yzw, r15.wwww, r17.xxyz
    mov r15.w, l(257)
  else 
    mov r16.xyzw, l(0,0,0,0)
    mov r15.xyzw, l(0,0,0,1)
  endif 
else 
  mov r16.xyzw, l(0,0,0,0)
  mov r15.xyzw, l(0,0,0,0)
endif 
ult r12.w, r0.y, r12.w
if_nz r12.w
  imul null, r0.y, r0.y, l(14)
  if_nz r3.z
    and r12.w, r15.w, l(1)
    imad r12.w, r12.w, l(20), l(880)
    add r17.yzw, cb1[24].xxyz, cb10[r0.y + 0].xxyz
    mov r17.x, l(16)
    store_structured u2.xyzw, cb2[52].x, r12.w, r17.xyzw
  endif 
  iadd r12.w, r15.w, l(1)
  add r17.xyz, r5.yzwy, -cb10[r0.y + 0].xyzx
  and r17.w, l(0x0000ffff), cb10[r0.y + 7].z
  ubfe r18.x, l(6), l(25), cb10[r0.y + 7].z
  imul null, r18.y, r17.w, l(6)
  dp3 r18.z, cb11[r18.y + 0].xyzx, r17.xyzx
  add_sat r18.z, r18.z, cb11[r18.y + 0].w
  dp3 r18.w, cb11[r18.y + 1].xyzx, r17.xyzx
  add_sat r18.w, r18.w, cb11[r18.y + 1].w
  mul r18.z, r18.w, r18.z
  dp3 r18.w, cb11[r18.y + 2].xyzx, r17.xyzx
  add_sat r18.w, r18.w, cb11[r18.y + 2].w
  mul r18.z, r18.w, r18.z
  dp3 r18.w, cb11[r18.y + 3].xyzx, r17.xyzx
  add_sat r18.w, r18.w, cb11[r18.y + 3].w
  mul r18.z, r18.w, r18.z
  dp3 r18.w, cb11[r18.y + 4].xyzx, r17.xyzx
  add_sat r18.w, r18.w, cb11[r18.y + 4].w
  mul r18.z, r18.w, r18.z
  dp3 r18.w, cb11[r18.y + 5].xyzx, r17.xyzx
  add_sat r18.y, r18.w, cb11[r18.y + 5].w
  mul r19.x, r18.y, r18.z
  and r18.y, l(1), cb10[r0.y + 6].x
  mov r19.yz, l(0,0,1.000000,0)
  movc r18.yz, r18.yyyy, r19.xxyx, r19.zzxz
  mov r19.x, l(1.000000)
  mov r18.w, cb10[r0.y + 6].x
  mov r20.xy, r18.yzyy
  mov r19.z, l(1)
  loop 
    ige r19.w, r19.z, r18.x
    breakc_nz r19.w
    iadd r19.w, r17.w, r19.z
    imul null, r19.w, r19.w, l(6)
    dp3 r20.z, cb11[r19.w + 0].xyzx, r17.xyzx
    add_sat r20.z, r20.z, cb11[r19.w + 0].w
    mul r20.z, r20.z, r20.x
    dp3 r20.w, cb11[r19.w + 1].xyzx, r17.xyzx
    add_sat r20.w, r20.w, cb11[r19.w + 1].w
    mul r20.z, r20.w, r20.z
    dp3 r20.w, cb11[r19.w + 2].xyzx, r17.xyzx
    add_sat r20.w, r20.w, cb11[r19.w + 2].w
    mul r20.z, r20.w, r20.z
    dp3 r20.w, cb11[r19.w + 3].xyzx, r17.xyzx
    add_sat r20.w, r20.w, cb11[r19.w + 3].w
    mul r20.z, r20.w, r20.z
    dp3 r20.w, cb11[r19.w + 4].xyzx, r17.xyzx
    add_sat r20.w, r20.w, cb11[r19.w + 4].w
    mul r20.z, r20.w, r20.z
    dp3 r20.w, cb11[r19.w + 5].xyzx, r17.xyzx
    add_sat r19.w, r20.w, cb11[r19.w + 5].w
    mul r20.x, r19.w, r20.z
    ushr r20.w, r18.w, l(2)
    ubfe r21.x, l(1), l(2), r18.w
    and r21.y, r20.w, l(2)
    max r21.z, r20.x, r20.y
    mad r19.w, -r20.z, r19.w, l(1.000000)
    mul r19.w, r19.w, r20.y
    movc r19.y, r21.y, r19.w, r21.z
    movc r20.xy, r21.xxxx, r20.xyxx, r19.xyxx
    iadd r19.z, r19.z, l(1)
    mov r18.w, r20.w
  endloop 
  add_sat r17.w, -r16.x, r20.y
  mul r18.x, r17.w, cb10[r0.y + 6].y
  lt r18.y, l(0.000000), r18.x
  if_nz r18.y
    and r18.y, r12.w, l(3)
    iadd r18.z, r18.y, l(-1)
    ult r18.z, r18.z, l(32)
    and r18.z, r3.z, r18.z
    if_nz r18.z
      imad r18.yz, r18.yyyy, l(0, 20, 20, 0), l(0, 860, 876, 0)
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r18.w, cb2[52].x, r18.y, u2.xxxx
      or r18.w, r18.w, l(32)
      store_structured u2.x, cb2[52].x, r18.y, r18.w
      store_structured u2.x, cb2[52].x, r18.z, r18.x
    endif 
    iadd r12.w, r15.w, l(257)
    mad r17.w, r17.w, cb10[r0.y + 6].y, r16.x
    mul r18.x, r18.x, cb10[r0.y + 7].y
    mov r19.x, cb10[r0.y + 7].w
    mov r19.yz, cb10[r0.y + 8].xxyx
    dp3 r18.y, r14.xyzx, r19.xyzx
    dp3 r18.z, r17.xyzx, r19.xyzx
    add r18.z, r18.z, -cb10[r0.y + 8].z
    ge r18.w, r18.z, l(0.000000)
    max r18.z, r9.w, |r18.z|
    movc r18.z, r18.w, r18.z, -r18.z
    max r18.y, -r18.y, l(0.00000010)
    div r18.y, r18.z, r18.y
    min r18.y, |r18.y|, l(131072.000000)
    mov r19.x, cb10[r0.y + 8].w
    mov r19.yz, cb10[r0.y + 9].xxyx
    dp3 r18.z, r14.xyzx, r19.xyzx
    dp3 r18.w, r17.xyzx, r19.xyzx
    add r18.w, r18.w, -cb10[r0.y + 9].z
    ge r19.x, r18.w, l(0.000000)
    max r18.w, r9.w, |r18.w|
    movc r18.w, r19.x, r18.w, -r18.w
    max r18.z, -r18.z, l(0.00000010)
    div r18.z, r18.w, r18.z
    min r18.y, |r18.z|, r18.y
    mov r19.x, cb10[r0.y + 9].w
    mov r19.yz, cb10[r0.y + 10].xxyx
    dp3 r18.z, r14.xyzx, r19.xyzx
    dp3 r18.w, r17.xyzx, r19.xyzx
    add r18.w, r18.w, -cb10[r0.y + 10].z
    ge r19.x, r18.w, l(0.000000)
    max r18.w, r9.w, |r18.w|
    movc r18.w, r19.x, r18.w, -r18.w
    max r18.z, -r18.z, l(0.00000010)
    div r18.z, r18.w, r18.z
    min r18.y, |r18.z|, r18.y
    mov r19.x, cb10[r0.y + 10].w
    mov r19.yz, cb10[r0.y + 11].xxyx
    dp3 r18.z, r14.xyzx, r19.xyzx
    dp3 r18.w, r17.xyzx, r19.xyzx
    add r18.w, r18.w, -cb10[r0.y + 11].z
    ge r19.x, r18.w, l(0.000000)
    max r18.w, r9.w, |r18.w|
    movc r18.w, r19.x, r18.w, -r18.w
    max r18.z, -r18.z, l(0.00000010)
    div r18.z, r18.w, r18.z
    min r18.y, |r18.z|, r18.y
    mov r19.x, cb10[r0.y + 11].w
    mov r19.yz, cb10[r0.y + 12].xxyx
    dp3 r18.z, r14.xyzx, r19.xyzx
    dp3 r18.w, r17.xyzx, r19.xyzx
    add r18.w, r18.w, -cb10[r0.y + 12].z
    ge r19.x, r18.w, l(0.000000)
    max r18.w, r9.w, |r18.w|
    movc r18.w, r19.x, r18.w, -r18.w
    max r18.z, -r18.z, l(0.00000010)
    div r18.z, r18.w, r18.z
    min r18.y, |r18.z|, r18.y
    mov r19.x, cb10[r0.y + 12].w
    mov r19.yz, cb10[r0.y + 13].xxyx
    dp3 r18.z, r14.xyzx, r19.xyzx
    dp3 r18.w, r17.xyzx, r19.xyzx
    add r18.w, r18.w, -cb10[r0.y + 13].z
    ge r19.x, r18.w, l(0.000000)
    max r9.w, r9.w, |r18.w|
    movc r9.w, r19.x, r9.w, -r9.w
    max r18.z, -r18.z, l(0.00000010)
    div r9.w, r9.w, r18.z
    min r9.w, |r9.w|, r18.y
    add r19.x, r17.x, cb10[r0.y + 3].w
    add r19.yz, r17.yyzy, cb10[r0.y + 4].xxyx
    mad r18.yzw, r14.xxyz, r9.wwww, r19.xxyz
    dp3 r19.x, r18.yzwy, r18.yzwy
    sqrt r19.x, r19.x
    div r9.w, r9.w, r19.x
    add r9.w, r9.w, r9.w
    sqrt r9.w, r9.w
    mad r6.w, r6.w, l(5.000000), r9.w
    add r6.w, r6.w, l(-0.844800)
    mov r19.x, cb10[r0.y + 0].w
    mov r19.y, cb10[r0.y + 1].z
    mov r19.z, cb10[r0.y + 2].y
    dp3 r20.x, r18.yzwy, r19.xyzx
    mov r21.xy, cb10[r0.y + 1].xwxx
    mov r21.z, cb10[r0.y + 2].z
    dp3 r20.y, r18.yzwy, r21.xyzx
    mov r22.x, cb10[r0.y + 1].y
    mov r22.yz, cb10[r0.y + 2].xxwx
    dp3 r20.z, r18.yzwy, r22.xyzx
    ubfe r9.w, l(9), l(16), cb10[r0.y + 7].z
    utof r20.w, r9.w
    sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r20.xyzw, t8.wxyz, s2, r6.w
    and r23.xyz, r18.yzwy, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r23.xyz, r23.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r6.w, r23.y, r23.x
    or r6.w, r23.z, r6.w
    movc r18.yzw, r6.wwww, l(0,1.000000,1.000000,0), r18.yyzw
    dp3 r23.x, r17.xyzx, r19.xyzx
    dp3 r23.y, r17.xyzx, r21.xyzx
    dp3 r23.z, r17.xyzx, r22.xyzx
    mad_sat r17.xyz, r23.xyzx, cb10[r0.y + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mul r23.xy, r17.xyxx, cb10[r0.y + 4].zwzz
    mul r23.z, r17.z, cb10[r0.y + 5].x
    add r17.xyz, r23.xyzx, cb10[r0.y + 5].yzwy
    dp3 r20.x, r11.xyzx, r19.xyzx
    dp3 r20.y, r11.xyzx, r21.xyzx
    dp3 r20.z, r11.xyzx, r22.xyzx
    lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r20.xyzx
    movc r21.z, r19.x, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r21.xyz, r17.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
    mul r22.xyz, r20.xyzx, r20.xyzx
    mul r22.xyz, r18.xxxx, r22.xyzx
    movc r23.z, r19.y, l(0), l(0.500000)
    mov r23.xy, l(0,0,0,0)
    add r19.xyw, r17.xyxz, r23.xyxz
    sample_l_indexable(texture3d)(float,float,float,float) r19.xyw, r19.xywx, t18.xywz, s4, l(0.000000)
    mul r19.xyw, r22.yyyy, r19.xyxw
    mad r19.xyw, r21.xyxz, r22.xxxx, r19.xyxw
    movc r21.z, r19.z, l(0), l(0.500000)
    mov r21.xy, l(0,0,0,0)
    add r17.xyz, r17.xyzx, r21.xyzx
    sample_l_indexable(texture3d)(float,float,float,float) r17.xyz, r17.xyzx, t19.xyzw, s4, l(0.000000)
    mad r17.xyz, r17.xyzx, r22.zzzz, r19.xywx
    sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r20.xyzw, t8.xyzw, s2, l(6.000000)
    and r20.xyz, r19.xyzx, l(0x7fffffff, 0x7fffffff, 0x7fffffff, 0)
    ieq r20.xyz, r20.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
    or r0.y, r20.y, r20.x
    or r0.y, r20.z, r0.y
    movc r19.xyz, r0.yyyy, l(1.000000,1.000000,0,0), r19.xyzx
    mul r20.xyz, r17.xyzx, r19.xyzx
    dp3 r0.y, r20.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r15.xyz, r17.xyzx, r19.xyzx, r15.xyzx
    mul r6.w, r0.y, r10.w
    mul r17.xyz, r18.xxxx, r18.yzwy
    dp3 r9.w, r17.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r0.y, r10.w, r0.y, r9.w
    div r0.y, r6.w, r0.y
    mad r16.yzw, r17.xxyz, r0.yyyy, r16.yyzw
  else 
    mov r17.w, r16.x
  endif 
else 
  mov r17.w, r16.x
  mov r12.w, r15.w
endif 
ge r0.y, r16.x, l(1.000000)
bfi r6.w, l(8), l(0), r12.w, r15.w
movc r0.y, r0.y, r6.w, r12.w
max r6.w, r17.w, l(1.000000)
rcp r6.w, r6.w
mov_sat r17.w, r17.w
mul r17.xyz, r6.wwww, r15.xyzx
mul r16.xyz, r6.wwww, r16.yzwy
lt r9.w, r17.w, l(0.990000)
if_nz r9.w
  iadd r0.y, r0.y, l(256)
  add r9.w, -r17.w, l(1.000000)
  mul r10.w, r9.w, cb2[19].x
  add r18.xyz, r5.yzwy, -cb2[35].xyzx
  mul r19.x, r18.x, cb2[35].w
  mul r19.yz, r18.yyzy, cb2[36].xxyx
  add_sat r18.xyz, r19.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r19.xy, r18.xyxx, cb2[36].zwzz
  mul r19.z, r18.z, cb2[37].x
  add r18.xyz, r19.xyzx, cb2[37].yzwy
  lt r19.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r19.xyz, r19.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r19.w, l(0)
  add r20.xyz, r18.xyzx, r19.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
  mul r21.xyz, r11.xyzx, r11.xyzx
  mul r21.xyz, r10.wwww, r21.xyzx
  add r22.xyz, r18.xyzx, r19.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r22.xyz, r22.xyzx, t18.xyzw, s4, l(0.000000)
  mul r22.xyz, r21.yyyy, r22.xyzx
  mad r20.xyz, r20.xyzx, r21.xxxx, r22.xyzx
  add r18.xyz, r18.xyzx, r19.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t19.xyzw, s4, l(0.000000)
  mad r18.xyz, r18.xyzx, r21.zzzz, r20.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r18.xyz, r18.xyzx, r19.xyzx
  dp3 r10.w, r18.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r17.xyz, r15.xyzx, r6.wwww, r18.xyzx
  mov r14.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r14.xyzw, t8.xyzw, s2, r8.w
  mad r6.w, cb2[19].x, r9.w, -r10.w
  mad r6.w, r2.y, r6.w, r10.w
  mad r16.xyz, r14.xyzx, r6.wwww, r16.xyzx
endif 
add r1.w, -r1.w, l(1.000000)
mad r13.yzw, r16.xxyz, r1.wwww, r13.yyzw
add r1.w, r5.x, r2.x
log r1.w, |r1.w|
mul r1.w, r1.w, r2.w
exp r1.w, r1.w
add r1.w, r5.x, r1.w
add_sat r1.w, r1.w, l(-1.000000)
mul r1.w, r4.y, r1.w
mul r14.xyz, r5.xxxx, r17.xyzx
mad r15.xy, r2.xyxx, l(0.984375, 0.984375, 0.000000, 0.000000), l(0.00781250, 0.00781250, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r15.xy, r15.xyxx, t5.xyzw, s2, l(0.000000)
mul r13.yzw, r1.wwww, r13.yyzw
mul r15.xzw, r15.xxxx, r13.yyzw
mul r13.yzw, r15.yyyy, r13.yyzw
if_nz r3.z
  mov r16.x, l(3)
  mov r16.yzw, cb1[24].xxyz
  store_structured u2.xyzw, cb2[52].x, l(112), r16.xyzw
endif 
lt r1.w, l(0.000000), r4.w
if_nz r1.w
  if_nz r3.z
    ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r1.w, cb2[52].x, l(112), u2.xxxx
    or r1.w, r1.w, l(4)
    store_structured u2.x, cb2[52].x, l(112), r1.w
    store_structured u2.x, cb2[52].x, l(128), r7.w
  endif 
  lt r1.w, l(0.000000), r7.w
  if_nz r1.w
    sqrt r1.w, r2.w
    mad r1.w, r1.w, l(0.500000), l(0.500000)
    mul r1.w, r1.w, r1.w
    mul r2.y, r1.w, l(0.500000)
    mad r1.w, -r1.w, l(0.500000), l(1.000000)
    mad r4.y, r2.x, r1.w, r2.y
    mul r1.w, r1.w, r4.y
    mul r2.y, r2.y, r4.y
    mul r4.y, r2.z, cb2[18].w
    mul r4.y, r4.w, r4.y
    if_nz cb2[23].x
      add r16.xyz, r5.yzwy, cb1[24].xyzx
      mov r16.w, l(1.000000)
      dp4 r5.x, cb2[24].xyzw, r16.xyzw
      dp4 r6.w, cb2[25].xyzw, r16.xyzw
      frc r16.x, r5.x
      frc r16.y, r6.w
      iadd r5.x, l(-1), cb2[23].x
      utof r16.z, r5.x
      sample_l_indexable(texture2darray)(float,float,float,float) r16.xyz, r16.xyzx, t20.xyzw, s2, l(0.000000)
      add r16.xyz, r16.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r16.xyz, cb2[23].yyyy, r16.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r16.xyz, r16.xyzx, cb2[18].xyzx
    else 
      mov r16.xyz, cb2[18].xyzx
    endif 
    ushr r5.x, cb2[53].x, l(16)
    ult r6.w, l(0), r5.x
    and r6.w, r1.z, r6.w
    if_nz r6.w
      iadd r5.x, r5.x, cb2[0].x
      imad r5.x, r5.x, l(15), l(-15)
      mad r6.w, |r4.z|, l(-0.200000), l(0.400000)
      mad r17.xyz, r11.xyzx, r6.wwww, r5.yzwy
      mov r18.xyz, cb9[r5.x + 4].yzwy
      mov r18.w, cb9[r5.x + 5].x
      mov r17.w, l(1.000000)
      dp4 r18.x, r18.xyzw, r17.xyzw
      mov r19.xyz, cb9[r5.x + 5].yzwy
      mov r19.w, cb9[r5.x + 6].x
      dp4 r18.y, r19.xyzw, r17.xyzw
      mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r19.x, r18.x, cb9[r5.x + 9].w
      add r19.y, r18.y, cb9[r5.x + 10].x
      mul r18.xy, r19.xyxx, cb9[r5.x + 9].yzyy
      div r18.zw, cb9[r5.x + 3].yyyy, cb9[r5.x + 8].yyyw
      add r19.xy, -r18.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r19.xy, r18.xyxx, r19.xyxx
      ge r18.zw, r18.zzzw, r18.xxxy
      or r18.zw, r18.zzzw, r19.xxxy
      or r6.w, r18.w, r18.z
      if_z r6.w
        mov r19.xyz, cb9[r5.x + 6].yzwy
        mov r19.w, cb9[r5.x + 7].x
        dp4 r6.w, r19.xyzw, r17.xyzw
        mov_sat r18.xy, r18.xyxx
        mad r17.x, r18.x, cb9[r5.x + 8].y, cb9[r5.x + 8].z
        mad r17.y, r18.y, cb9[r5.x + 8].w, cb9[r5.x + 9].x
        add r6.w, r6.w, cb9[r5.x + 10].y
        div r6.w, r6.w, cb9[r5.x + 10].z
        max r6.w, r6.w, l(0.00006104)
        and r8.w, l(0x0000ffff), cb9[r5.x + 1].w
        if_nz cb2[58].y
          mov r18.x, -r4.x
          utof r19.z, r8.w
          mov r18.y, r13.x
          mov r18.z, r4.x
          mov r9.w, l(0)
          mov r10.w, l(0)
          loop 
            ige r11.w, r10.w, l(8)
            breakc_nz r11.w
            dp2 r20.x, icb[r10.w + 0].yxyy, r18.xyxx
            dp2 r20.y, icb[r10.w + 0].yxyy, r18.yzyy
            mad r19.xy, r20.xyxx, cb9[r5.x + 3].yyyy, r17.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.w, r19.xyzx, t9.xxxx, s13, r6.w
            mad r9.w, r11.w, l(0.125000), r9.w
            iadd r10.w, r10.w, l(1)
          endloop 
        else 
          utof r17.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r17.xyzx, t9.xxxx, s13, r6.w
        endif 
        mul r5.x, r9.w, r9.w
        mul r5.x, r9.w, r5.x
      else 
        mov r5.x, l(1.000000)
      endif 
      mul r7.w, r5.x, r7.w
    else 
      and r5.x, cb2[53].x, l(0x0000ffff)
      ult r6.w, l(0), r5.x
      not r1.z, r1.z
      and r1.z, r1.z, r6.w
      if_nz r1.z
        iadd r1.z, r5.x, cb2[0].x
        imad r1.z, r1.z, l(15), l(-15)
        mad r5.x, |r4.z|, l(-0.200000), l(0.400000)
        mad r17.xyz, r11.xyzx, r5.xxxx, r5.yzwy
        mov r18.xyz, cb9[r1.z + 4].yzwy
        mov r18.w, cb9[r1.z + 5].x
        mov r17.w, l(1.000000)
        dp4 r18.x, r18.xyzw, r17.xyzw
        mov r19.xyz, cb9[r1.z + 5].yzwy
        mov r19.w, cb9[r1.z + 6].x
        dp4 r18.y, r19.xyzw, r17.xyzw
        mad r18.xy, r18.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r19.x, r18.x, cb9[r1.z + 9].w
        add r19.y, r18.y, cb9[r1.z + 10].x
        mul r18.xy, r19.xyxx, cb9[r1.z + 9].yzyy
        div r18.zw, cb9[r1.z + 3].yyyy, cb9[r1.z + 8].yyyw
        add r19.xy, -r18.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r19.xy, r18.xyxx, r19.xyxx
        ge r18.zw, r18.zzzw, r18.xxxy
        or r18.zw, r18.zzzw, r19.xxxy
        or r5.x, r18.w, r18.z
        if_z r5.x
          mov r19.xyz, cb9[r1.z + 6].yzwy
          mov r19.w, cb9[r1.z + 7].x
          dp4 r5.x, r19.xyzw, r17.xyzw
          mov_sat r18.xy, r18.xyxx
          mad r17.x, r18.x, cb9[r1.z + 8].y, cb9[r1.z + 8].z
          mad r17.y, r18.y, cb9[r1.z + 8].w, cb9[r1.z + 9].x
          add r5.x, r5.x, cb9[r1.z + 10].y
          div r5.x, r5.x, cb9[r1.z + 10].z
          max r5.x, r5.x, l(0.00006104)
          and r6.w, l(0x0000ffff), cb9[r1.z + 1].w
          if_nz cb2[58].y
            mov r18.x, -r4.x
            utof r19.z, r6.w
            mov r18.y, r13.x
            mov r18.z, r4.x
            mov r4.x, l(0)
            mov r8.w, l(0)
            loop 
              ige r9.w, r8.w, l(8)
              breakc_nz r9.w
              dp2 r20.x, icb[r8.w + 0].yxyy, r18.xyxx
              dp2 r20.y, icb[r8.w + 0].yxyy, r18.yzyy
              mad r19.xy, r20.xyxx, cb9[r1.z + 3].yyyy, r17.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.w, r19.xyzx, t9.xxxx, s13, r5.x
              mad r4.x, r9.w, l(0.125000), r4.x
              iadd r8.w, r8.w, l(1)
            endloop 
          else 
            utof r17.z, r6.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r4.x, r17.xyzx, t9.xxxx, s13, r5.x
          endif 
          mul r1.z, r4.x, r4.x
          mul r1.z, r4.x, r1.z
        else 
          mov r1.z, l(1.000000)
        endif 
        mul r7.w, r1.z, r7.w
      endif 
    endif 
    mad r1.z, -r2.x, l(0.500000), l(1.000000)
    mad r1.z, -r4.w, r1.z, l(1.000000)
    mul r1.z, r1.z, r1.z
    mad r1.z, -r1.z, l(0.620000), l(0.620000)
    add r1.z, -r4.w, r1.z
    mad r1.z, r2.w, r1.z, r4.w
    mul r1.z, r7.w, r1.z
    lt r2.x, l(0.000000), r4.z
    mad r17.xyz, r1.zzzz, r16.xyzx, r14.xyzx
    mad r18.xyz, -r5.yzwy, r0.wwww, cb2[17].xyzx
    dp3 r0.w, r18.xyzx, r18.xyzx
    rsq r0.w, r0.w
    mul r18.xyz, r0.wwww, r18.xyzx
    dp3 r0.w, r18.xyzx, r12.xyzx
    dp3 r1.z, r11.xyzx, r18.xyzx
    mad r2.z, |r1.z|, r2.z, -|r1.z|
    mad r1.z, |r1.z|, r2.z, l(1.000000)
    mad r1.w, r4.w, r1.w, r2.y
    mul r1.z, r1.z, r1.z
    mul r1.z, r1.w, r1.z
    rcp r1.z, r1.z
    mul r1.z, r4.y, r1.z
    mul r1.z, r1.z, r7.w
    mul r1.z, r1.z, l(0.250000)
    mad r2.yzw, r1.zzzz, r16.xxyz, r13.yyzw
    add_sat r0.w, -r0.w, l(1.000000)
    mul r1.w, r0.w, r0.w
    mul r1.w, r1.w, r1.w
    mul r0.w, r0.w, r1.w
    mul r0.w, r0.w, r1.z
    mad r4.xyz, r0.wwww, r16.xyzx, r15.xzwx
    movc r14.xyz, r2.xxxx, r17.xyzx, r14.xyzx
    movc r15.xzw, r2.xxxx, r4.xxyz, r15.xxzw
    movc r13.yzw, r2.xxxx, r2.yyzw, r13.yyzw
    if_nz r3.z
      ld_structured_indexable(structured_buffer, stride=1792)(mixed,mixed,mixed,mixed) r0.w, cb2[52].x, l(112), u2.xxxx
      or r0.w, r0.w, l(8)
      store_structured u2.x, cb2[52].x, l(112), r0.w
      store_structured u2.x, cb2[52].x, l(132), r7.w
    endif 
    mov r0.w, l(0x00010101)
  else 
    mov r0.w, l(257)
  endif 
else 
  mov r0.w, l(1)
endif 
mad r2.xyz, r3.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r1.z, r2.y
mad r3.xyw, r7.zxzy, l(3.000000, 1.000000, 0.000000, 2.000000), l(0.500000, 0.000000, 0.000000, -1.000000)
ftou r1.w, r3.x
ieq r1.w, r1.z, r1.w
movc r3.xy, r1.wwww, r3.ywyy, l(-1.000000,0,0,0)
mad r4.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r4.x
ieq r1.w, r1.z, r1.w
movc r4.xy, r1.wwww, r4.yzyy, l(-1.000000,0,0,0)
mad r7.xyz, r9.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r7.x
ieq r1.w, r1.z, r1.w
movc r4.zw, r1.wwww, r7.yyyz, l(0,0,-1.000000,0)
mad r7.xyz, r10.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.w, r7.x
ieq r1.z, r1.z, r1.w
movc r1.zw, r1.zzzz, r7.yyyz, l(0,0,-1.000000,0)
mov r7.x, r3.x
mov r7.yz, r4.xxzx
mov r7.w, r1.z
add r7.xyzw, -r2.xxxx, r7.xyzw
ge r7.xyzw, |r7.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r7.xyzw, r7.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r1.z, r7.y, r7.x
add r1.z, r7.z, r1.z
add r1.z, r7.w, r1.z
mul r3.x, r4.y, r7.y
mad r3.x, r7.x, r3.y, r3.x
mad r3.x, r7.z, r4.w, r3.x
mad r1.w, r7.w, r1.w, r3.x
div r2.w, r1.w, r1.z
ge r1.z, l(0.000000), r1.z
movc r2.yz, r1.zzzz, l(0,0,0,0), r2.zzwz
and r1.zw, r1.xxxy, l(0, 0, 1, 1)
ieq r1.z, r1.w, r1.z
movc r2.xyz, r1.zzzz, r2.xyzx, r2.xzyx
mad r1.z, -r2.z, l(0.500000), r2.x
add r4.y, r1.z, r2.z
mad r4.z, -r2.y, l(0.500000), r1.z
add r4.x, r2.y, r4.z
add r2.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r15.xzwx
mad r2.xyz, r13.yzwy, r4.xyzx, r2.xyzx
mad r2.xyz, r14.xyzx, r6.xyzx, r2.xyzx
lt r1.z, l(0.000000), cb2[9].z
if_nz r1.z
  dp3 r1.z, r5.yzwy, r5.yzwy
  rsq r1.w, r1.z
  mul r3.xyw, r1.wwww, r5.yzyw
  sqrt r1.z, r1.z
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r4.xy, r1.zzzz, cb2[15].xyxx, cb2[14].zwzz
    mul r4.xy, r4.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |r5.w|
    mul r4.zw, r5.wwww, cb2[15].zzzw
    mul r6.xy, r4.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r6.xy, r6.xyxx
    add r6.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r4.zw, r6.xxxy, r4.zzzw
    mul r4.zw, r4.zzzw, r4.xxxy
    movc r4.xy, r1.wwww, r4.zwzz, r4.xyxx
    mul r4.xzw, r4.xxxx, cb2[12].xxyz
    exp r4.xzw, r4.xxzw
    mul r6.xyz, r4.yyyy, cb2[12].xyzx
    exp r6.xyz, r6.xyzx
    add r6.xyz, -r4.xzwx, r6.xyzx
    mad r4.xyz, cb2[13].wwww, r6.xyzx, r4.xzwx
  else 
    mad r1.w, r1.z, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |r5.w|
    mul r4.w, r5.w, cb2[15].z
    mul r5.x, r4.w, l(-1.442695)
    exp r5.x, r5.x
    add r5.x, -r5.x, l(1.000000)
    div r4.w, r5.x, r4.w
    mul r4.w, r1.w, r4.w
    movc r1.w, r2.w, r4.w, r1.w
    mul r6.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r6.xyzx
  endif 
  mad r4.xyz, r4.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r4.xyz, r4.xyzx, -cb2[9].zzzz
  dp3 r1.w, cb2[7].yzwy, -r3.xywx
  mad r2.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r3.x, cb2[8].w, -r1.w, l(1.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, l(12.566371)
  div r2.w, r2.w, r3.x
  add r1.z, r1.z, -cb2[10].w
  mul_sat r1.z, r1.z, cb2[11].w
  mul r1.z, r1.z, r2.w
  mov_sat r1.w, r1.w
  mad r1.w, r1.w, r1.w, l(1.000000)
  mad r1.w, r1.w, l(0.05968310), l(-1.000000)
  mad r1.w, cb2[8].z, r1.w, l(1.000000)
  mul r3.xyw, r1.zzzz, cb2[11].xyxz
  mad r3.xyw, r1.wwww, cb2[10].xyxz, r3.xyxw
  mul r3.xyw, r3.xyxw, cb2[9].wwww
  add r6.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyw, r3.xyxw, r6.xyxz
  mad r3.xyw, r2.xyxz, r4.xyxz, r3.xyxw
else 
  mul r1.z, r5.w, cb2[6].x
  mad r1.w, cb2[6].x, r5.w, cb2[5].x
  lt r2.w, |r1.z|, l(0.000100)
  min r4.x, r1.w, l(64.000000)
  mul r4.x, r4.x, l(1.442695)
  exp r4.x, r4.x
  mov_sat r4.y, cb2[6].z
  lt r4.z, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r4.z, r4.x, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r1.z, r2.w, l(1.000000), r1.z
  div r1.z, r1.w, r1.z
  movc r1.z, r2.w, r4.y, r1.z
  mul r1.z, r1.z, cb2[5].z
  dp3 r1.w, r5.yzwy, r5.yzwy
  sqrt r2.w, r1.w
  mad r1.z, r1.z, r2.w, cb2[5].w
  exp r1.z, r1.z
  min r1.z, r1.z, l(1.000000)
  add r1.z, -r1.z, l(1.000000)
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, r5.yzwy
  dp3 r1.w, cb2[7].yzwy, r4.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r4.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r4.xyzw, r1.wwww, r4.xyzw, cb2[4].xyzw
  mul r1.z, r1.z, r4.w
  add r4.xyz, -r2.xyzx, r4.xyzx
  mad r3.xyw, r1.zzzz, r4.xyxz, r2.xyxz
endif 
mul r2.xyz, r3.xywx, cb1[85].yyyy
ge r3.xyw, r2.xyxz, l(0.00006104, 0.00006104, 0.000000, 0.00006104)
and r2.xyz, r2.xyzx, r3.xywx
min r2.xyz, r2.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ilt r1.z, l(0), cb2[55].w
and r4.xyzw, cb2[55].wwww, l(32, 3, 64, 12)
ine r3.xy, r4.xzxx, l(0, 0, 0, 0)
ieq r4.xy, r4.ywyy, l(1, 8, 0, 0)
and r3.xy, r3.xyxx, r4.xyxx
and r4.xy, r3.xyxx, l(0x3e4ccccd, 0x3e4ccccd, 0, 0)
and r1.w, cb2[55].w, l(16)
ine r2.w, r1.w, l(0)
ieq r1.w, r1.w, l(0)
and r1.w, r1.w, r2.w
and r4.z, r1.w, l(0x3e4ccccd)
mad r3.xyw, r4.xyxz, cb1[85].xxxx, -r2.xyxz
mad r3.xyw, r3.xyxw, l(0.500000, 0.500000, 0.000000, 0.500000), r2.xyxz
movc r2.xyz, r1.zzzz, r3.xywx, r2.xyzx
if_nz cb2[52].y
  if_nz cb2[53].y
    switch cb2[53].y
      case l(1)
      mov r1.z, l(1)
      break 
      case l(2)
      ubfe r1.z, l(1), l(8), r0.w
      break 
      case l(3)
      ushr r1.z, r0.w, l(16)
      break 
      case l(4)
      and r1.z, r0.y, l(3)
      break 
      case l(5)
      ushr r1.z, r0.y, l(8)
      break 
      default 
      mov r1.z, l(0)
      break 
    endswitch 
    utof r1.z, r1.z
    mul r1.z, r1.z, cb2[53].z
    mad r3.xyw, r1.zzzz, l(0.500000, 0.500000, 0.000000, 0.500000), -r2.xyxz
    mad r2.xyz, cb2[53].wwww, r3.xywx, r2.xyzx
  endif 
endif 
store_uav_typed u0.xyzw, r1.xyyy, r2.xyzx
if_nz r3.z
  add r1.xyz, r5.yzwy, cb1[24].xyzx
  mov r1.w, l(1)
  store_structured u2.xyzw, cb2[52].x, l(92), r1.xyzw
  and r1.x, r0.y, l(3)
  store_structured u2.x, cb2[52].x, l(108), r1.x
endif 
if_nz cb2[52].y
  atomic_iadd g1, l(0), l(1)
  ubfe r1.x, l(1), l(8), r0.w
  atomic_iadd g1, l(4), r1.x
  ushr r0.w, r0.w, l(16)
  atomic_iadd g1, l(8), r0.w
  and r1.y, r0.y, l(3)
  atomic_iadd g1, l(12), r1.y
  ushr r0.y, r0.y, l(8)
  atomic_iadd g1, l(16), r0.y
  atomic_umax g2, l(0), l(1)
  atomic_umax g2, l(4), r1.x
  atomic_umax g2, l(8), r0.w
  atomic_umax g2, l(12), r1.y
  atomic_umax g2, l(16), r0.y
  imm_atomic_iadd r1.x, g0, l(0), l(1)
  ieq r0.y, r1.x, l(63)
  if_nz r0.y
    ld_raw r1.xyzw, l(0), g1.xyzw
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,40,0,44)
    atomic_iadd u2, r2.xyxx, r1.x
    atomic_iadd u2, r2.zwzz, r1.y
    mov r2.xz, cb2[52].xxxx
    mov r2.yw, l(0,48,0,52)
    atomic_iadd u2, r2.xyxx, r1.z
    atomic_iadd u2, r2.zwzz, r1.w
    ld_raw r0.y, l(16), g1.xxxx
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,56,0,0)
    atomic_iadd u2, r1.xyxx, r0.y
    ld_raw r2.xyzw, l(0), g2.xyzw
    atomic_umax u2, r1.zwzz, r2.x
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,4,0,8)
    atomic_umax u2, r1.xyxx, r2.y
    atomic_umax u2, r1.zwzz, r2.z
    mov r1.xz, cb2[52].xxxx
    mov r1.yw, l(0,12,0,16)
    atomic_umax u2, r1.xyxx, r2.w
    ld_raw r0.y, l(16), g2.xxxx
    atomic_umax u2, r1.zwzz, r0.y
    ieq r0.xz, r0.xxzx, cb2[52].zzwz
    and r0.x, r0.z, r0.x
    if_nz r0.x
      store_structured u2.xyzw, cb2[52].x, l(20), r2.xyzw
      store_structured u2.x, cb2[52].x, l(36), r0.y
    endif 
  endif 
endif 
ret 
// Approximately 1785 instruction slots used
