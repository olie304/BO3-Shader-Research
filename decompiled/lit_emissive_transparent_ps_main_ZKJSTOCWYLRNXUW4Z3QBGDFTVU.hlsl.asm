//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:35:04 2021
//
//
// Note: shader requires additional functionality:
//       Early depth-stencil
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 colorTint;                  // Offset:  160 Size:    12
//   float baseNormalHeight;            // Offset:  172 Size:     4
//   float2 glossRange;                 // Offset:  176 Size:     8
//   float rowCount;                    // Offset:  184 Size:     4
//   float columnCount;                 // Offset:  188 Size:     4
//   float imageTime;                   // Offset:  192 Size:     4
//   float2 rotateUVs;                  // Offset:  196 Size:     8
//   float2 scrollUVs;                  // Offset:  208 Size:     8
//   float2 scaleUVs;                   // Offset:  216 Size:     8
//   float2 offsetUVs;                  // Offset:  224 Size:     8
//   float2 zoomUVs;                    // Offset:  232 Size:     8
//   float zoomRate;                    // Offset:  240 Size:     4
//   float layerDepth;                  // Offset:  244 Size:     4
//   bool clampU;                       // Offset:  248 Size:     4
//   bool clampV;                       // Offset:  252 Size:     4
//   float2 flickerSeed;                // Offset:  256 Size:     8
//   float flickerSpeed;                // Offset:  264 Size:     4
//   float2 flickerRange;               // Offset:  272 Size:     8
//   float flickerPower;                // Offset:  280 Size:     4
//   uint zFeatherComputeSprites;       // Offset:  284 Size:     4
//   float hdrScale;                    // Offset:  288 Size:     4
//   float emissiveFalloffPower;        // Offset:  292 Size:     4
//   float3 emissiveTint1;              // Offset:  304 Size:    12
//   bool relativeHDR;                  // Offset:  316 Size:     4
//   bool invertFalloff;                // Offset:  320 Size:     4
//   float uvMotionToggle1;             // Offset:  324 Size:     4
//   float2 scriptControl;              // Offset:  328 Size:     8 [unused]
//   float3 tint1;                      // Offset:  336 Size:    12
//   float3 tint2;                      // Offset:  352 Size:    12
//   float3 tint3;                      // Offset:  368 Size:    12
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for shaderConstantSetBuffer
// {
//
//   struct GpuShaderConstantSet
//   {
//       
//       float4 scriptVector0;          // Offset:    0
//       float4 scriptVector1;          // Offset:   16
//       float4 scriptVector2;          // Offset:   32
//       float4 scriptVector3;          // Offset:   48
//       float4 scriptVector4;          // Offset:   64
//       float4 scriptVector5;          // Offset:   80
//       float4 scriptVector6;          // Offset:   96
//       float4 scriptVector7;          // Offset:  112
//       float4 weaponParam0;           // Offset:  128
//       float4 weaponParam1;           // Offset:  144
//       float4 weaponParam2;           // Offset:  160
//       float4 weaponParam3;           // Offset:  176
//       float4 weaponParam4;           // Offset:  192
//       float4 weaponParam5;           // Offset:  208
//       float4 weaponParam6;           // Offset:  224
//       float4 weaponParam7;           // Offset:  240
//       float4 characterParam0;        // Offset:  256
//       float4 characterParam1;        // Offset:  272
//       float4 characterParam2;        // Offset:  288
//       float4 characterParam3;        // Offset:  304
//       float4 characterParam4;        // Offset:  320
//       float4 characterParam5;        // Offset:  336
//       float4 characterParam6;        // Offset:  352
//       float4 characterParam7;        // Offset:  368
//
//   } $Element;                        // Offset:    0 Size:   384
//
// }
//
// Resource bind info for modelInstanceBuffer
// {
//
//   struct ModelInstanceData
//   {
//       
//       uint boneArrayIndex;           // Offset:    0
//       uint shaderConstantSet;        // Offset:    4
//       uint flagsAndPrevFrameIndex;   // Offset:    8
//       uint worldMatrix;              // Offset:   12
//       uint siegeAnimStateOffset;     // Offset:   16
//       uint prevFrameSiegeAnimStateOffset;// Offset:   20
//
//   } $Element;                        // Offset:    0 Size:    24
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for forwardDecalConstants
// {
//
//   struct CoreDecalConstantsPack
//   {
//       
//       uint4 data[8];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   128
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// colorSampler                      sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// normalSampler                     sampler      NA          NA             s3      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// lookupSampler                     sampler      NA          NA             s5      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// shaderConstantSetBuffer           texture  struct         r/o             t0      1 
// modelInstanceBuffer               texture  struct         r/o             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// colorMap                          texture  float4          2d            t21      1 
// tintMask                          texture  float4          2d            t22      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// normalMap                         texture  float4          2d            t24      1 
// flickerLookupMap                  texture  float4          2d            t25      1 
// emissiveMap                       texture  float4          2d            t26      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// visibleDecals                     texture    uint     2darray            t35      1 
// forwardDecalConstants             texture  struct         r/o            t36      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexBC7linear              texture  float4     2darray            t44      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// gOit_Nodes                            UAV   uint2     2darray             u7      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    0   xyz         1     NONE   float   xyz 
// COLOR                    1      w        1     NONE   float      w
// TEXCOORD                 0   xy          2     NONE   float   xy  
// UVOFFSETS                0   xyz         3     NONE   float   xyz 
// TEXCOORD                 4      w        3     NONE    uint      w
// TEXCOORD                 1   xyz         4     NONE   float   xyz 
// TEXCOORD                 2   xyz         5     NONE   float   xyz 
// TEXCOORD                 3   xyz         6     NONE   float   xyz 
// OFFPOSITION              0   xyz         7     NONE   float   xyz 
// SV_IsFrontFace           0   x           8    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed | forceEarlyDepthStencil
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[24], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_structured t0, 384
dcl_resource_structured t4, 24
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_structured t23, 4
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t25
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2darray (float,float,float,float) t31
dcl_resource_texture2darray (uint,uint,uint,uint) t35
dcl_resource_structured t36, 128
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t44
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2darray (uint,uint,uint,uint) u7
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xy
dcl_input_ps constant v3.xyz
dcl_input_ps constant v3.w
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps_sgv constant v8.x, is_front_face
dcl_output o0.xyzw
dcl_temps 46
ld_structured_indexable(structured_buffer, stride=24)(mixed,mixed,mixed,mixed) r0.x, v3.w, l(4), t4.xxxx
ld_structured_indexable(structured_buffer, stride=384)(mixed,mixed,mixed,mixed) r0.xyz, r0.x, l(36), t0.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.xyxx, t21.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.w, v2.xyxx, t22.yzwx, s1
add r2.xyz, cb0[10].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, r0.wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, v1.xyzx
mul r0.w, r1.w, v1.w
mul_sat r1.w, cb0[11].y, l(0.05882353)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v2.xyxx, t24.xyzw, s3
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
mad r2.xyz, cb0[10].wwww, r2.xyzx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r2.xy, r2.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r2.w, -r2.w, l(1.000000)
max r2.w, r2.w, l(0.000000)
sqrt r2.w, r2.w
mul r2.z, r2.z, r2.z
mul r2.z, r2.z, l(0.33333334)
min r2.z, r2.z, l(1.000000)
movc r3.x, v8.x, l(1.000000), l(-1.000000)
dp3 r3.y, v4.xyzx, v4.xyzx
rsq r3.y, r3.y
mul r3.yzw, r3.yyyy, v4.xxyz
mul r3.yzw, r3.xxxx, r3.yyzw
dp3 r4.x, v5.xyzx, v5.xyzx
rsq r4.x, r4.x
mul r4.xyz, r4.xxxx, v5.xyzx
mul r4.xyz, r3.xxxx, r4.xyzx
dp3 r4.w, v6.xyzx, v6.xyzx
rsq r4.w, r4.w
mul r5.xyz, r4.wwww, v6.xyzx
mul r5.xyz, r3.xxxx, r5.xyzx
mul r1.w, r1.w, l(-17.000000)
exp r1.w, r1.w
add r1.w, r1.w, r2.z
log r1.w, r1.w
mul r1.w, r1.w, l(-0.05882353)
max r1.w, r1.w, l(0.000000)
mul r5.xyz, r2.yyyy, r5.xyzx
mad r2.xyz, r4.xyzx, r2.xxxx, r5.xyzx
mad r2.xyz, r3.yzwy, r2.wwww, r2.xyzx
dp3 r2.w, r2.xyzx, r2.xyzx
rsq r2.w, r2.w
mul r2.xyz, r2.wwww, r2.xyzx
ge r2.w, v0.z, l(0.984375)
mul r4.x, v0.z, l(1.01587307)
mad r4.y, v0.z, l(64.000000), l(-63.000000)
movc r2.w, r2.w, r4.y, r4.x
max r2.w, r2.w, l(0.00000001)
rcp r2.w, r2.w
ftou r4.xy, v0.yxyy
deriv_rtx_coarse r5.xyz, v7.xyzx
deriv_rty_coarse r6.xyz, v7.xyzx
iadd r4.z, cb2[0].y, cb2[0].x
add r7.xyz, v7.xyzx, cb1[24].xyzx
mul r2.w, r2.w, l(0.00781250)
min r2.w, r2.w, l(15.000000)
ftou r2.w, r2.w
ushr r8.xy, r4.yxyy, l(6, 6, 0, 0)
ishl r8.z, r2.w, l(4)
and r2.w, cb2[57].z, l(-32)
iadd r4.w, -r2.w, cb2[57].z
mov r9.xy, l(0,0,0,0)
mov r10.w, l(0)
mov r7.w, l(1.000000)
mov r11.xyz, l(0,0,0,0)
mov r12.xyz, l(0,0,0,0)
mov r13.xyz, l(0,0,0,0)
mov r5.w, l(0)
mov r6.w, l(0)
mov r8.w, l(0)
loop 
  uge r9.w, r8.w, cb2[57].z
  breakc_nz r9.w
  ushr r9.z, r8.w, l(5)
  iadd r10.xyz, r8.xyzx, r9.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r9.z, r10.xyzw, t35.yzxw
  ieq r9.w, r2.w, r8.w
  ubfe r10.x, r4.w, l(0), r9.z
  movc r9.z, r9.w, r10.x, r9.z
  iadd r9.w, r4.z, r8.w
  mov r10.xyz, r11.xyzx
  mov r14.xyz, r12.xyzx
  mov r15.xyz, r13.xyzx
  mov r11.w, r5.w
  mov r12.w, r6.w
  mov r13.w, r9.z
  loop 
    breakc_z r13.w
    firstbit_lo r14.w, r13.w
    ishl r15.w, l(1), r14.w
    and r16.x, r13.w, r15.w
    if_nz r16.x
      xor r13.w, r13.w, r15.w
      iadd r15.w, r9.w, r14.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r16.xyzw, r15.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r17.xy, r15.w, l(16), t11.xyxx
      add r16.xyz, r16.xyzx, -v7.xyzx
      mov r17.z, r16.w
      lt r16.xyz, |r16.xyzx|, r17.zxyz
      and r15.w, r16.y, r16.x
      and r15.w, r16.z, r15.w
      if_nz r15.w
        iadd r14.w, r8.w, r14.w
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyz, r14.w, l(0), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyz, r14.w, l(16), t36.xyzx
        ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyz, r14.w, l(32), t36.xyzx
        mov r19.x, r16.x
        mov r19.y, r17.x
        mov r19.z, r18.x
        dp3 r15.w, r19.xyzx, r19.xyzx
        rsq r15.w, r15.w
        mul r20.xyz, r15.wwww, r19.xyzx
        dp3 r15.w, r20.xyzx, v4.xyzx
        ge r15.w, r15.w, l(0.500000)
        if_nz r15.w
          ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r21.xyw, r14.w, l(48), t36.xyxz
          mov r19.w, r21.x
          dp4 r19.x, r7.xyzw, r19.xyzw
          mov r22.x, r16.y
          mov r22.y, r17.y
          mov r22.z, r18.y
          mov r22.w, r21.y
          dp4 r19.y, r7.xyzw, r22.xyzw
          mov r21.x, r16.z
          mov r21.y, r17.z
          mov r21.z, r18.z
          dp4 r19.z, r7.xyzw, r21.xyzw
          lt r16.xyz, |r19.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
          and r15.w, r16.y, r16.x
          and r15.w, r16.z, r15.w
          if_nz r15.w
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r16.xyzw, r14.w, l(64), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r17.xyzw, r14.w, l(80), t36.xyzw
            ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r18.xyzw, r14.w, l(96), t36.xyzw
            dp3 r23.x, r5.xyzx, r22.xyzx
            dp3 r23.y, r5.xyzx, r21.xyzx
            dp3 r24.x, r6.xyzx, r22.xyzx
            dp3 r24.y, r6.xyzx, r21.xyzx
            mad r19.xy, r19.yzyy, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
            mul r23.xyz, r23.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            mul r24.xyz, r24.xyxx, l(0.500000, -0.500000, 0.500000, 0.000000)
            and r19.zw, r17.yyyz, l(0, 0, 0x0000ffff, 0x0000ffff)
            if_nz r19.z
              ubfe r15.w, l(4), l(24), r17.w
              ishl r15.w, l(1), r15.w
              ushr r20.w, r17.w, l(28)
              ishl r20.w, l(1), r20.w
              ieq r21.w, r19.z, l(4)
              if_nz r21.w
                and r21.w, r17.w, l(4095)
                ubfe r22.w, l(12), l(12), r17.w
                and r23.w, r18.w, l(1023)
                utof r25.xz, r15.wwww
                utof r25.y, r20.w
                mad r26.xy, r19.xyxx, r25.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r26.zw, r25.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r26.xy, r26.zwzz, r26.xyxx
                utof r27.x, r21.w
                utof r27.y, r22.w
                add r26.xy, r26.xyxx, r27.xyxx
                mul r26.xy, r26.xyxx, cb1[83].xyxx
                utof r26.z, r23.w
                mul r27.xyz, r23.zyzz, cb1[83].xyxx
                mul r27.xyz, r25.xyzx, r27.xyzx
                mul r28.xyz, r24.zyzz, cb1[83].xyxx
                mul r25.xyz, r25.xyzx, r28.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r26.xyzx, t42.xyzw, s4, r27.xyzx, r25.xyzx
              else 
                ieq r19.z, r19.z, l(1)
                if_nz r19.z
                  and r19.z, r17.w, l(4095)
                  ubfe r17.w, l(12), l(12), r17.w
                  and r21.w, r18.w, l(1023)
                  utof r26.xz, r15.wwww
                  utof r26.y, r20.w
                  mad r27.xy, r19.xyxx, r26.zyzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r27.zw, r26.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r27.xy, r27.zwzz, r27.xyxx
                  utof r28.x, r19.z
                  utof r28.y, r17.w
                  add r27.xy, r27.xyxx, r28.xyxx
                  mul r27.xy, r27.xyxx, cb1[83].zwzz
                  utof r27.z, r21.w
                  mul r28.xyz, r23.zyzz, cb1[83].zwzz
                  mul r28.xyz, r26.xyzx, r28.xyzx
                  mul r29.xyz, r24.zyzz, cb1[83].zwzz
                  mul r26.xyz, r26.xyzx, r29.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r25.xyzw, r27.xyzx, t43.xyzw, s4, r28.xyzx, r26.xyzx
                else 
                  mov r25.xyzw, l(1.000000,1.000000,1.000000,1.000000)
                endif 
              endif 
              mul r16.xyz, r16.xyzx, r25.xyzx
              mul r15.w, r16.w, r25.w
            else 
              mov r16.xyz, l(0,0,0,0)
              mov r15.w, l(0)
            endif 
            ne r17.w, r17.x, l(1.000000)
            add r16.w, r16.w, r15.w
            mad_sat r16.w, r16.w, r17.x, -r17.x
            movc r15.w, r17.w, r16.w, r15.w
            if_nz r19.w
              ubfe r16.w, l(4), l(24), r18.y
              ishl r16.w, l(1), r16.w
              ushr r17.x, r18.y, l(28)
              ishl r17.x, l(1), r17.x
              ieq r17.w, r19.w, l(2)
              if_nz r17.w
                and r17.w, r18.y, l(4095)
                ubfe r25.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r18.ywyy
                utof r26.xz, r16.wwww
                utof r26.y, r17.x
                mad r25.zw, r19.xxxy, r26.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r25.zw, r25.zzzw, r27.xxxy
                utof r27.x, r17.w
                utof r27.yz, r25.xxyx
                add r25.xz, r25.zzwz, r27.xxyx
                mul r27.xy, r25.xzxx, cb1[84].xyxx
                mul r25.xyz, r23.zyzz, cb1[84].xyxx
                mul r25.xyz, r26.xyzx, r25.xyzx
                mul r28.xyz, r24.zyzz, cb1[84].xyxx
                mul r26.xyz, r26.xyzx, r28.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t45.yzwx, s4, r25.xyzx, r26.xyzx
              else 
                ieq r19.z, r19.w, l(4)
                if_nz r19.z
                  and r19.z, r18.y, l(4095)
                  ubfe r25.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r18.ywyy
                  utof r26.xz, r16.wwww
                  utof r26.y, r17.x
                  mad r25.zw, r19.xxxy, r26.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r25.zw, r25.zzzw, r27.xxxy
                  utof r27.x, r19.z
                  utof r27.yz, r25.xxyx
                  add r19.zw, r25.zzzw, r27.xxxy
                  mul r27.xy, r19.zwzz, cb1[83].xyxx
                  mul r25.xyz, r23.zyzz, cb1[83].xyxx
                  mul r25.xyz, r26.xyzx, r25.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].xyxx
                  mul r26.xyz, r26.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t42.yzwx, s4, r25.xyzx, r26.xyzx
                else 
                  and r19.z, r18.y, l(4095)
                  ubfe r25.xy, l(12, 10, 0, 0), l(12, 20, 0, 0), r18.ywyy
                  utof r26.xz, r16.wwww
                  utof r26.y, r17.x
                  mad r25.zw, r19.xxxy, r26.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                  add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                  min r25.zw, r25.zzzw, r27.xxxy
                  utof r27.x, r19.z
                  utof r27.yz, r25.xxyx
                  add r19.zw, r25.zzzw, r27.xxxy
                  mul r27.xy, r19.zwzz, cb1[83].zwzz
                  mul r25.xyz, r23.zyzz, cb1[83].zwzz
                  mul r25.xyz, r26.xyzx, r25.xyzx
                  mul r28.xyz, r24.zyzz, cb1[83].zwzz
                  mul r26.xyz, r26.xyzx, r28.xyzx
                  sample_d_indexable(texture2darray)(float,float,float,float) r17.w, r27.xyzx, t43.yzwx, s4, r25.xyzx, r26.xyzx
                endif 
              endif 
              mad r25.xyz, r17.wwww, l(0.960000, 0.960000, 0.960000, 0.000000), l(0.040000, 0.040000, 0.040000, 0.000000)
              add_sat r16.w, -r17.w, l(1.000000)
              mul r16.xyz, r16.wwww, r16.xyzx
            else 
              mov r25.xyz, l(0.040000,0.040000,0.040000,0)
            endif 
            ushr r17.xy, r17.zyzz, l(16, 16, 0, 0)
            if_nz r17.x
              ieq r16.w, r17.x, l(2)
              if_nz r16.w
                ld_structured_indexable(structured_buffer, stride=128)(mixed,mixed,mixed,mixed) r14.w, r14.w, l(112), t36.xxxx
                ubfe r17.zw, l(0, 0, 4, 12), l(0, 0, 24, 12), r18.zzzz
                ishl r16.w, l(1), r17.z
                ushr r17.z, r18.z, l(28)
                ishl r17.z, l(1), r17.z
                and r18.y, r18.z, l(4095)
                and r14.w, r14.w, l(1023)
                utof r26.xz, r16.wwww
                utof r26.y, r17.z
                mad r19.zw, r19.xxxy, r26.zzzy, l(0.000000, 0.000000, 0.500000, 0.500000)
                add r27.xy, r26.zyzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
                min r19.zw, r19.zzzw, r27.xxxy
                utof r27.x, r18.y
                utof r27.y, r17.w
                add r17.zw, r19.zzzw, r27.xxxy
                mul r27.xy, r17.zwzz, cb1[84].xyxx
                utof r27.z, r14.w
                mul r28.xyz, r23.zyzz, cb1[84].xyxx
                mul r28.xyz, r26.xyzx, r28.xyzx
                mul r29.xyz, r24.zyzz, cb1[84].xyxx
                mul r26.xyz, r26.xyzx, r29.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r14.w, r27.xyzx, t45.yzwx, s4, r28.xyzx, r26.xyzx
              else 
                ieq r16.w, r17.x, l(6)
                movc r14.w, r16.w, l(0), l(1.000000)
              endif 
            else 
              mov r14.w, l(1.000000)
            endif 
            mul_sat r14.w, r14.w, l(0.76470590)
            if_nz r17.y
              ieq r16.w, r17.y, l(3)
              if_nz r16.w
                ubfe r17.xyz, l(4, 12, 10, 0), l(24, 12, 10, 0), r18.xxwx
                ishl r16.w, l(1), r17.x
                ushr r17.x, r18.x, l(28)
                ishl r17.x, l(1), r17.x
                and r17.w, r18.x, l(4095)
                utof r18.xz, r16.wwww
                utof r18.y, r17.x
                mad r19.xy, r19.xyxx, r18.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r19.zw, r18.zzzy, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r19.xy, r19.zwzz, r19.xyxx
                utof r26.xy, r17.wyww
                add r17.xy, r19.xyxx, r26.xyxx
                mul r19.xy, r17.xyxx, cb1[84].zwzz
                utof r19.z, r17.z
                mul r17.xyz, r23.xyzx, cb1[84].zwzz
                mul r17.xyz, r18.xyzx, r17.xyzx
                mul r23.xyz, r24.xyzx, cb1[84].zwzz
                mul r18.xyz, r18.xyzx, r23.xyzx
                sample_d_indexable(texture2darray)(float,float,float,float) r17.xyz, r19.xyzx, t44.xyzw, s4, r17.xyzx, r18.xyzx
              else 
                mov r17.xyz, l(0.500000,0.500000,1.000000,0)
              endif 
              mad r17.xy, r17.xyxx, l(1.99218750, 1.99218750, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              dp2 r16.w, r17.xyxx, r17.xyxx
              add r16.w, -r16.w, l(1.000000)
              max r16.w, r16.w, l(0.000000)
              sqrt r16.w, r16.w
              mul r17.z, r17.z, r17.z
              mul r17.z, r17.z, l(0.33333334)
              min r17.z, r17.z, l(1.000000)
              dp3 r17.w, r22.xyzx, r22.xyzx
              rsq r17.w, r17.w
              mul r18.xyz, r17.wwww, r22.xyzx
              dp3 r17.w, -r21.xyzx, -r21.xyzx
              rsq r17.w, r17.w
              mul r19.xyz, r17.wwww, -r21.xyzx
              mul r20.xyz, r3.xxxx, r20.xyzx
              mul r18.xyz, r3.xxxx, r18.xyzx
              mul r19.xyz, r3.xxxx, r19.xyzx
              mul r17.w, r14.w, l(-17.000000)
              exp r17.w, r17.w
              add r17.z, r17.w, r17.z
              log r17.z, r17.z
              mul r17.z, r17.z, l(-0.05882353)
              max r14.w, r17.z, l(0.000000)
              mul r17.yzw, r17.yyyy, r19.xxyz
              mad r17.xyz, r18.xyzx, r17.xxxx, r17.yzwy
              mad r17.xyz, r20.xyzx, r16.wwww, r17.xyzx
              dp3 r16.w, r17.xyzx, r17.xyzx
              rsq r16.w, r16.w
              mul r17.xyz, r16.wwww, r17.xyzx
              add r16.w, -r15.w, l(1.000000)
              mul r18.xyz, r14.xyzx, r16.wwww
              mad r14.xyz, r17.xyzx, r15.wwww, r18.xyzx
            endif 
            add r16.w, -r15.w, l(1.000000)
            mul r17.xyz, r10.xyzx, r16.wwww
            mad r10.xyz, r16.xyzx, r15.wwww, r17.xyzx
            mul r16.xyz, r15.xyzx, r16.wwww
            mad r15.xyz, r25.xyzx, r15.wwww, r16.xyzx
            mad r11.w, r11.w, r16.w, r15.w
            mul r16.x, r12.w, r16.w
            mad r12.w, r14.w, r15.w, r16.x
          endif 
        endif 
      endif 
    endif 
  endloop 
  mov r11.xyz, r10.xyzx
  mov r12.xyz, r14.xyzx
  mov r13.xyz, r15.xyzx
  mov r5.w, r11.w
  mov r6.w, r12.w
  iadd r8.w, r8.w, l(32)
endloop 
mov_sat r5.w, r5.w
add r2.w, -r5.w, l(1.000000)
mad r1.xyz, r1.xyzx, r2.wwww, r11.xyzx
mad r0.w, r0.w, r2.w, r5.w
mad r2.xyz, r2.xyzx, r2.wwww, r12.xyzx
dp3 r3.x, r2.xyzx, r2.xyzx
rsq r3.x, r3.x
mul r5.xyz, r2.xyzx, r3.xxxx
mad r2.y, r1.w, r2.w, r6.w
mad r6.xyz, r2.wwww, l(0.040000, 0.040000, 0.040000, 0.000000), r13.xyzx
add r0.z, -r0.z, cb1[69].w
mov_sat r0.x, r0.x
mul r0.x, r0.x, cb0[18].x
eq r9.xyz, r0.yyyy, l(3.000000, 2.000000, 1.000000, 0.000000)
lt r0.y, r0.y, l(0.000000)
movc r10.xyz, r0.yyyy, l(1.000000,1.000000,1.000000,0), cb0[19].xyzx
movc r10.xyz, r9.zzzz, cb0[21].xyzx, r10.xyzx
movc r9.yzw, r9.yyyy, cb0[22].xxyz, r10.xxyz
movc r9.xyz, r9.xxxx, cb0[23].xyzx, r9.yzwy
lt r0.y, l(0.500000), cb0[20].y
if_nz r0.y
  mul r0.y, cb0[11].w, cb0[11].z
  mul r1.w, r0.y, cb0[12].x
  mul r2.z, r0.z, r1.w
  ge r2.z, r2.z, -r2.z
  movc r2.z, r2.z, r1.w, -r1.w
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
  mul r3.x, r0.z, r3.x
  frc r3.x, r3.x
  mul r2.z, r2.z, r3.x
  div r1.w, r2.z, r1.w
  mul r0.y, r0.y, r1.w
  round_ne r0.y, r0.y
  div r1.w, r0.y, cb0[11].w
  mul r2.z, r0.y, cb0[11].w
  ge r2.z, r2.z, -r2.z
  movc r2.z, r2.z, cb0[11].w, -cb0[11].w
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.z
  mul r0.y, r0.y, r3.x
  frc r0.y, r0.y
  mul r0.y, r0.y, r2.z
  round_z r0.y, r0.y
  add r0.y, r0.y, v2.x
  div r10.x, r0.y, cb0[11].w
  round_z r0.y, r1.w
  add r0.y, r0.y, v2.y
  div r10.y, r0.y, cb0[11].z
else 
  dp3 r0.y, -v7.xyzx, -v7.xyzx
  rsq r0.y, r0.y
  mul r11.xyz, r0.yyyy, -v7.xyzx
  dp3 r12.x, r11.xyzx, v5.xyzx
  dp3 r12.y, r11.xyzx, v6.xyzx
  dp3 r0.y, r11.xyzx, v4.xyzx
  lt r1.w, l(0.000000), r0.y
  div r4.zw, -r12.xxxy, r0.yyyy
  and r4.zw, r1.wwww, r4.zzzw
  add r10.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  add r0.y, cb0[15].y, l(0.000010)
  mul r4.zw, r0.yyyy, r4.zzzw
  mul r4.zw, r4.zzzw, cb0[13].zzzw
  mad r4.zw, r10.zzzw, cb0[13].zzzw, r4.zzzw
  mad r4.zw, cb0[14].xxxy, cb0[13].zzzw, r4.zzzw
  mad r0.y, cb0[12].z, r0.z, l(1.000000)
  mul r0.y, r0.y, cb0[12].y
  mul r0.y, r0.y, l(0.01745329)
  sincos r3.x, r11.x, r0.y
  mov r11.y, r11.x
  mov r11.z, r3.x
  dp2 r12.x, r11.yzyy, r4.zwzz
  mov r11.x, -r3.x
  dp2 r12.y, r11.xyxx, r4.zwzz
  mul r0.yz, r0.zzzz, cb0[13].xxyx
  mad r0.yz, r0.yyzy, cb0[13].zzwz, r12.xxyx
  mul r1.w, cb0[15].x, cb1[69].w
  sincos null, r1.w, r1.w
  mad r1.w, r1.w, l(0.500000), l(0.500000)
  add r1.w, -r1.w, l(1.000000)
  add r2.z, -cb0[14].z, cb0[14].w
  mad r1.w, r1.w, r2.z, cb0[14].z
  div r0.yz, r0.yyzy, r1.wwww
  add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  mov_sat r4.zw, r0.yyyz
  movc r10.xy, cb0[15].zwzz, r4.zwzz, r0.yzyy
endif 
dp3 r0.y, -v7.xyzx, -v7.xyzx
rsq r0.y, r0.y
mul r11.xyz, r0.yyyy, -v7.xyzx
dp3_sat r0.z, r11.xyzx, r3.yzwy
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r10.xyxx, t26.xyzw, s1
mul r3.xyz, r9.xyzx, r3.xyzx
log r1.w, r0.z
mul r1.w, r1.w, cb0[18].y
exp r1.w, r1.w
add r0.z, -r0.z, l(1.000000)
log r0.z, r0.z
mul r0.z, r0.z, cb0[18].y
exp r0.z, r0.z
movc r0.z, cb0[20].x, r0.z, r1.w
eq r1.w, cb0[18].y, l(0.000000)
movc r0.z, r1.w, l(1.000000), r0.z
mul r0.x, r0.x, r3.w
mul r0.x, r0.z, r0.x
mul r0.x, r2.w, r0.x
mul r3.xyz, r0.xxxx, r3.xyzx
add r0.x, v3.y, v3.x
add r0.x, r0.x, v3.z
add r0.x, r0.x, cb0[16].y
frc r0.x, r0.x
mad r9.y, cb1[69].w, cb0[16].z, r0.x
mov r9.x, cb0[16].x
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r9.xyxx, t25.xyzw, s5, l(0.000000)
log r0.x, |r0.x|
mul r0.x, r0.x, cb0[17].z
exp r0.x, r0.x
add r0.z, -cb0[17].x, cb0[17].y
mad r0.x, r0.x, r0.z, cb0[17].x
mul r3.xyz, r0.xxxx, r3.xyzx
ine r0.x, cb1[92].x, l(0)
utof r2.zw, r4.xxxy
dp2 r0.z, r2.wzww, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r4.x, r9.x, r0.z
dp2 r0.z, r2.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r0.z, r0.z
mul r0.z, r0.z, l(52.982918)
frc r0.z, r0.z
mad r0.z, r0.z, l(6.28318548), cb1[70].w
sincos r10.x, r12.x, r0.z
dp3_sat r2.x, r5.xyzx, r11.xyzx
dp3 r0.z, -r11.xyzx, r5.xyzx
add r0.z, r0.z, r0.z
mad r13.xyz, r5.xyzx, -r0.zzzz, -r11.xyzx
mul r0.z, r2.y, l(17.000000)
exp r0.z, r0.z
add r0.z, r0.z, l(2.000000)
div r0.z, l(2.000000), r0.z
sqrt r1.w, r0.z
add r2.z, -r2.y, l(1.000000)
mul r2.w, r2.z, l(5.000000)
mad r4.z, r2.z, l(5.000000), l(-2.500000)
mul_sat r4.z, r4.z, l(0.400000)
mul r4.z, r4.z, l(100.000000)
mad r10.yz, -r2.zzzz, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r4.w, r10.y
mul r4.w, r2.x, r4.w
mul r4.w, r4.w, l(9.136810)
mul r6.w, r2.z, r2.w
mad r6.w, -r6.w, l(2.015905), r10.z
exp r6.w, r6.w
mul r6.w, r2.x, r6.w
mul r6.w, r6.w, l(9.708090)
max r4.w, r4.w, r6.w
max r4.w, r4.w, l(1.268160)
iadd r6.w, cb2[0].y, -cb2[58].x
and r8.w, r6.w, l(-32)
iadd r9.w, r6.w, -r8.w
and r10.y, cb2[0].y, l(-32)
iadd r10.z, -r10.y, cb2[0].y
mov r14.xy, l(0,0,0,0)
mov r15.w, l(0)
mov r16.yz, l(0,0,1.000000,0)
mov r17.xy, l(0,0,0,0)
mov r18.x, l(1.000000)
mov r19.xy, l(0,0,0,0)
mov r20.xy, l(0,0,0,0)
mov r21.xyzw, l(0,0,0,0)
mov r22.yzw, l(0,0,0,0)
mov r10.w, r8.w
loop 
  uge r11.w, r10.w, cb2[0].y
  breakc_nz r11.w
  ushr r14.z, r10.w, l(5)
  iadd r15.xyz, r8.xyzx, r14.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r11.w, r15.xyzw, t7.yzwx
  ieq r12.y, r8.w, r10.w
  bfi r12.z, r9.w, l(0), l(0), r11.w
  movc r11.w, r12.y, r12.z, r11.w
  ieq r12.y, r10.y, r10.w
  ubfe r12.z, r10.z, l(0), r11.w
  movc r11.w, r12.y, r12.z, r11.w
  iadd r12.y, r10.w, cb2[0].x
  mov r23.xyzw, r21.xyzw
  mov r24.xyz, r22.yzwy
  mov r12.z, r11.w
  loop 
    breakc_z r12.z
    firstbit_lo r12.w, r12.z
    ishl r14.z, l(1), r12.w
    and r14.w, r12.z, r14.z
    if_nz r14.w
      xor r12.z, r12.z, r14.z
      iadd r14.z, r12.w, r12.y
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r14.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r15.xy, r14.z, l(16), t11.xyxx
      add r25.xyz, r25.xyzx, -v7.xyzx
      mov r15.z, r25.w
      lt r15.xyz, |r25.xyzx|, r15.zxyz
      and r14.z, r15.y, r15.x
      and r14.z, r15.z, r14.z
      if_nz r14.z
        iadd r12.w, r10.w, r12.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r12.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r14.zw, r12.w, l(96), t15.xxxy
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r12.w, l(116), t15.zwxy
        add r15.xyz, -r25.yzwy, v7.xyzx
        and r16.w, r26.w, l(0x0000ffff)
        ubfe r17.w, l(6), l(25), r26.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r16.w, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r16.w, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(80), t16.xyzw
        dp3 r18.z, r27.xyzx, r15.xyzx
        add_sat r18.z, r27.w, r18.z
        dp3 r18.w, r28.xyzx, r15.xyzx
        add_sat r18.w, r28.w, r18.w
        mul r18.z, r18.w, r18.z
        dp3 r18.w, r29.xyzx, r15.xyzx
        add_sat r18.w, r29.w, r18.w
        mul r18.z, r18.w, r18.z
        dp3 r18.w, r30.xyzx, r15.xyzx
        add_sat r18.w, r30.w, r18.w
        mul r18.z, r18.w, r18.z
        dp3 r18.w, r31.xyzx, r15.xyzx
        add_sat r18.w, r31.w, r18.w
        mul r18.z, r18.w, r18.z
        dp3 r18.w, r32.xyzx, r15.xyzx
        add_sat r18.w, r32.w, r18.w
        mul r16.x, r18.w, r18.z
        and r18.z, r14.z, l(1)
        movc r18.zw, r18.zzzz, r16.xxxy, r16.zzzx
        mov r16.x, r14.z
        mov r27.xy, r18.zwzz
        mov r19.w, l(1)
        loop 
          ige r20.w, r19.w, r17.w
          breakc_nz r20.w
          iadd r20.w, r16.w, r19.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r20.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r20.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r20.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r20.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r20.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r20.w, l(80), t16.xyzw
          dp3 r20.w, r28.xyzx, r15.xyzx
          add_sat r20.w, r28.w, r20.w
          mul r20.w, r20.w, r27.x
          dp3 r25.w, r29.xyzx, r15.xyzx
          add_sat r25.w, r29.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r30.xyzx, r15.xyzx
          add_sat r25.w, r30.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r31.xyzx, r15.xyzx
          add_sat r25.w, r31.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r32.xyzx, r15.xyzx
          add_sat r25.w, r32.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r33.xyzx, r15.xyzx
          add_sat r25.w, r33.w, r25.w
          mul r27.x, r20.w, r25.w
          ushr r27.z, r16.x, l(2)
          ubfe r27.w, l(1), l(2), r16.x
          and r28.x, r27.z, l(2)
          max r28.y, r27.x, r27.y
          mad r20.w, -r20.w, r25.w, l(1.000000)
          mul r20.w, r20.w, r27.y
          movc r18.y, r28.x, r20.w, r28.y
          movc r27.xy, r27.wwww, r27.xyxx, r18.xyxx
          iadd r19.w, r19.w, l(1)
          mov r16.x, r27.z
        endloop 
        mov_sat r27.y, r27.y
        mul r14.z, r14.w, r27.y
        lt r16.x, l(0.000000), r14.z
        if_nz r16.x
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r12.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r12.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r12.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r12.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r12.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r12.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xy, r12.w, l(212), t15.xyxx
          mad r24.z, r27.y, r14.w, r24.z
          mul r12.w, r26.z, r14.z
          mov r26.z, r33.z
          dp3 r14.z, r13.xyzx, r26.xyzx
          dp3 r14.w, r15.xyzx, r26.xyzx
          add r14.w, -r33.w, r14.w
          ge r16.x, r14.w, l(0.000000)
          max r14.w, r4.z, |r14.w|
          movc r14.w, r16.x, r14.w, -r14.w
          max r14.z, -r14.z, l(0.00000010)
          div r14.z, r14.w, r14.z
          min r14.z, |r14.z|, l(131072.000000)
          mov r33.z, r34.z
          dp3 r14.w, r13.xyzx, r33.xyzx
          dp3 r16.x, r15.xyzx, r33.xyzx
          add r16.x, -r34.w, r16.x
          ge r16.w, r16.x, l(0.000000)
          max r16.x, r4.z, |r16.x|
          movc r16.x, r16.w, r16.x, -r16.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r16.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r34.z, r35.z
          dp3 r14.w, r13.xyzx, r34.xyzx
          dp3 r16.x, r15.xyzx, r34.xyzx
          add r16.x, -r35.w, r16.x
          ge r16.w, r16.x, l(0.000000)
          max r16.x, r4.z, |r16.x|
          movc r16.x, r16.w, r16.x, -r16.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r16.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r35.z, r36.z
          dp3 r14.w, r13.xyzx, r35.xyzx
          dp3 r16.x, r15.xyzx, r35.xyzx
          add r16.x, -r36.w, r16.x
          ge r16.w, r16.x, l(0.000000)
          max r16.x, r4.z, |r16.x|
          movc r16.x, r16.w, r16.x, -r16.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r16.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r36.z, r37.x
          dp3 r14.w, r13.xyzx, r36.xyzx
          dp3 r16.x, r15.xyzx, r36.xyzx
          add r16.x, -r37.y, r16.x
          ge r16.w, r16.x, l(0.000000)
          max r16.x, r4.z, |r16.x|
          movc r16.x, r16.w, r16.x, -r16.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r16.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r38.zw, r37.zzzw
          dp3 r14.w, r13.zxyz, r38.xzwx
          dp3 r16.x, r15.zxyz, r38.xzwx
          add r16.x, -r38.y, r16.x
          ge r16.w, r16.x, l(0.000000)
          max r16.x, r4.z, |r16.x|
          movc r16.x, r16.w, r16.x, -r16.x
          max r14.w, -r14.w, l(0.00000010)
          div r14.w, r16.x, r14.w
          min r14.z, |r14.w|, r14.z
          mov r26.x, r30.w
          mov r26.yz, r31.zzwz
          add r18.yzw, r15.xxyz, r26.xxyz
          mad r18.yzw, r13.xxyz, r14.zzzz, r18.yyzw
          dp3 r14.w, r18.yzwy, r18.yzwy
          sqrt r14.w, r14.w
          div r14.z, r14.z, r14.w
          add r14.z, r14.z, r14.z
          sqrt r14.z, r14.z
          mad r14.z, r2.z, l(5.000000), r14.z
          add r14.z, r14.z, l(-0.844800)
          mov r25.y, r28.z
          mov r25.z, r29.x
          dp3 r33.x, r18.yzwy, r25.xyzx
          mov r26.xy, r28.xwxx
          mov r26.z, r29.w
          dp3 r33.y, r18.yzwy, r26.xyzx
          mov r29.x, r28.y
          dp3 r33.z, r18.yzwy, r29.xyzx
          ubfe r14.w, l(9), l(16), r26.w
          utof r33.w, r14.w
          sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r33.xyzw, t8.wxyz, s2, r14.z
          dp3 r28.x, r15.xyzx, r25.xyzx
          dp3 r28.y, r15.xyzx, r26.xyzx
          dp3 r28.z, r15.xyzx, r29.xyzx
          mad_sat r15.xyz, r28.xyzx, r30.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r31.z, r32.x
          mad r15.xyz, r15.xyzx, r31.xyzx, r32.yzwy
          dp3 r33.x, r5.xyzx, r25.xyzx
          dp3 r33.y, r5.xyzx, r26.xyzx
          dp3 r33.z, r5.xyzx, r29.xyzx
          lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r33.xyzx
          movc r17.z, r25.x, l(0), l(0.500000)
          add r26.xyz, r15.xyzx, r17.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
          mul r27.xzw, r33.xxyz, r33.xxyz
          mul r27.xzw, r12.wwww, r27.xxzw
          movc r19.z, r25.y, l(0), l(0.500000)
          add r25.xyw, r15.xyxz, r19.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
          mul r25.xyw, r27.zzzz, r25.xyxw
          mad r25.xyw, r26.xyxz, r27.xxxx, r25.xyxw
          movc r20.z, r25.z, l(0), l(0.500000)
          add r15.xyz, r15.xyzx, r20.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r15.xyz, r15.xyzx, t19.xyzw, s4, l(0.000000)
          mad r15.xyz, r15.xyzx, r27.wwww, r25.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r33.xyzw, t8.xyzw, s2, l(6.000000)
          mul r26.xyz, r15.xyzx, r25.xyzx
          dp3 r14.z, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r23.xyz, r15.xyzx, r25.xyzx, r23.xyzx
          mul r14.w, r4.w, r14.z
          mul r15.xyz, r12.wwww, r18.yzwy
          dp3 r12.w, r15.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r12.w, r4.w, r14.z, r12.w
          div r12.w, r14.w, r12.w
          mov r25.x, r23.w
          mov r25.yz, r24.xxyx
          mad r24.xyw, r15.yzyx, r12.wwww, r25.yzyx
          mov r23.w, r24.w
        endif 
      endif 
    endif 
  endloop 
  mov r21.xyzw, r23.xyzw
  mov r22.yzw, r24.xxyz
  iadd r10.w, r10.w, l(32)
endloop 
lt r10.y, r22.w, l(1.000000)
if_nz r10.y
  mov r14.xy, l(0,0,0,0)
  mov r15.w, l(0)
  mov r16.yz, l(0,0,1.000000,0)
  mov r17.xy, l(0,0,0,0)
  mov r18.x, l(1.000000)
  mov r19.xy, l(0,0,0,0)
  mov r20.xy, l(0,0,0,0)
  mov r23.x, r21.w
  mov r23.yzw, r22.yyzw
  mov r10.yzw, r21.xxyz
  mov r11.w, r22.w
  mov r12.y, l(0)
  loop 
    uge r12.z, r12.y, r6.w
    breakc_nz r12.z
    ushr r14.z, r12.y, l(5)
    iadd r15.xyz, r8.xyzx, r14.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r12.z, r15.xyzw, t7.yzxw
    ieq r12.w, r8.w, r12.y
    ubfe r14.z, r9.w, l(0), r12.z
    movc r12.z, r12.w, r14.z, r12.z
    iadd r12.w, r12.y, cb2[0].x
    mov r24.xyzw, r23.xyzw
    mov r15.xyz, r10.yzwy
    mov r14.z, r11.w
    mov r14.w, r12.z
    loop 
      breakc_z r14.w
      firstbit_lo r16.w, r14.w
      ishl r17.w, l(1), r16.w
      and r18.z, r14.w, r17.w
      if_nz r18.z
        xor r14.w, r14.w, r17.w
        iadd r17.w, r12.w, r16.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r25.xyzw, r17.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r26.xy, r17.w, l(16), t11.xyxx
        add r25.xyz, r25.xyzx, -v7.xyzx
        mov r26.z, r25.w
        lt r25.xyz, |r25.xyzx|, r26.zxyz
        and r17.w, r25.y, r25.x
        and r17.w, r25.z, r17.w
        if_nz r17.w
          iadd r16.w, r12.y, r16.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r25.xyzw, r16.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.zw, r16.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r26.xyzw, r16.w, l(116), t15.zwxy
          add r27.xyz, -r25.yzwy, v7.xyzx
          and r17.w, r26.w, l(0x0000ffff)
          ubfe r19.w, l(6), l(25), r26.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r17.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r17.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r17.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r17.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r17.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r17.w, l(80), t16.xyzw
          dp3 r20.w, r28.xyzx, r27.xyzx
          add_sat r20.w, r28.w, r20.w
          dp3 r25.w, r29.xyzx, r27.xyzx
          add_sat r25.w, r29.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r30.xyzx, r27.xyzx
          add_sat r25.w, r30.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r31.xyzx, r27.xyzx
          add_sat r25.w, r31.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r32.xyzx, r27.xyzx
          add_sat r25.w, r32.w, r25.w
          mul r20.w, r20.w, r25.w
          dp3 r25.w, r33.xyzx, r27.xyzx
          add_sat r25.w, r33.w, r25.w
          mul r16.x, r20.w, r25.w
          and r20.w, r18.z, l(1)
          movc r28.xy, r20.wwww, r16.xyxx, r16.zxzz
          mov r16.x, r18.z
          mov r29.xy, r28.xyxx
          mov r20.w, l(1)
          loop 
            ige r25.w, r20.w, r19.w
            breakc_nz r25.w
            iadd r25.w, r17.w, r20.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r25.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r25.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r32.xyzw, r25.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r33.xyzw, r25.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r34.xyzw, r25.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r35.xyzw, r25.w, l(80), t16.xyzw
            dp3 r25.w, r30.xyzx, r27.xyzx
            add_sat r25.w, r30.w, r25.w
            mul r25.w, r25.w, r29.x
            dp3 r27.w, r31.xyzx, r27.xyzx
            add_sat r27.w, r31.w, r27.w
            mul r25.w, r25.w, r27.w
            dp3 r27.w, r32.xyzx, r27.xyzx
            add_sat r27.w, r32.w, r27.w
            mul r25.w, r25.w, r27.w
            dp3 r27.w, r33.xyzx, r27.xyzx
            add_sat r27.w, r33.w, r27.w
            mul r25.w, r25.w, r27.w
            dp3 r27.w, r34.xyzx, r27.xyzx
            add_sat r27.w, r34.w, r27.w
            mul r25.w, r25.w, r27.w
            dp3 r27.w, r35.xyzx, r27.xyzx
            add_sat r27.w, r35.w, r27.w
            mul r29.x, r25.w, r27.w
            ushr r28.z, r16.x, l(2)
            ubfe r28.w, l(1), l(2), r16.x
            and r29.z, r28.z, l(2)
            max r29.w, r29.x, r29.y
            mad r25.w, -r25.w, r27.w, l(1.000000)
            mul r25.w, r25.w, r29.y
            movc r18.y, r29.z, r25.w, r29.w
            movc r29.xy, r28.wwww, r29.xyxx, r18.xyxx
            iadd r20.w, r20.w, l(1)
            mov r16.x, r28.z
          endloop 
          add_sat r16.x, -r14.z, r29.y
          mul r17.w, r18.w, r16.x
          lt r18.y, l(0.000000), r17.w
          if_nz r18.y
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r16.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r16.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r16.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r16.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r16.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r16.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r16.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xyzw, r16.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r37.xyzw, r16.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r38.xyzw, r16.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r39.xy, r16.w, l(212), t15.xyxx
            mad r24.w, r16.x, r18.w, r24.w
            mul r16.x, r26.z, r17.w
            mov r26.z, r34.z
            dp3 r16.w, r13.xyzx, r26.xyzx
            dp3 r17.w, r27.xyzx, r26.xyzx
            add r17.w, -r34.w, r17.w
            ge r18.y, r17.w, l(0.000000)
            max r17.w, r4.z, |r17.w|
            movc r17.w, r18.y, r17.w, -r17.w
            max r16.w, -r16.w, l(0.00000010)
            div r16.w, r17.w, r16.w
            min r16.w, |r16.w|, l(131072.000000)
            mov r34.z, r35.z
            dp3 r17.w, r13.xyzx, r34.xyzx
            dp3 r18.y, r27.xyzx, r34.xyzx
            add r18.y, -r35.w, r18.y
            ge r18.z, r18.y, l(0.000000)
            max r18.y, r4.z, |r18.y|
            movc r18.y, r18.z, r18.y, -r18.y
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.y, r17.w
            min r16.w, r16.w, |r17.w|
            mov r35.z, r36.z
            dp3 r17.w, r13.xyzx, r35.xyzx
            dp3 r18.y, r27.xyzx, r35.xyzx
            add r18.y, -r36.w, r18.y
            ge r18.z, r18.y, l(0.000000)
            max r18.y, r4.z, |r18.y|
            movc r18.y, r18.z, r18.y, -r18.y
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.y, r17.w
            min r16.w, r16.w, |r17.w|
            mov r36.z, r37.z
            dp3 r17.w, r13.xyzx, r36.xyzx
            dp3 r18.y, r27.xyzx, r36.xyzx
            add r18.y, -r37.w, r18.y
            ge r18.z, r18.y, l(0.000000)
            max r18.y, r4.z, |r18.y|
            movc r18.y, r18.z, r18.y, -r18.y
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.y, r17.w
            min r16.w, r16.w, |r17.w|
            mov r37.z, r38.x
            dp3 r17.w, r13.xyzx, r37.xyzx
            dp3 r18.y, r27.xyzx, r37.xyzx
            add r18.y, -r38.y, r18.y
            ge r18.z, r18.y, l(0.000000)
            max r18.y, r4.z, |r18.y|
            movc r18.y, r18.z, r18.y, -r18.y
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.y, r17.w
            min r16.w, r16.w, |r17.w|
            mov r39.zw, r38.zzzw
            dp3 r17.w, r13.zxyz, r39.xzwx
            dp3 r18.y, r27.zxyz, r39.xzwx
            add r18.y, -r39.y, r18.y
            ge r18.z, r18.y, l(0.000000)
            max r18.y, r4.z, |r18.y|
            movc r18.y, r18.z, r18.y, -r18.y
            max r17.w, -r17.w, l(0.00000010)
            div r17.w, r18.y, r17.w
            min r16.w, r16.w, |r17.w|
            mov r26.x, r31.w
            mov r26.yz, r32.zzwz
            add r18.yzw, r27.xxyz, r26.xxyz
            mad r18.yzw, r13.xxyz, r16.wwww, r18.yyzw
            dp3 r17.w, r18.yzwy, r18.yzwy
            sqrt r17.w, r17.w
            div r16.w, r16.w, r17.w
            add r16.w, r16.w, r16.w
            sqrt r16.w, r16.w
            mad r16.w, r2.z, l(5.000000), r16.w
            add r16.w, r16.w, l(-0.844800)
            mov r25.y, r28.z
            mov r25.z, r30.x
            dp3 r34.x, r18.yzwy, r25.xyzx
            mov r26.xy, r28.xwxx
            mov r26.z, r30.w
            dp3 r34.y, r18.yzwy, r26.xyzx
            mov r30.x, r28.y
            dp3 r34.z, r18.yzwy, r30.xyzx
            ubfe r17.w, l(9), l(16), r26.w
            utof r34.w, r17.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r18.yzw, r34.xyzw, t8.wxyz, s2, r16.w
            dp3 r28.x, r27.xyzx, r25.xyzx
            dp3 r28.y, r27.xyzx, r26.xyzx
            dp3 r28.z, r27.xyzx, r30.xyzx
            mad_sat r27.xyz, r28.xyzx, r31.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r32.z, r33.x
            mad r27.xyz, r27.xyzx, r32.xyzx, r33.yzwy
            dp3 r34.x, r5.xyzx, r25.xyzx
            dp3 r34.y, r5.xyzx, r26.xyzx
            dp3 r34.z, r5.xyzx, r30.xyzx
            lt r25.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r34.xyzx
            movc r17.z, r25.x, l(0), l(0.500000)
            add r26.xyz, r17.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t17.xyzw, s4, l(0.000000)
            mul r28.xyz, r34.xyzx, r34.xyzx
            mul r28.xyz, r16.xxxx, r28.xyzx
            movc r19.z, r25.y, l(0), l(0.500000)
            add r25.xyw, r19.xyxz, r27.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r25.xyw, r25.xywx, t18.xywz, s4, l(0.000000)
            mul r25.xyw, r28.yyyy, r25.xyxw
            mad r25.xyw, r26.xyxz, r28.xxxx, r25.xyxw
            movc r20.z, r25.z, l(0), l(0.500000)
            add r26.xyz, r20.xyzx, r27.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
            mad r25.xyz, r26.xyzx, r28.zzzz, r25.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r26.xyz, r34.xyzw, t8.xyzw, s2, l(6.000000)
            mul r27.xyz, r25.xyzx, r26.xyzx
            dp3 r16.w, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r15.xyz, r25.xyzx, r26.xyzx, r15.xyzx
            mul r17.z, r4.w, r16.w
            mul r18.yzw, r16.xxxx, r18.yyzw
            dp3 r16.x, r18.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r16.x, r4.w, r16.w, r16.x
            div r16.x, r17.z, r16.x
            mad r24.xyz, r18.yzwy, r16.xxxx, r24.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r23.xyzw, r24.xyzw
    mov r10.yzw, r15.xxyz
    iadd r12.y, r12.y, l(32)
  endloop 
  mov r22.xyzw, r23.zxyw
  mov r21.xyz, r10.yzwy
  mov r22.xyzw, r22.yzxw
else 
  mov r22.x, r21.w
endif 
max r2.z, r22.w, l(1.000000)
rcp r2.z, r2.z
mov_sat r22.w, r22.w
mul r14.xyz, r2.zzzz, r21.xyzx
mul r10.yzw, r2.zzzz, r22.xxyz
lt r4.z, r22.w, l(0.990000)
if_nz r4.z
  add r4.z, -r22.w, l(1.000000)
  mul r4.w, r4.z, cb2[19].x
  add r12.yzw, v7.xxyz, -cb2[35].xxyz
  mul r15.x, r12.y, cb2[35].w
  mul r15.yz, r12.zzwz, cb2[36].xxyx
  add_sat r12.yzw, r15.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
  mul r15.xy, r12.yzyy, cb2[36].zwzz
  mul r15.z, r12.w, cb2[37].x
  add r12.yzw, r15.xxyz, cb2[37].yyzw
  lt r15.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzx
  movc r15.xyz, r15.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r15.w, l(0)
  add r16.xyz, r12.yzwy, r15.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t17.xyzw, s4, l(0.000000)
  mul r17.xyz, r5.xyzx, r5.xyzx
  mul r17.xyz, r4.wwww, r17.xyzx
  add r18.xyz, r12.yzwy, r15.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t18.xyzw, s4, l(0.000000)
  mul r18.xyz, r17.yyyy, r18.xyzx
  mad r16.xyz, r16.xyzx, r17.xxxx, r18.xyzx
  add r12.yzw, r12.yyzw, r15.wwwz
  sample_l_indexable(texture3d)(float,float,float,float) r12.yzw, r12.yzwy, t19.wxyz, s4, l(0.000000)
  mad r12.yzw, r12.yyzw, r17.zzzz, r16.xxyz
  mov r5.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r15.xyz, r5.xyzw, t8.xyzw, s2, l(6.000000)
  mul r12.yzw, r12.yyzw, r15.xxyz
  dp3 r4.w, r12.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r14.xyz, r21.xyzx, r2.zzzz, r12.yzwy
  mov r13.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r12.yzw, r13.xyzw, t8.wxyz, s2, r2.w
  mad r2.z, cb2[19].x, r4.z, -r4.w
  mad r2.z, r2.y, r2.z, r4.w
  mad r10.yzw, r12.yyzw, r2.zzzz, r10.yyzw
endif 
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r15.xyz, r2.yyyy, r10.zwyz
mul r2.yzw, r2.zzzz, r10.yyzw
sqrt r4.z, r1.w
mad r4.z, r4.z, l(0.500000), l(0.500000)
mul r4.z, r4.z, r4.z
mul r4.w, r4.z, l(0.500000)
mad r4.z, -r4.z, l(0.500000), l(1.000000)
mad r5.w, r2.x, r4.z, r4.w
mul r4.zw, r4.zzzw, r5.wwww
dp3 r5.w, r5.xyzx, cb2[17].xyzx
mov_sat r6.w, r5.w
ge r8.w, l(0.000000), r6.w
if_nz r8.w
  mov r9.w, l(0)
endif 
if_z r8.w
  mul r10.yzw, v7.yyyy, cb2[29].xxyz
  mad r10.yzw, v7.xxxx, cb2[28].xxyz, r10.yyzw
  mad r10.yzw, v7.zzzz, cb2[30].xxyz, r10.yyzw
  add r10.yzw, r10.yyzw, cb2[31].xxyz
  add r8.w, r10.w, -cb2[17].w
  mad r8.w, -r8.w, l(0.00006104), l(1.000000)
  mov_sat r11.w, r8.w
  eq r11.w, r8.w, r11.w
  if_nz r11.w
    mov r11.w, l(0)
    mov r12.y, l(0)
    loop 
      ge r12.z, r11.w, l(3.000000)
      breakc_nz r12.z
      ftou r12.z, r11.w
      add r16.xy, r10.yzyy, -cb2[r12.z + 20].xyxx
      max r12.w, |r16.y|, |r16.x|
      mul r12.y, r12.w, cb2[r12.z + 20].z
      lt r12.z, r12.y, l(1.000000)
      if_nz r12.z
        break 
      endif 
      add r11.w, r11.w, l(1.000000)
      mov r12.y, l(0)
    endloop 
  else 
    mov r11.w, l(3.000000)
    mov r12.y, l(0)
  endif 
  ge r12.z, r11.w, l(3.000000)
  if_nz r12.z
    mul r16.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r17.xz, r16.xxxx
    mov r17.y, -r17.z
    mad r16.xyz, r10.yzyy, r17.xyzx, r16.yzyy
    add r17.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r16.xyz, r16.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r16.xyz, r17.xyzx, r16.xyzx
    mul r17.xy, r16.zyzz, cb2[32].xxxx
    round_ni r17.xy, r17.xyxx
    mul r12.w, r17.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r17.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r12.w, l(0), t23.xxxx
    and r16.w, r13.w, l(0x40000000)
    ishl r17.x, r13.w, l(2)
    if_z r16.w
      and r16.w, r13.w, l(0x01ffffff)
      iadd r18.x, r12.w, r16.w
      ushr r12.w, r13.w, l(25)
      utof r12.w, r12.w
      mul r16.xyz, r12.wwww, r16.xyzx
      frc r16.xyz, r16.xyzx
      mul r16.xyz, r16.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r16.xyz, r16.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      ushr r17.yz, r16.zzyz, l(0, 6, 6, 0)
      and r12.w, r18.z, l(0xc0000000)
      iadd r13.w, r18.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.w, l(0), t23.xxxx
      movc r13.w, r17.z, r18.z, r13.w
      ushr r16.w, r13.w, l(13)
      movc r13.w, r17.y, r16.w, r13.w
      and r13.w, r13.w, l(8191)
      iadd r19.x, r13.w, r18.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
      mov r18.y, l(0)
      mov r19.y, l(1)
      movc r17.yzw, r12.wwww, r18.xxyz, r19.xxyz
      movc r19.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r20.xy, r16.zyzz, r19.yyyy
      and r20.xy, r20.xyxx, l(1, 1, 0, 0)
      and r13.w, r17.w, l(0xc0000000)
      iadd r16.w, r17.y, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t23.xxxx
      movc r16.w, r20.y, r17.w, r16.w
      ushr r18.w, r16.w, l(13)
      movc r16.w, r20.x, r18.w, r16.w
      and r16.w, r16.w, l(8191)
      iadd r19.x, r16.w, r17.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.w, r19.x, l(0), t23.xxxx
      movc r17.yzw, r13.wwww, r17.yyzw, r19.xxzw
      movc r17.yzw, r12.wwww, r18.xxyz, r17.yyzw
      and r12.w, r17.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r17.z, l(6)
        ushr r18.xy, r16.zyzz, r12.wwww
        or r12.w, r17.w, l(0x40000000)
        bfi r13.w, l(1), l(1), r18.y, l(0)
        bfi r13.w, l(1), l(0), r18.x, r13.w
        imul null, r13.w, r13.w, l(10)
        ushr r12.w, r12.w, r13.w
        and r12.w, r12.w, l(1023)
        iadd r18.x, r12.w, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
        iadd r18.yz, r17.zzzz, l(0, 1, 2, 0)
        iadd r12.w, -r18.y, l(6)
        ushr r19.xy, r16.zyzz, r12.wwww
        and r12.w, r18.w, l(0xc0000000)
        or r13.w, r18.w, l(0x40000000)
        bfi r16.w, l(1), l(1), r19.y, l(0)
        bfi r16.w, l(1), l(0), r19.x, r16.w
        imul null, r16.w, r16.w, l(10)
        ushr r13.w, r13.w, r16.w
        and r13.w, r13.w, l(1023)
        iadd r19.x, r13.w, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.z, r19.x, l(0), t23.xxxx
        mov r19.y, r18.z
        movc r19.xyz, r12.wwww, r18.xywx, r19.xyzx
        iadd r13.w, -r19.y, l(6)
        ushr r18.yz, r16.zzyz, r13.wwww
        and r13.w, r19.z, l(0xc0000000)
        or r16.w, r19.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r18.z, l(0)
        bfi r17.z, l(1), l(0), r18.y, r17.z
        imul null, r17.z, r17.z, l(10)
        ushr r16.w, r16.w, r17.z
        and r16.w, r16.w, l(1023)
        iadd r20.x, r16.w, r19.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r20.y, r20.x, l(0), t23.xxxx
        movc r18.yz, r13.wwww, r19.xxzx, r20.xxyx
        movc r17.yw, r12.wwww, r18.xxxw, r18.yyyz
      endif 
      and r12.w, r17.w, l(0xc0000000)
      if_z r12.w
        ubfe r13.w, l(14), l(15), r17.w
        utof r13.w, r13.w
        mul r13.w, r13.w, cb2[27].w
        mul r13.w, r13.w, l(0.00006104)
        and r18.xy, r17.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.w, r18.x
        mul r16.w, r16.w, cb2[27].w
        mul r16.w, r16.w, l(0.00003052)
        and r17.z, r16.y, l(3)
        iadd r17.z, r17.z, r17.y
        iadd r17.z, r17.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.z, l(0), t23.xxxx
        bfi r18.xzw, l(2, 0, 2, 1), l(3, 0, 1, 4), r16.xxyz, l(0, 0, 0, 0)
        ushr r16.x, r17.z, r18.x
        and r16.x, r16.x, l(255)
        utof r16.x, r16.x
        mul r16.x, r16.w, r16.x
        mad r16.x, r16.x, l(0.00392157), r13.w
        iadd r16.y, r18.z, l(1)
        ubfe r16.z, l(1), l(1), r16.z
        iadd r16.y, r16.z, r16.y
        iadd r16.y, r16.y, r17.y
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.y, r16.y, l(0), t23.xxxx
        ushr r16.y, r16.y, r18.w
        and r16.y, r16.y, l(0x0000ffff)
        utof r16.y, r16.y
        mul r16.y, r16.w, r16.y
        mad r13.w, r16.y, l(0.00001526), r13.w
        movc r17.x, r18.y, r16.x, r13.w
      else 
        and r13.w, r17.w, l(0x80000000)
        iadd r16.x, r17.y, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(0), t23.xxxx
        movc r13.w, r13.w, r16.x, l(0)
        ishl r16.x, r17.w, l(2)
        ushr r16.y, r13.w, l(16)
        f16tof32 r16.y, r16.y
        and r13.w, r13.w, l(0x0000ffff)
        f16tof32 r13.w, r13.w
        mad r16.x, r10.y, r16.y, r16.x
        mad r13.w, r10.z, r13.w, r16.x
        movc r17.x, r12.w, r13.w, r17.x
      endif 
    endif 
    mad r10.w, -cb2[27].z, l(2.000000), r10.w
    lt r10.w, r17.x, r10.w
    movc r9.w, r10.w, l(0), l(1.000000)
  endif 
  if_z r12.z
    if_z cb2[58].y
      ftou r10.w, r11.w
      add r12.zw, r10.yyyz, -cb2[r10.w + 20].xxxy
      mul r12.zw, r12.zzzw, cb2[r10.w + 20].zzzz
      mad r16.xy, r12.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r16.z, r10.w, r11.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t13.xxxx, s13, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.z, r16.xyzx, t31.yzxw, s0, l(0.000000)
      add r10.w, r10.w, r12.z
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.z, r10.w, r10.w
      mul r9.w, r10.w, r12.z
    endif 
    if_nz cb2[58].y
      mov r16.x, -r4.x
      ftou r10.w, r11.w
      add r11.w, r11.w, l(1.000000)
      min r11.w, r11.w, l(2.000000)
      ftou r11.w, r11.w
      add r12.y, -r12.y, l(1.000000)
      mul r12.y, r12.y, l(28.000000)
      ftou r12.y, r12.y
      add r12.zw, r10.yyyz, -cb2[r10.w + 20].xxxy
      mul r12.zw, r12.zzzw, cb2[r10.w + 20].zzzz
      mad r12.zw, r12.zzzw, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r10.yz, r10.yyzy, -cb2[r11.w + 20].xxyx
      mul r10.yz, r10.yyzy, cb2[r11.w + 20].zzzz
      mad r10.yz, r10.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r16.y, r9.x
      mov r16.z, r4.x
      mov r13.w, l(0)
      mov r16.w, l(0)
      loop 
        uge r17.x, r16.w, l(8)
        breakc_nz r17.x
        ult r17.x, r12.y, r16.w
        movc r17.yz, r17.xxxx, r10.yyzy, r12.zzwz
        movc r17.w, r17.x, cb2[r11.w + 20].w, cb2[r10.w + 20].w
        movc r17.x, r17.x, r11.w, r10.w
        dp2 r18.x, icb[r16.w + 0].yxyy, r16.xyxx
        dp2 r18.y, icb[r16.w + 0].yxyy, r16.yzyy
        mad r18.xy, r18.xyxx, r17.wwww, r17.yzyy
        iadd r17.x, r17.x, cb2[26].y
        utof r18.z, r17.x
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.x, r18.xyzx, t13.xxxx, s13, r8.w
        sample_l_indexable(texture2darray)(float,float,float,float) r17.y, r18.xyzx, t31.yxzw, s0, l(0.000000)
        add r17.x, r17.y, r17.x
        add_sat r17.x, r17.x, l(-1.000000)
        mad r13.w, r17.x, l(0.125000), r13.w
        iadd r16.w, r16.w, l(1)
      endloop 
      mul r8.w, r13.w, r13.w
      mul r9.w, r13.w, r8.w
    endif 
  endif 
endif 
lt r8.w, l(0.000000), r6.w
if_nz r8.w
  lt r8.w, l(0.000000), r9.w
  if_nz r8.w
    mul r8.w, r0.z, cb2[18].w
    mul r8.w, r6.w, r8.w
    if_nz cb2[23].x
      mov r7.w, l(1.000000)
      dp4 r10.y, cb2[24].xyzw, r7.xyzw
      dp4 r7.x, cb2[25].xyzw, r7.xyzw
      frc r16.x, r10.y
      frc r16.y, r7.x
      iadd r7.x, l(-1), cb2[23].x
      utof r16.z, r7.x
      sample_l_indexable(texture2darray)(float,float,float,float) r7.xyz, r16.xyzx, t20.xyzw, s2, l(0.000000)
      add r7.xyz, r7.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r7.xyz, cb2[23].yyyy, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r7.xyz, r7.xyzx, cb2[18].xyzx
    else 
      mov r7.xyz, cb2[18].xyzx
    endif 
    ushr r7.w, cb2[53].x, l(16)
    ult r10.y, l(0), r7.w
    and r10.y, r0.x, r10.y
    if_nz r10.y
      iadd r7.w, r7.w, cb2[0].x
      iadd r7.w, r7.w, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r7.w, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r7.w, l(148), t12.xyzw
      mad r10.z, |r5.w|, l(-0.200000), l(0.400000)
      mad r20.xyz, r5.xyzx, r10.zzzz, v7.xyzx
      mov r20.w, l(1.000000)
      dp4 r16.x, r16.xyzw, r20.xyzw
      dp4 r16.y, r17.xyzw, r20.xyzw
      mad r10.zw, r16.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      add r10.zw, r19.zzzw, r10.zzzw
      mul r10.zw, r19.xxxy, r10.zzzw
      div r12.yz, r10.yyyy, r18.xxzx
      add r16.xy, -r12.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r16.xy, r10.zwzz, r16.xyxx
      ge r12.yz, r12.yyzy, r10.zzwz
      or r12.yz, r12.yyzy, r16.xxyx
      or r11.w, r12.z, r12.y
      if_z r11.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r7.w, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.yz, r7.w, l(164), t12.xxyx
        dp4 r7.w, r16.xyzw, r20.xyzw
        mov_sat r10.zw, r10.zzzw
        mad r16.xy, r10.zwzz, r18.xzxx, r18.ywyy
        add r7.w, r12.y, r7.w
        div r7.w, r7.w, r12.z
        max r7.w, r7.w, l(0.00006104)
        and r10.z, r11.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r17.x, -r4.x
          utof r18.z, r10.z
          mov r17.y, r9.x
          mov r17.z, r4.x
          mov r10.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r12.y, r11.w, l(8)
            breakc_nz r12.y
            dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
            dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
            mad r18.xy, r19.xyxx, r10.yyyy, r16.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r18.xyzx, t9.xxxx, s13, r7.w
            mad r10.w, r12.y, l(0.125000), r10.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r16.z, r10.z
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r7.w
        endif 
        mul r7.w, r10.w, r10.w
        mul r7.w, r10.w, r7.w
      else 
        mov r7.w, l(1.000000)
      endif 
      mul r9.w, r7.w, r9.w
    else 
      and r7.w, cb2[53].x, l(0x0000ffff)
      ult r10.y, l(0), r7.w
      not r10.z, r0.x
      and r10.y, r10.z, r10.y
      if_nz r10.y
        iadd r7.w, r7.w, cb2[0].x
        iadd r7.w, r7.w, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.y, r7.w, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r17.xyzw, r7.w, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.xyzw, r7.w, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.xyzw, r7.w, l(148), t12.xyzw
        mad r10.z, |r5.w|, l(-0.200000), l(0.400000)
        mad r20.xyz, r5.xyzx, r10.zzzz, v7.xyzx
        mov r20.w, l(1.000000)
        dp4 r16.x, r16.xyzw, r20.xyzw
        dp4 r16.y, r17.xyzw, r20.xyzw
        mad r10.zw, r16.xxxy, l(0.000000, 0.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
        add r10.zw, r19.zzzw, r10.zzzw
        mul r10.zw, r19.xxxy, r10.zzzw
        div r12.yz, r10.yyyy, r18.xxzx
        add r16.xy, -r12.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r16.xy, r10.zwzz, r16.xyxx
        ge r12.yz, r12.yyzy, r10.zzwz
        or r12.yz, r12.yyzy, r16.xxyx
        or r11.w, r12.z, r12.y
        if_z r11.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.w, r7.w, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.xyzw, r7.w, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.yz, r7.w, l(164), t12.xxyx
          dp4 r7.w, r16.xyzw, r20.xyzw
          mov_sat r10.zw, r10.zzzw
          mad r16.xy, r10.zwzz, r18.xzxx, r18.ywyy
          add r7.w, r12.y, r7.w
          div r7.w, r7.w, r12.z
          max r7.w, r7.w, l(0.00006104)
          and r10.z, r11.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r17.x, -r4.x
            utof r18.z, r10.z
            mov r17.y, r9.x
            mov r17.z, r4.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r12.y, r11.w, l(8)
              breakc_nz r12.y
              dp2 r19.x, icb[r11.w + 0].yxyy, r17.xyxx
              dp2 r19.y, icb[r11.w + 0].yxyy, r17.yzyy
              mad r18.xy, r19.xyxx, r10.yyyy, r16.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.y, r18.xyzx, t9.xxxx, s13, r7.w
              mad r10.w, r12.y, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r16.z, r10.z
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r16.xyzx, t9.xxxx, s13, r7.w
          endif 
          mul r7.w, r10.w, r10.w
          mul r7.w, r10.w, r7.w
        else 
          mov r7.w, l(1.000000)
        endif 
        mul r9.w, r7.w, r9.w
      endif 
    endif 
    mad r7.w, -r2.x, l(0.500000), l(1.000000)
    mad r7.w, -r6.w, r7.w, l(1.000000)
    mul r7.w, r7.w, r7.w
    mad r7.w, -r7.w, l(0.620000), l(0.620000)
    add r7.w, -r6.w, r7.w
    mad r7.w, r1.w, r7.w, r6.w
    mul r7.w, r9.w, r7.w
    lt r5.w, l(0.000000), r5.w
    mad r16.xyz, r7.wwww, r7.xyzx, r14.xyzx
    mad r10.yzw, -v7.xxyz, r0.yyyy, cb2[17].xxyz
    dp3 r0.y, r10.yzwy, r10.yzwy
    rsq r0.y, r0.y
    mul r10.yzw, r0.yyyy, r10.yyzw
    dp3 r0.y, r10.yzwy, r11.xyzx
    dp3 r7.w, r5.xyzx, r10.yzwy
    mad r10.y, |r7.w|, r0.z, -|r7.w|
    mad r7.w, |r7.w|, r10.y, l(1.000000)
    mad r6.w, r6.w, r4.z, r4.w
    mul r7.w, r7.w, r7.w
    mul r6.w, r6.w, r7.w
    rcp r6.w, r6.w
    mul r6.w, r8.w, r6.w
    mul r6.w, r6.w, r9.w
    mul r6.w, r6.w, l(0.250000)
    mad r10.yzw, r6.wwww, r7.xxyz, r2.yyzw
    add_sat r0.y, -r0.y, l(1.000000)
    mul r7.w, r0.y, r0.y
    mul r7.w, r7.w, r7.w
    mul r0.y, r0.y, r7.w
    mul r0.y, r0.y, r6.w
    mad r7.xyz, r0.yyyy, r7.yzxy, r15.xyzx
    mov r16.w, r7.z
    mov r14.w, r15.z
    movc r14.xyzw, r5.wwww, r16.xyzw, r14.xyzw
    mov r7.zw, r10.yyyz
    mov r15.zw, r2.yyyz
    movc r7.xyzw, r5.wwww, r7.xyzw, r15.xyzw
    movc r2.w, r5.w, r10.w, r2.w
    mov r15.z, r14.w
    mov r15.xy, r7.xyxx
    mov r2.yz, r7.zzwz
  endif 
endif 
not r0.y, r0.x
mad r2.x, -r2.x, l(0.500000), l(1.000000)
mov r7.x, -r4.x
mov r16.xy, l(0,0,0,0)
mov r17.w, l(0)
mov r18.xyz, v7.xyzx
mov r18.w, l(1.000000)
mov r19.w, l(1.000000)
mov r7.z, r4.x
mov r20.w, l(1.000000)
mov r21.z, l(1.000000)
mov r22.w, l(1.000000)
mov r7.yw, r9.xxxx
mov r4.y, r7.w
mov r23.w, l(1.000000)
mov r9.y, r7.x
mov r9.z, r4.x
mov r24.w, l(1.000000)
mov r25.x, r9.x
mov r25.y, r7.x
mov r25.z, r4.x
mov r26.x, r9.x
mov r26.y, r7.x
mov r26.z, r4.x
mov r27.x, r9.x
mov r27.y, r7.x
mov r27.z, r4.x
mov r10.yzw, r14.xxyz
mov r28.xyz, r15.zxyz
mov r29.xyz, r2.yzwy
mov r5.w, cb2[58].y
mov r6.w, l(0)
loop 
  uge r8.w, r6.w, cb2[0].x
  breakc_nz r8.w
  ushr r16.z, r6.w, l(5)
  iadd r17.xyz, r8.xyzx, r16.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r17.xyzw, t6.yzwx
  mov r12.yzw, r10.yyzw
  mov r17.xyz, r28.xyzx
  mov r30.xyz, r29.xyzx
  mov r9.w, r5.w
  mov r11.w, r8.w
  loop 
    breakc_z r11.w
    firstbit_lo r13.w, r11.w
    ishl r14.w, l(1), r13.w
    and r15.w, r11.w, r14.w
    if_nz r15.w
      xor r11.w, r11.w, r14.w
      iadd r13.w, r6.w, r13.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r32.xy, r13.w, l(16), t11.xyxx
      add r31.xyz, r31.xyzx, -v7.xyzx
      mov r32.z, r31.w
      lt r31.xyz, |r31.xyzx|, r32.zxyz
      and r14.w, r31.y, r31.x
      and r14.w, r31.z, r14.w
      if_nz r14.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r13.w, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r13.w, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.w, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.w, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.w, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r13.w, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.w, l(96), t12.yzwx
        ubfe r14.w, l(3), l(24), r32.w
        switch r14.w
          case l(4)
          lt r14.w, l(0.000000), r37.x
          mov r38.xy, r36.zwzz
          mov r38.z, r37.w
          mad r39.xyz, -r38.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r31.yzwy
          add r40.xyz, r39.xyzx, -v7.xyzx
          dp3 r15.w, r38.xyzx, r40.xyzx
          div_sat r16.z, -r15.w, r37.x
          mad r41.xyz, r16.zzzz, r38.xyzx, r39.xyzx
          movc r41.xyz, r14.wwww, r41.xyzx, r31.yzwy
          add r41.xyz, r41.xyzx, -v7.xyzx
          dp3 r16.w, r41.xyzx, r41.xyzx
          rsq r21.w, r16.w
          mul r41.xyz, r21.wwww, r41.xyzx
          dp3 r21.w, r5.xyzx, r41.xyzx
          mov_sat r25.w, r21.w
          lt r26.w, l(0.000000), r25.w
          if_nz r26.w
            sqrt r26.w, r16.w
            mul r27.w, r34.x, r34.x
            div r16.w, r27.w, r16.w
            min r16.w, r16.w, l(1.000000)
            mad_sat r41.xy, r26.wwww, r33.xzxx, r33.ywyy
            mul r41.zw, r41.xxxy, r41.xxxy
            mad r41.xy, r41.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r41.xy, r41.xyxx, r41.zwzz
            mul r16.w, r16.w, r41.x
            mul r16.w, r41.y, r16.w
            lt r26.w, l(0.000000), r16.w
            if_nz r26.w
              ubfe r26.w, l(3), l(27), r32.w
              ine r26.w, r26.w, l(1)
              if_nz r26.w
                mad r26.w, |r21.w|, l(-0.200000), l(0.400000)
                mad r41.xyz, r5.xyzx, r26.wwww, v7.xyzx
                add r41.xyz, -r35.xyzx, r41.xyzx
                max r26.w, |r41.z|, |r41.y|
                max r26.w, r26.w, |r41.x|
                div r26.w, r36.x, r26.w
                add r26.w, r36.y, r26.w
                dp3 r27.w, r41.xyzx, r41.xyzx
                rsq r27.w, r27.w
                max r26.w, r26.w, l(0.00006104)
                and r28.w, r32.w, l(0x0000ffff)
                utof r42.w, r28.w
                mov r28.w, l(0)
                mov r29.w, l(0)
                loop 
                  ige r30.w, r29.w, l(8)
                  breakc_nz r30.w
                  dp2 r43.y, icb[r29.w + 0].yxyy, r7.xyxx
                  dp2 r43.z, icb[r29.w + 0].yxyy, r7.yzyy
                  mul r43.yz, r34.yyyy, r43.yyzy
                  mul r43.x, r12.x, r43.y
                  mul r43.w, r10.x, r43.y
                  mad r42.xyz, r41.xyzx, r27.wwww, r43.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r30.w, r42.xyzw, t10.xxxx, s13, r26.w
                  mad r28.w, r30.w, l(0.125000), r28.w
                  iadd r29.w, r29.w, l(1)
                endloop 
              else 
                mov r28.w, l(1.000000)
              endif 
              mul r16.w, r16.w, r28.w
              lt r26.w, l(0.000000), r16.w
              if_nz r26.w
                mul r26.w, r0.z, r32.x
                mul r26.w, r26.w, l(0.250000)
                dp3 r27.w, r38.xyzx, r13.xyzx
                dp3 r29.w, r13.xyzx, r40.xyzx
                mad r30.w, -r27.w, r27.w, r37.x
                mad r15.w, r27.w, r29.w, -r15.w
                div_sat r15.w, r15.w, r30.w
                div r27.w, r30.w, r37.x
                mul r27.w, r27.w, l(10.000000)
                min r27.w, r27.w, l(1.000000)
                add r15.w, -r16.z, r15.w
                mad r15.w, r27.w, r15.w, r16.z
                mad r38.xyz, r15.wwww, r38.xyzx, r39.xyzx
                movc r38.xyz, r14.wwww, r38.xyzx, r31.yzwy
                add r38.xyz, r38.xyzx, -v7.xyzx
                dp3 r14.w, r38.xyzx, r38.xyzx
                rsq r14.w, r14.w
                mul r39.xyz, r14.wwww, r38.xyzx
                ubfe r15.w, l(4), l(16), r32.w
                ult r16.z, l(0), r15.w
                and r16.z, r0.x, r16.z
                if_nz r16.z
                  iadd r15.w, r15.w, cb2[0].x
                  iadd r15.w, r15.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.z, r15.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.w, l(116), t12.xyzw
                  mad r27.w, |r21.w|, l(-0.200000), l(0.400000)
                  mad r19.xyz, r5.xyzx, r27.wwww, v7.xyzx
                  dp4 r27.w, r40.xyzw, r19.xyzw
                  dp4 r29.w, r41.xyzw, r19.xyzw
                  lt r30.w, r29.w, r27.w
                  if_z r30.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r15.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r15.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r15.w, l(164), t12.xyxx
                    dp4 r40.x, r40.xyzw, r19.xyzw
                    dp4 r40.y, r41.xyzw, r19.xyzw
                    div r19.xy, r40.xyxx, r29.wwww
                    mad r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.xy, r43.zwzz, r19.xyxx
                    mul r19.xy, r43.xyxx, r19.xyxx
                    div r40.xy, r16.zzzz, r42.xzxx
                    add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r40.zw, r19.xxxy, r40.zzzw
                    ge r40.xy, r40.xyxx, r19.xyxx
                    or r40.xy, r40.xyxx, r40.zwzz
                    or r19.z, r40.y, r40.x
                    mov_sat r19.xy, r19.xyxx
                    mad r40.xy, r19.xyxx, r42.xzxx, r42.ywyy
                    mul r19.x, r29.w, r44.y
                    mad r19.y, r44.x, r29.w, r27.w
                    div r19.x, r19.y, r19.x
                  else 
                    mov r19.z, l(-1)
                  endif 
                  or r19.y, r30.w, r19.z
                  if_z r19.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(28), t12.xxxx
                    max r19.x, r19.x, l(0.00006104)
                    and r15.w, r15.w, l(0x0000ffff)
                    if_nz r9.w
                      utof r41.z, r15.w
                      mov r19.yz, l(0,0,0,0)
                      loop 
                        ige r27.w, r19.z, l(8)
                        breakc_nz r27.w
                        dp2 r42.x, icb[r19.z + 0].yxyy, r7.xwxx
                        dp2 r42.y, icb[r19.z + 0].xyxx, r4.xyxx
                        mad r41.xy, r42.xyxx, r16.zzzz, r40.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r41.xyzx, t9.xxxx, s13, r19.x
                        mad r19.y, r27.w, l(0.125000), r19.y
                        iadd r19.z, r19.z, l(1)
                      endloop 
                    else 
                      utof r40.z, r15.w
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.y, r40.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r15.w, r19.y, r19.y
                    mul r15.w, r19.y, r15.w
                  else 
                    mov r15.w, l(1.000000)
                  endif 
                  mul r16.w, r15.w, r16.w
                else 
                  ubfe r15.w, l(4), l(20), r32.w
                  ult r16.z, l(0), r15.w
                  and r16.z, r0.y, r16.z
                  if_nz r16.z
                    iadd r15.w, r15.w, cb2[0].x
                    iadd r15.w, r15.w, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.z, r15.w, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.w, l(116), t12.xyzw
                    mad r19.x, |r21.w|, l(-0.200000), l(0.400000)
                    mad r20.xyz, r5.xyzx, r19.xxxx, v7.xyzx
                    dp4 r19.x, r40.xyzw, r20.xyzw
                    dp4 r19.z, r41.xyzw, r20.xyzw
                    lt r27.w, r19.z, r19.x
                    if_z r27.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r15.w, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r15.w, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r15.w, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r15.w, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xy, r15.w, l(164), t12.xyxx
                      dp4 r40.x, r40.xyzw, r20.xyzw
                      dp4 r40.y, r41.xyzw, r20.xyzw
                      div r20.xy, r40.xyxx, r19.zzzz
                      mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r20.xy, r43.zwzz, r20.xyxx
                      mul r20.xy, r43.xyxx, r20.xyxx
                      div r40.xy, r16.zzzz, r42.xzxx
                      add r40.zw, -r40.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r40.zw, r20.xxxy, r40.zzzw
                      ge r40.xy, r40.xyxx, r20.xyxx
                      or r40.xy, r40.xyxx, r40.zwzz
                      or r20.z, r40.y, r40.x
                      mov_sat r20.xy, r20.xyxx
                      mad r40.xy, r20.xyxx, r42.xzxx, r42.ywyy
                      mul r20.x, r19.z, r44.y
                      mad r19.x, r44.x, r19.z, r19.x
                      div r19.x, r19.x, r20.x
                    else 
                      mov r20.z, l(-1)
                    endif 
                    or r19.z, r27.w, r20.z
                    if_z r19.z
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(28), t12.xxxx
                      max r19.x, r19.x, l(0.00006104)
                      and r15.w, r15.w, l(0x0000ffff)
                      if_nz r9.w
                        utof r20.z, r15.w
                        mov r19.z, l(0)
                        mov r27.w, l(0)
                        loop 
                          ige r29.w, r27.w, l(8)
                          breakc_nz r29.w
                          dp2 r41.x, icb[r27.w + 0].xyxx, r9.xyxx
                          dp2 r41.y, icb[r27.w + 0].yxyy, r9.xzxx
                          mad r20.xy, r41.xyxx, r16.zzzz, r40.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r19.x
                          mad r19.z, r20.x, l(0.125000), r19.z
                          iadd r27.w, r27.w, l(1)
                        endloop 
                      else 
                        utof r40.z, r15.w
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r40.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r15.w, r19.z, r19.z
                      mul r15.w, r19.z, r15.w
                    else 
                      mov r15.w, l(1.000000)
                    endif 
                    mul r16.w, r15.w, r16.w
                  endif 
                endif 
                mad r15.w, -r25.w, r2.x, l(1.000000)
                mul r15.w, r15.w, r15.w
                mad r15.w, -r15.w, l(0.620000), l(0.620000)
                add r15.w, -r25.w, r15.w
                mad r15.w, r1.w, r15.w, r25.w
                mul r15.w, r16.w, r15.w
                mov r32.x, r31.x
                lt r16.z, l(0.000000), r21.w
                mad r20.xyz, r15.wwww, r32.xyzx, r12.yzwy
                dp3_sat r15.w, r5.xyzx, r39.xyzx
                mad r38.xyz, r38.xyzx, r14.wwww, r11.xyzx
                dp3 r14.w, r38.xyzx, r38.xyzx
                rsq r14.w, r14.w
                mul r38.xyz, r14.wwww, r38.xyzx
                dp3 r14.w, r38.xyzx, r11.xyzx
                dp3 r19.x, r5.xyzx, r38.xyzx
                mad r21.w, |r19.x|, r0.z, -|r19.x|
                mad r19.x, |r19.x|, r21.w, l(1.000000)
                mad r21.w, r15.w, r4.z, r4.w
                mul r19.x, r19.x, r19.x
                mul r19.x, r21.w, r19.x
                rcp r19.x, r19.x
                mul r15.w, r26.w, r15.w
                mul r15.w, r15.w, r19.x
                mul r15.w, r16.w, r15.w
                mad r38.xyz, r15.wwww, r32.xyzx, r30.xyzx
                add_sat r14.w, -r14.w, l(1.000000)
                mul r16.w, r14.w, r14.w
                mul r16.w, r16.w, r16.w
                mul r14.w, r14.w, r16.w
                mul r14.w, r14.w, r15.w
                mad r39.xyz, r14.wwww, r32.xyzx, r17.xyzx
                movc r12.yzw, r16.zzzz, r20.xxyz, r12.yyzw
                movc r17.xyz, r16.zzzz, r39.xyzx, r17.xyzx
                movc r30.xyz, r16.zzzz, r38.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r20.xy, r34.zwzz
          mov r20.z, r35.w
          add r20.xyz, r20.xyzx, -v7.xyzx
          dp3 r14.w, r20.xyzx, r20.xyzx
          rsq r14.w, r14.w
          mul r38.xyz, r14.wwww, r20.xyzx
          dp3 r15.w, r5.xyzx, r38.xyzx
          mov_sat r16.z, r15.w
          lt r16.w, l(0.000000), r16.z
          if_nz r16.w
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.w, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r13.w, l(128), t12.zxyw
            mov r40.xyz, r38.xyzx
            mov r40.w, r39.y
            dp4 r16.w, r40.xyzw, r18.xyzw
            lt r19.x, r16.w, l(1.000000)
            if_nz r19.x
              mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              mov r19.x, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.w, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.w, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r44.xyzw, r13.w, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.w, r13.w, l(236), t12.xxxx
              add r45.xyz, r31.yzwy, -v7.xyzx
              mul r25.w, r34.x, r34.x
              dp3 r26.w, r45.xyzx, r45.xyzx
              div r25.w, r25.w, r26.w
              min r25.w, r25.w, l(1.000000)
              mad_sat r33.xy, r16.wwww, r33.xzxx, r33.ywyy
              mul r33.zw, r33.xxxy, r33.xxxy
              mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r33.xy, r33.xyxx, r33.zwzz
              mul r25.w, r25.w, r33.x
              mul r25.w, r33.y, r25.w
              mov r35.w, r36.x
              dp4 r33.x, r35.xyzw, r18.xyzw
              mov r45.xyz, r36.yzwy
              mov r45.w, r37.w
              dp4 r33.y, r45.xyzw, r18.xyzw
              div r21.xy, r33.xyxx, r16.wwww
              lt r16.w, r42.w, l(0.00048828)
              if_nz r16.w
                mov r43.y, r44.x
                mad_sat r33.xy, |r21.xyxx|, r43.zwzz, r43.xyxx
                mul r33.zw, r33.xxxy, r33.xxxy
                mad r33.xy, r33.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r33.xy, r33.xyxx, r33.zwzz
                mul r16.w, r33.y, r33.x
              else 
                mov r42.w, r43.y
                mul_sat r33.xyzw, |r21.yyxx|, r42.xyzw
                log r33.xyzw, r33.xyzw
                mul r33.xyzw, r33.xyzw, r43.xxxx
                exp r33.xyzw, r33.xyzw
                add r33.xy, r33.zwzz, r33.xyxx
                log r33.xy, r33.xyxx
                mul r33.xy, r33.xyxx, r44.xxxx
                exp r33.xy, r33.xyxx
                mul r26.w, r33.x, r43.z
                mad r27.w, r43.w, r33.y, l(-1.000000)
                mad r26.w, r43.w, r33.y, -r26.w
                div_sat r26.w, r27.w, r26.w
                mul r27.w, r26.w, r26.w
                mad r26.w, r26.w, l(-2.000000), l(3.000000)
                mul r16.w, r26.w, r27.w
              endif 
              mul r19.x, r16.w, r25.w
              and r16.w, r21.w, l(255)
              if_nz r16.w
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyz, r13.w, l(220), t12.xyzx
                dp3 r21.w, r44.yzwy, r21.xyzx
                dp3 r21.x, r33.xyzx, r21.xyzx
                frc r33.xy, r21.wxww
                iadd r16.w, r16.w, l(-1)
                utof r33.z, r16.w
                sample_l_indexable(texture2darray)(float,float,float,float) r41.xyz, r33.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r41.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r31.yz, r32.yyzy
            mul r21.xyw, r41.xyxz, r31.xyxz
            lt r16.w, l(0.000000), r19.x
            if_nz r16.w
              ubfe r16.w, l(3), l(27), r32.w
              ine r16.w, r16.w, l(1)
              if_nz r16.w
                mad r16.w, |r15.w|, l(-0.200000), l(0.400000)
                mad r22.xyz, r5.xyzx, r16.wwww, v7.xyzx
                mov r38.xyz, r37.xyzx
                dp4 r16.w, r38.xyzw, r22.xyzw
                dp4 r25.w, r40.xyzw, r22.xyzw
                ge r26.w, r25.w, r16.w
                if_nz r26.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.y, r13.w, l(144), t12.xxxx
                  mov r35.w, r36.x
                  dp4 r31.x, r35.xyzw, r22.xyzw
                  mov r37.xyz, r36.yzwy
                  dp4 r31.y, r37.xyzw, r22.xyzw
                  div r22.xy, r31.xyxx, r25.wwww
                  mad_sat r22.xy, r22.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r22.xy, r22.xyxx, r39.zwzz, r39.xyxx
                  div r13.w, r16.w, r25.w
                  max r13.w, r13.w, l(0.00006104)
                  and r16.w, r32.w, l(0x0000ffff)
                  if_nz r9.w
                    utof r31.z, r16.w
                    mov r25.w, l(0)
                    mov r26.w, l(0)
                    loop 
                      ige r27.w, r26.w, l(8)
                      breakc_nz r27.w
                      dp2 r33.x, icb[r26.w + 0].xyxx, r25.xyxx
                      dp2 r33.y, icb[r26.w + 0].yxyy, r25.xzxx
                      mad r31.xy, r33.xyxx, r34.yyyy, r22.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r31.xyzx, t9.xxxx, s13, r13.w
                      mad r25.w, r27.w, l(0.125000), r25.w
                      iadd r26.w, r26.w, l(1)
                    endloop 
                  else 
                    utof r22.z, r16.w
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r25.w, r22.xyzx, t9.xxxx, s13, r13.w
                  endif 
                  mul r13.w, r25.w, r25.w
                  mul r13.w, r25.w, r13.w
                else 
                  mov r13.w, l(1.000000)
                endif 
              else 
                mov r13.w, l(1.000000)
              endif 
              mul r13.w, r13.w, r19.x
              lt r16.w, l(0.000000), r13.w
              if_nz r16.w
                mul r16.w, r0.z, r32.x
                mul r16.w, r16.z, r16.w
                ubfe r19.x, l(4), l(16), r32.w
                ult r22.x, l(0), r19.x
                and r22.x, r0.x, r22.x
                if_nz r22.x
                  iadd r19.x, r19.x, cb2[0].x
                  iadd r19.x, r19.x, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r19.x, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.x, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.x, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.x, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.x, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.x, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r19.x, l(148), t12.xyzw
                  mad r22.y, |r15.w|, l(-0.200000), l(0.400000)
                  mad r23.xyz, r5.xyzx, r22.yyyy, v7.xyzx
                  dp4 r31.x, r31.xyzw, r23.xyzw
                  dp4 r31.y, r33.xyzw, r23.xyzw
                  dp4 r22.y, r34.xyzw, r23.xyzw
                  dp4 r22.z, r35.xyzw, r23.xyzw
                  lt r23.x, r22.z, r22.y
                  div r23.yz, r31.xxyx, r22.zzzz
                  mad r23.yz, r23.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r23.yz, r37.zzwz, r23.yyzy
                  mul r23.yz, r37.xxyx, r23.yyzy
                  div r31.xy, r22.xxxx, r36.xzxx
                  add r31.zw, -r31.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r31.zw, r23.yyyz, r31.zzzw
                  ge r31.xy, r31.xyxx, r23.yzyy
                  or r31.xy, r31.xyxx, r31.zwzz
                  or r26.w, r31.y, r31.x
                  or r23.x, r23.x, r26.w
                  if_z r23.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r23.x, r19.x, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xy, r19.x, l(164), t12.xyxx
                    mov_sat r23.yz, r23.yyzy
                    mad r32.xy, r23.yzyy, r36.xzxx, r36.ywyy
                    mul r19.x, r22.z, r31.y
                    mad r22.y, r31.x, r22.z, r22.y
                    div r19.x, r22.y, r19.x
                    max r19.x, r19.x, l(0.00006104)
                    and r22.y, r23.x, l(0x0000ffff)
                    if_nz r9.w
                      utof r23.z, r22.y
                      mov r22.z, l(0)
                      mov r26.w, l(0)
                      loop 
                        ige r27.w, r26.w, l(8)
                        breakc_nz r27.w
                        dp2 r31.x, icb[r26.w + 0].xyxx, r26.xyxx
                        dp2 r31.y, icb[r26.w + 0].yxyy, r26.xzxx
                        mad r23.xy, r31.xyxx, r22.xxxx, r32.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r19.x
                        mad r22.z, r23.x, l(0.125000), r22.z
                        iadd r26.w, r26.w, l(1)
                      endloop 
                    else 
                      utof r32.z, r22.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.z, r32.xyzx, t9.xxxx, s13, r19.x
                    endif 
                    mul r19.x, r22.z, r22.z
                    mul r19.x, r22.z, r19.x
                  else 
                    mov r19.x, l(1.000000)
                  endif 
                  mul r13.w, r13.w, r19.x
                else 
                  ubfe r19.x, l(4), l(20), r32.w
                  ult r22.x, l(0), r19.x
                  and r22.x, r0.y, r22.x
                  if_nz r22.x
                    iadd r19.x, r19.x, cb2[0].x
                    iadd r19.x, r19.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.x, r19.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r19.x, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r19.x, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r19.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r19.x, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r19.x, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r36.xyzw, r19.x, l(148), t12.xyzw
                    mad r22.y, |r15.w|, l(-0.200000), l(0.400000)
                    mad r24.xyz, r5.xyzx, r22.yyyy, v7.xyzx
                    dp4 r23.x, r31.xyzw, r24.xyzw
                    dp4 r23.y, r32.xyzw, r24.xyzw
                    dp4 r22.y, r33.xyzw, r24.xyzw
                    dp4 r23.z, r34.xyzw, r24.xyzw
                    lt r24.x, r23.z, r22.y
                    div r23.xy, r23.xyxx, r23.zzzz
                    mad r23.xy, r23.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r23.xy, r36.zwzz, r23.xyxx
                    mul r23.xy, r36.xyxx, r23.xyxx
                    div r24.yz, r22.xxxx, r35.xxzx
                    add r31.xy, -r24.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r31.xy, r23.xyxx, r31.xyxx
                    ge r24.yz, r24.yyzy, r23.xxyx
                    or r24.yz, r24.yyzy, r31.xxyx
                    or r24.y, r24.z, r24.y
                    or r24.x, r24.x, r24.y
                    if_z r24.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.x, r19.x, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r24.yz, r19.x, l(164), t12.xxyx
                      mov_sat r23.xy, r23.xyxx
                      mad r31.xy, r23.xyxx, r35.xzxx, r35.ywyy
                      mul r19.x, r23.z, r24.z
                      mad r22.y, r24.y, r23.z, r22.y
                      div r19.x, r22.y, r19.x
                      max r19.x, r19.x, l(0.00006104)
                      and r22.y, r24.x, l(0x0000ffff)
                      if_nz r9.w
                        utof r23.z, r22.y
                        mov r24.xy, l(0,0,0,0)
                        loop 
                          ige r24.z, r24.y, l(8)
                          breakc_nz r24.z
                          dp2 r32.x, icb[r24.y + 0].xyxx, r27.xyxx
                          dp2 r32.y, icb[r24.y + 0].yxyy, r27.xzxx
                          mad r23.xy, r32.xyxx, r22.xxxx, r31.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r23.x, r23.xyzx, t9.xxxx, s13, r19.x
                          mad r24.x, r23.x, l(0.125000), r24.x
                          iadd r24.y, r24.y, l(1)
                        endloop 
                      else 
                        utof r31.z, r22.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.x, r31.xyzx, t9.xxxx, s13, r19.x
                      endif 
                      mul r19.x, r24.x, r24.x
                      mul r19.x, r24.x, r19.x
                    else 
                      mov r19.x, l(1.000000)
                    endif 
                    mul r13.w, r13.w, r19.x
                  endif 
                endif 
                mad r19.x, -r16.z, r2.x, l(1.000000)
                mul r19.x, r19.x, r19.x
                mad r19.x, -r19.x, l(0.620000), l(0.620000)
                add r19.x, -r16.z, r19.x
                mad r19.x, r1.w, r19.x, r16.z
                mul r19.x, r13.w, r19.x
                lt r15.w, l(0.000000), r15.w
                mad r23.xyz, r19.xxxx, r21.xywx, r12.yzwy
                mad r20.xyz, r20.xyzx, r14.wwww, r11.xyzx
                dp3 r14.w, r20.xyzx, r20.xyzx
                rsq r14.w, r14.w
                mul r20.xyz, r14.wwww, r20.xyzx
                dp3 r14.w, r20.xyzx, r11.xyzx
                dp3 r19.x, r5.xyzx, r20.xyzx
                mad r20.x, |r19.x|, r0.z, -|r19.x|
                mad r19.x, |r19.x|, r20.x, l(1.000000)
                mad r16.z, r16.z, r4.z, r4.w
                mul r19.x, r19.x, r19.x
                mul r16.z, r16.z, r19.x
                rcp r16.z, r16.z
                mul r16.z, r16.w, r16.z
                mul r13.w, r13.w, r16.z
                mul r13.w, r13.w, l(0.250000)
                mad r20.xyz, r13.wwww, r21.xywx, r30.xyzx
                add_sat r14.w, -r14.w, l(1.000000)
                mul r16.z, r14.w, r14.w
                mul r16.z, r16.z, r16.z
                mul r14.w, r14.w, r16.z
                mul r13.w, r13.w, r14.w
                mad r21.xyw, r13.wwww, r21.xyxw, r17.xyxz
                movc r12.yzw, r15.wwww, r23.xxyz, r12.yyzw
                movc r17.xyz, r15.wwww, r21.xywx, r17.xyzx
                movc r30.xyz, r15.wwww, r20.xyzx, r30.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r10.yzw, r12.yyzw
  mov r28.xyz, r17.xyzx
  mov r29.xyz, r30.xyzx
  iadd r6.w, r6.w, l(32)
endloop 
add r0.xyz, -r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xyzx, r28.xyzx
mad r0.xyz, r29.xyzx, r6.xyzx, r0.xyzx
mad r0.xyz, r10.yzwy, r1.xyzx, r0.xyzx
dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r1.x, r1.x, l(0.000100)
max r1.w, r1.x, cb1[85].x
mul r1.xyz, r1.wwww, r3.xyzx
mov r3.w, l(1.000000)
movc r1.xyzw, cb0[19].wwww, r1.xyzw, r3.xyzw
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.w, r1.w, cb0[18].x
max r1.w, r1.w, l(1.000000)
div r1.xyz, r1.xyzx, r1.wwww
dp3_sat r1.x, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r1.w, r0.w, r1.x
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, v7.xyzx, v7.xyzx
  rsq r2.x, r0.w
  mul r2.xyz, r2.xxxx, v7.xyzx
  sqrt r0.w, r0.w
  lt r2.w, l(0.000000), cb2[13].w
  if_nz r2.w
    mad r3.xy, r0.wwww, cb2[15].xyxx, cb2[14].zwzz
    mul r3.xy, r3.xyxx, cb2[16].xyxx
    lt r2.w, l(0.010000), |v7.z|
    mul r3.zw, v7.zzzz, cb2[15].zzzw
    mul r4.xy, r3.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r4.xy, r4.xyxx
    add r4.xy, -r4.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r3.zw, r4.xxxy, r3.zzzw
    mul r3.zw, r3.zzzw, r3.xxxy
    movc r3.xy, r2.wwww, r3.zwzz, r3.xyxx
    mul r3.xzw, r3.xxxx, cb2[12].xxyz
    exp r3.xzw, r3.xxzw
    mul r4.xyz, r3.yyyy, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xzwx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xzwx
  else 
    mad r2.w, r0.w, cb2[15].x, cb2[14].z
    mul r2.w, r2.w, cb2[16].x
    lt r3.w, l(0.010000), |v7.z|
    mul r4.x, v7.z, cb2[15].z
    mul r4.y, r4.x, l(-1.442695)
    exp r4.y, r4.y
    add r4.y, -r4.y, l(1.000000)
    div r4.x, r4.y, r4.x
    mul r4.x, r2.w, r4.x
    movc r2.w, r3.w, r4.x, r2.w
    mul r4.xyz, r2.wwww, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r2.x, cb2[7].yzwy, -r2.xyzx
  mad r2.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.z, cb2[8].w, -r2.x, l(1.000000)
  mul r2.z, r2.z, r2.z
  mul r2.z, r2.z, l(12.566371)
  div r2.y, r2.y, r2.z
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r2.y
  mov_sat r2.x, r2.x
  mad r2.x, r2.x, r2.x, l(1.000000)
  mad r2.x, r2.x, l(0.05968310), l(-1.000000)
  mad r2.x, cb2[8].z, r2.x, l(1.000000)
  mul r2.yzw, r0.wwww, cb2[11].xxyz
  mad r2.xyz, r2.xxxx, cb2[10].xyzx, r2.yzwy
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, v7.z, cb2[6].x
  mad r2.w, cb2[6].x, v7.z, cb2[5].x
  lt r3.x, |r0.w|, l(0.000100)
  min r3.y, r2.w, l(64.000000)
  mul r3.y, r3.y, l(1.442695)
  exp r3.y, r3.y
  mov_sat r3.z, cb2[6].z
  lt r3.w, r2.w, l(0.000000)
  add r2.w, r2.w, l(1.000000)
  movc r2.w, r3.w, r3.y, r2.w
  add r2.w, r2.w, -cb2[6].z
  movc r0.w, r3.x, l(1.000000), r0.w
  div r0.w, r2.w, r0.w
  movc r0.w, r3.x, r3.z, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r2.w, v7.xyzx, v7.xyzx
  sqrt r3.x, r2.w
  mad r0.w, r0.w, r3.x, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r2.w, r2.w
  mul r3.xyz, r2.wwww, v7.xyzx
  dp3 r2.w, cb2[7].yzwy, r3.xyzx
  mad_sat r2.w, cb2[8].y, r2.w, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r2.wwww, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyz, r2.xyzx, cb1[85].yyyy
ge r2.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r2.xyzx
min r0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
max r2.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.wwww, r2.xyzx
and r0.w, r1.w, l(0x7f800000)
ieq r0.w, r0.w, l(0x7f800000)
eq r3.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xy, r3.zwzz, r3.xyxx
and r2.w, r3.y, r3.x
or r0.w, r0.w, r2.w
if_z r0.w
  ftou r3.xy, v0.xyxx
  bfi r0.w, l(1), l(16), cb0[17].w, l(0)
  iadd r0.w, r0.w, l(1)
  imm_atomic_iadd r4.x, u6, r3.xyxx, r0.w
  and r3.zw, r4.xxxx, l(0, 0, 0x0000ffff, 0x0000ffff)
  ult r0.w, r3.w, cb2[58].z
  if_nz r0.w
    max r0.w, r1.z, r1.y
    max r0.w, r0.w, r1.x
    mov r0.w, |r0.w|
    and r0.w, r0.w, l(0x7f800000)
    iadd r0.w, r0.w, l(0x00800000)
    mad r2.xyz, r2.xyzx, r1.wwww, r0.wwww
    ubfe r2.x, l(8), l(15), r2.x
    ushr r2.yz, r2.yyzy, l(0, 15, 15, 0)
    bfi r2.yz, l(0, 8, 8, 0), l(0, 8, 16, 0), r2.yyzy, l(0, 0, 0, 0)
    iadd r2.x, r2.y, r2.x
    iadd r2.x, r2.z, r2.x
    ishl r0.w, r0.w, l(1)
    iadd r2.xzw, r0.wwww, r2.xxxx
    mov_sat r0.w, r1.w
    mul r0.w, r0.w, l(2046.000000)
    ftou r0.w, r0.w
    ishl r4.x, v0.z, l(2)
    and r0.w, r0.w, l(2046)
    bfi r0.w, l(11), l(0), r0.w, r4.x
    bfi r2.y, l(1), l(0), cb0[17].w, r0.w
    store_uav_typed u7.xyzw, r3.xyzw, r2.xyzw
    mov r0.w, l(-1)
  else 
    mov r0.w, l(0)
  endif 
else 
  mov r0.w, l(-1)
endif 
mul r1.xyz, r1.wwww, r0.xyzx
movc o0.xyzw, r0.wwww, l(0,0,0,0), r1.xyzw
ret 
// Approximately 2363 instruction slots used
