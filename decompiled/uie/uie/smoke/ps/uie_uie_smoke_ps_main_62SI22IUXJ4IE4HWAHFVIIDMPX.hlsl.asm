//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:43:44 2021
//
//
// Buffer Definitions: 
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16 [unused]
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16 [unused]
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[1], immediateIndexed
dcl_constantbuffer CB1[70], immediateIndexed
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 13
lt r0.x, l(0.000000), cb3[0].x
if_nz r0.x
  sincos r0.x, r1.x, cb1[69].w
  mul r0.w, r0.x, r1.x
  mad r2.w, -r1.x, l(0.100000), l(0.900000)
  mad r3.y, -r0.x, l(0.100000), l(0.900000)
  mad r1.yz, -r0.xxxx, l(0.000000, 0.050000, 0.020000, 0.000000), l(0.000000, 0.800000, 0.300000, 0.000000)
  mad r4.xyzw, r1.xxxx, l(0.020000, 0.050000, 0.050000, 0.200000), l(0.950000, 0.200000, 0.230000, 0.250000)
  mul r5.xyz, r0.wwww, l(0.250000, 0.090000, 0.150000, 0.000000)
  mov r6.xy, r5.zxzz
  mov r6.z, r4.w
  add r7.x, -r6.x, l(0.600000)
  mad r7.y, r0.x, l(0.120000), l(0.100000)
  mad r8.y, r0.w, l(0.070000), l(0.600000)
  mad r9.x, -r1.x, l(0.030000), l(0.400000)
  mad r9.yw, r0.xxxx, l(0.000000, 0.050000, 0.000000, 0.100000), l(0.000000, 0.500000, 0.000000, 0.900000)
  add r9.xyzw, -r9.yyxw, v2.xyxy
  dp2 r0.w, r9.xyxx, r9.xyxx
  mul r0.yzw, r0.xxxw, l(0.000000, 0.100000, 0.020000, 2.500000)
  min r0.w, r0.w, l(1.000000)
  mad r1.x, r0.w, l(-2.000000), l(3.000000)
  mul r0.w, r0.w, r0.w
  mad r0.w, -r1.x, r0.w, l(1.000000)
  mad r10.xyzw, r0.wwww, l(0.000000, 0.000000, 0.000000, 0.71999997), l(0.100000, 0.100000, 0.100000, 0.100000)
  mad r5.xzw, r0.yyzy, l(-1.000000, 0.000000, -1.000000, 1.000000), l(0.100000, 0.000000, 0.800000, 0.100000)
  add r11.xyzw, -r5.xyzw, v2.xyxy
  dp2 r0.y, r11.xyxx, r11.xyxx
  add r0.y, r0.y, l(-0.030000)
  mul_sat r0.y, r0.y, l(3.70370364)
  mad r0.z, r0.y, l(-2.000000), l(3.000000)
  mul r0.y, r0.y, r0.y
  mad r12.xyz, -r0.zzzz, r0.yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r0.y, -r10.w, l(1.000000)
  mul r12.w, r12.z, r0.y
  mad r10.xyzw, r12.xyzw, l(0.000000, 0.000000, 0.000000, 0.850000), r10.xyzw
  dp2 r0.y, r11.zwzz, r11.zwzz
  add r0.y, r0.y, l(-0.030000)
  mul_sat r0.y, r0.y, l(2.12765956)
  mad r0.z, r0.y, l(-2.000000), l(3.000000)
  mul r0.y, r0.y, r0.y
  mad r11.xyz, -r0.zzzz, r0.yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r0.y, -r10.w, l(1.000000)
  mul r11.w, r11.z, r0.y
  mad r10.xyzw, r11.xyzw, l(0.09000000, 0.09000000, 0.09000000, 0.850000), r10.xyzw
  mad r2.xyz, -r0.xxxx, l(0.100000, 0.040000, 0.020000, 0.000000), l(0.140000, 1.000000, 0.800000, 0.000000)
  add r0.xyzw, -r2.xyzw, v2.xyxy
  dp2 r0.x, r0.xyxx, r0.xyxx
  add r0.x, r0.x, l(-0.020000)
  mul_sat r0.x, r0.x, l(2.631579)
  mad r0.y, r0.x, l(-2.000000), l(3.000000)
  mul r0.x, r0.x, r0.x
  mad r0.x, -r0.y, r0.x, l(1.000000)
  add r2.xyzw, -r10.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r2.xyzw, r0.xxxx, r2.xyzw
  mad r2.xyzw, r2.xyzw, l(0.050000, 0.050000, 0.050000, 0.850000), r10.xyzw
  dp2 r0.x, r0.zwzz, r0.zwzz
  add r0.x, r0.x, l(-0.030000)
  mul_sat r0.x, r0.x, l(2.12765956)
  mad r0.y, r0.x, l(-2.000000), l(3.000000)
  mul r0.x, r0.x, r0.x
  mad r0.x, -r0.y, r0.x, l(1.000000)
  add r10.xyzw, -r2.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r0.xyzw, r0.xxxx, r10.xyzw
  mad r0.xyzw, r0.xyzw, l(0.100000, 0.100000, 0.100000, 0.900000), r2.xyzw
  mov r3.xzw, r4.xxyz
  add r2.xyzw, -r3.xyzw, v2.xyxy
  dp2 r1.x, r2.xyxx, r2.xyxx
  add r1.x, r1.x, l(-0.030000)
  mul_sat r1.x, r1.x, l(2.12765956)
  mad r1.w, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.w, r1.x, l(1.000000)
  add r3.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r3.xyzw, r1.xxxx, r3.xyzw
  mad r0.xyzw, r3.xyzw, l(0.300000, 0.300000, 0.300000, 0.600000), r0.xyzw
  add r1.xy, -r1.yzyy, v2.xyxx
  dp2 r1.x, r1.xyxx, r1.xyxx
  add r1.x, r1.x, l(-0.020000)
  mul_sat r1.x, r1.x, l(2.631579)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r3.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r1.xyzw, r1.xxxx, r3.xyzw
  mad r0.xyzw, r1.xyzw, l(0.300000, 0.300000, 0.300000, 0.650000), r0.xyzw
  dp2 r1.x, r2.zwzz, r2.zwzz
  add r1.x, r1.x, l(-0.100000)
  add_sat r1.x, r1.x, r1.x
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r2.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r1.xyzw, r1.xxxx, r2.xyzw
  mad r0.xyzw, r1.xyzw, l(0.200000, 0.200000, 0.200000, 0.350000), r0.xyzw
  add r1.xy, -r6.yzyy, v2.xyxx
  dp2 r1.x, r1.xyxx, r1.xyxx
  add r1.x, r1.x, l(-0.100000)
  mul_sat r1.x, r1.x, l(3.33333325)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r2.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r1.xyzw, r1.xxxx, r2.xyzw
  mad r0.xyzw, r1.xyzw, l(0.300000, 0.300000, 0.300000, 0.500000), r0.xyzw
  add r1.xy, -r7.xyxx, v2.xyxx
  dp2 r1.x, r1.xyxx, r1.xyxx
  add r1.x, r1.x, l(-0.050000)
  mul_sat r1.x, r1.x, l(4.000000)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r2.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r1.xyzw, r1.xxxx, r2.xyzw
  mad r0.xyzw, r1.xyzw, l(0.200000, 0.200000, 0.200000, 0.400000), r0.xyzw
  mov r8.x, r5.x
  add r1.xy, -r8.xyxx, v2.xyxx
  dp2 r1.x, r1.xyxx, r1.xyxx
  add r1.x, r1.x, l(-0.050000)
  mul_sat r1.x, r1.x, l(2.22222233)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r2.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r1.xyzw, r1.xxxx, r2.xyzw
  mad r0.xyzw, r1.xyzw, l(0.200000, 0.200000, 0.200000, 0.800000), r0.xyzw
  dp2 r1.x, r9.zwzz, r9.zwzz
  mul r1.x, r1.x, l(2.500000)
  min r1.x, r1.x, l(1.000000)
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mad r1.x, -r1.y, r1.x, l(1.000000)
  add r2.xyzw, -r0.zzzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  mul r1.xyzw, r1.xxxx, r2.xyzw
  mad r0.xyzw, r1.xyzw, l(0.400000, 0.400000, 0.400000, 0.500000), r0.xyzw
  mul r0.xyzw, r0.xyzw, v1.xyzw
  mul o0.w, r0.w, cb3[0].x
  mov o0.xyz, r0.xyzx
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
ret 
// Approximately 141 instruction slots used
