//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:43:45 2021
//
//
// Buffer Definitions: 
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16
//   float4 scriptVector2;              // Offset:   32 Size:    16
//   float4 scriptVector3;              // Offset:   48 Size:    16
//   float4 scriptVector4;              // Offset:   64 Size:    16
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16 [unused]
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// tileMipBilinearSampler            sampler      NA          NA             s1      1 
// colorMapSampler                   texture  float4          2d             t0      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB3[5], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
lt r0.x, cb3[1].x, cb3[1].y
add r0.y, -cb3[1].x, cb3[1].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
add r0.zw, v2.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
mad r1.x, |r0.z|, l(2.000000), -cb3[1].x
mul_sat r0.y, r0.y, r1.x
mad r1.x, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mad r0.y, -r1.x, r0.y, l(1.000000)
add r1.xy, |r0.zwzz|, |r0.zwzz|
ge r1.x, r1.x, cb3[1].y
ge r1.y, r1.y, cb3[3].y
movc r1.xy, r1.xyxx, l(0,0,0,0), l(1.000000,1.000000,0,0)
movc r0.x, r0.x, r0.y, r1.x
add r0.y, -cb3[3].x, cb3[3].y
div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
mad r1.x, |r0.w|, l(2.000000), -cb3[3].x
mul_sat r0.y, r0.y, r1.x
mad r1.x, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mad r0.y, -r1.x, r0.y, l(1.000000)
lt r1.x, cb3[3].x, cb3[3].y
movc r0.y, r1.x, r0.y, r1.y
min r0.x, r0.y, r0.x
mad r1.x, r0.z, cb3[4].x, cb3[0].x
mad r1.y, r0.w, cb3[4].y, cb3[2].x
add r0.yz, r1.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.yzyy, t0.xyzw, s1
mul r1.xyzw, r1.xyzw, v1.xyzw
mul o0.w, r0.x, r1.w
mov o0.xyz, r1.xyzx
ret 
// Approximately 32 instruction slots used
