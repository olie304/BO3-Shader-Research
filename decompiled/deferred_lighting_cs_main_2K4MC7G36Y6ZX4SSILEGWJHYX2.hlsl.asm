//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:22:54 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// cbuffer LightingPackCBuffer
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } lightConstantsCB[273];           // Offset:    0 Size: 65520
//
// }
//
// cbuffer RefProbePackCBuffer
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } refProbeConstantsCB[273];        // Offset:    0 Size: 61152
//
// }
//
// cbuffer RefProbeBlendPackCBuffer
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } refProbeAttenuationConstantsCB[682];// Offset:    0 Size: 65472
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
// Resource bind info for gPermutedTilingBuffer
// {
//
//   struct PermutedTilingBuffer
//   {
//       
//       uint2 data;                    // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:     8
//
// }
//
// Resource bind info for gDeferredCullBits
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// GBufferDiffuseColor               texture  float4          2d             t0      1 
// GBufferNormalAndGloss             texture  float4          2d             t1      1 
// GBufferSpecularColorAndOcclusion    texture  float4          2d             t2      1 
// GBufferDepth                      texture   float          2d             t4      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gPermutedTilingBuffer             texture  struct         r/o            t25      1 
// gDeferredCullBits                 texture  struct         r/o            t26      1 
// gSSAOTexture                      texture   float          2d            t27      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// litBuffer                             UAV  float3          2d             u0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
// LightingPackCBuffer               cbuffer      NA          NA            cb9      1 
// RefProbePackCBuffer               cbuffer      NA          NA           cb10      1 
// RefProbeBlendPackCBuffer          cbuffer      NA          NA           cb11      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_constantbuffer CB9[4095], dynamicIndexed
dcl_constantbuffer CB10[3822], dynamicIndexed
dcl_constantbuffer CB11[4092], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_structured t23, 4
dcl_resource_structured t25, 8
dcl_resource_structured t26, 4
dcl_resource_texture2d (float,float,float,float) t27
dcl_resource_texture2darray (float,float,float,float) t31
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadGroupID.x
dcl_input vThreadIDInGroup.xy
dcl_temps 34
dcl_thread_group 8, 8, 1
iadd r0.x, vThreadGroupID.x, cb2[57].x
ld_structured_indexable(structured_buffer, stride=8)(mixed,mixed,mixed,mixed) r0.xy, r0.x, l(0), t25.xyxx
and r0.xy, r0.xyxx, l(4095, 4095, 0, 0)
imad r1.xy, r0.xyxx, l(8, 8, 0, 0), vThreadIDInGroup.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyww, t1.xyzw
ftou r0.zw, cb1[44].xxxy
ult r0.zw, r1.xxxy, r0.zzzw
and r0.z, r0.w, r0.z
lt r0.w, l(0.000000), r2.z
and r0.z, r0.w, r0.z
if_z r0.z
  ret 
endif 
ge r0.w, r2.z, l(0.500000)
ld_indexable(texture2d)(float,float,float,float) r3.x, r1.xyww, t4.xyzw
ld_indexable(texture2d)(float,float,float,float) r3.yzw, r1.xyww, t0.wxyz
ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xyww, t2.xyzw
ld_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r5.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r6.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r7.xyz, r1.xyww, t2.xywz
ld_aoffimmi_indexable(0,1,0)(texture2d)(float,float,float,float) r8.xyz, r1.xyzw, t2.xywz
utof r1.zw, r1.xxxy
add r9.xy, r1.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
ge r10.x, r3.x, l(0.984375)
mul r5.w, r3.x, l(1.01587307)
mad r3.x, r3.x, l(64.000000), l(-63.000000)
movc r3.x, r10.x, r3.x, r5.w
max r3.x, r3.x, l(0.00000001)
rcp r10.y, r3.x
and r9.zw, r0.zzzz, r10.xxxy
add r10.xy, r9.xyxx, -cb1[71].xyxx
mul r10.xy, r10.xyxx, cb1[44].zwzz
mad r10.xy, r10.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mul r11.x, r10.x, cb1[12].x
mul r11.y, r10.y, cb1[13].y
mov r11.z, l(1.000000)
mul r10.xyz, r9.wwww, r11.xyzx
mul r11.xyz, r10.yyyy, cb1[17].xyzx
mad r10.xyw, r10.xxxx, cb1[16].xyxz, r11.xyxz
mad r10.xyz, r10.zzzz, cb1[18].xyzx, r10.xywx
mad r0.z, r2.w, l(3.000000), l(0.500000)
ftou r0.z, r0.z
mad r2.xy, r2.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.850000, 0.850000, 0.000000, 0.000000)
dp2 r2.w, r2.xyxx, r2.xyxx
add r11.zw, -r2.wwww, l(0.000000, 0.000000, 2.000000, 1.000000)
sqrt r2.w, r11.z
mul r11.xy, r2.wwww, r2.xyxx
and r12.xyzw, r0.zzzz, l(2, 1, 2, 1)
movc r12.xyzw, r12.zwxy, l(-1.000000,-1.000000,1,1), l(1.000000,1.000000,0,0)
xor r0.z, r12.w, r12.z
movc r12.z, r0.z, l(-1.000000), l(1.000000)
mul r2.xyw, r12.xyxz, l(-1.000000, 0.000000, 0.000000, 1.000000)
mul r13.xyz, r12.xyzx, l(1.000000, -2.000000, 1.000000, 0.000000)
mul r11.xyz, r11.xywx, l(0.40824831, 0.70710677, 0.57735026, 0.000000)
mul r2.xyw, r2.xyxw, r11.yyyy
mad r2.xyw, r13.xyxz, r11.xxxx, r2.xyxw
mad r11.xyz, r12.xyzx, r11.zzzz, r2.xywx
movc r0.z, r0.w, l(-0.500000), l(-0.00146628)
add r0.z, r0.z, r2.z
mul_sat r2.y, r0.z, l(2.00982332)
dp3 r0.z, -r10.xyzx, -r10.xyzx
rsq r0.z, r0.z
mul r12.xyz, r0.zzzz, -r10.xyzx
dp2 r1.z, r1.zwzz, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r1.z, r1.z
mul r1.z, r1.z, l(52.982918)
frc r1.z, r1.z
mad r1.z, r1.z, l(6.28318548), cb1[70].w
sincos r3.x, r13.x, r1.z
dp3_sat r2.x, r11.xyzx, r12.xyzx
dp3 r1.z, -r12.xyzx, r11.xyzx
add r1.z, r1.z, r1.z
mad r14.xyz, r11.xyzx, -r1.zzzz, -r12.xyzx
mul r1.z, r2.y, l(17.000000)
exp r1.z, r1.z
add r1.z, r1.z, l(2.000000)
div r1.z, l(2.000000), r1.z
sqrt r1.w, r1.z
mul r2.zw, r9.xxxy, cb1[44].zzzw
sample_l_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t27.yzxw, s4, l(0.000000)
mul r2.w, r2.z, r4.z
dp3 r5.w, r11.xyzx, cb2[17].xyzx
mov_sat r6.w, r5.w
movc r7.w, r0.w, |r5.w|, r6.w
ge r8.w, l(0.000000), r7.w
if_nz r8.w
  mov r9.x, l(0)
endif 
if_z r8.w
  mul r13.yzw, r10.yyyy, cb2[29].xxyz
  mad r13.yzw, r10.xxxx, cb2[28].xxyz, r13.yyzw
  mad r13.yzw, r10.zzzz, cb2[30].xxyz, r13.yyzw
  add r13.yzw, r13.yyzw, cb2[31].xxyz
  add r8.w, r13.w, -cb2[17].w
  mad r8.w, -r8.w, l(0.00006104), l(1.000000)
  mov_sat r9.y, r8.w
  eq r9.y, r8.w, r9.y
  if_nz r9.y
    mov r9.yw, l(0,0,0,0)
    loop 
      ge r10.w, r9.y, l(3.000000)
      breakc_nz r10.w
      ftou r10.w, r9.y
      add r15.xy, r13.yzyy, -cb2[r10.w + 20].xyxx
      max r12.w, |r15.y|, |r15.x|
      mul r9.w, r12.w, cb2[r10.w + 20].z
      lt r10.w, r9.w, l(1.000000)
      if_nz r10.w
        break 
      endif 
      add r9.y, r9.y, l(1.000000)
      mov r9.w, l(0)
    endloop 
  else 
    mov r9.yw, l(0,3.000000,0,0)
  endif 
  ge r10.w, r9.y, l(3.000000)
  if_nz r10.w
    mul r15.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r16.xz, r15.xxxx
    mov r16.y, -r16.z
    mad r15.xyz, r13.yzyy, r16.xyzx, r15.yzyy
    add r16.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r15.xyz, r15.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r15.xyz, r16.xyzx, r15.xyzx
    mul r16.xy, r15.zyzz, cb2[32].xxxx
    round_ni r16.xy, r16.xyxx
    mul r12.w, r16.y, cb2[27].x
    mad r12.w, r12.w, cb2[32].x, r16.x
    ftou r12.w, r12.w
    iadd r12.w, r12.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r12.w, l(0), t23.xxxx
    and r16.x, r15.w, l(0x40000000)
    ishl r16.y, r15.w, l(2)
    if_z r16.x
      and r16.x, r15.w, l(0x01ffffff)
      iadd r17.x, r12.w, r16.x
      ushr r12.w, r15.w, l(25)
      utof r12.w, r12.w
      mul r15.xyz, r12.wwww, r15.xyzx
      frc r15.xyz, r15.xyzx
      mul r15.xyz, r15.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r15.xyz, r15.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.z, r17.x, l(0), t23.xxxx
      ushr r16.xz, r15.zzyz, l(6, 0, 6, 0)
      and r12.w, r17.z, l(0xc0000000)
      iadd r15.w, r17.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t23.xxxx
      movc r15.w, r16.z, r17.z, r15.w
      ushr r16.z, r15.w, l(13)
      movc r15.w, r16.x, r16.z, r15.w
      and r15.w, r15.w, l(8191)
      iadd r18.x, r15.w, r17.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
      mov r17.y, l(0)
      mov r18.y, l(1)
      movc r16.xzw, r12.wwww, r17.xxyz, r18.xxyz
      movc r18.yz, r12.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r19.xy, r15.zyzz, r18.yyyy
      and r19.xy, r19.xyxx, l(1, 1, 0, 0)
      and r15.w, r16.w, l(0xc0000000)
      iadd r17.w, r16.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.w, l(0), t23.xxxx
      movc r17.w, r19.y, r16.w, r17.w
      ushr r18.y, r17.w, l(13)
      movc r17.w, r19.x, r18.y, r17.w
      and r17.w, r17.w, l(8191)
      iadd r18.x, r16.x, r17.w
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.w, r18.x, l(0), t23.xxxx
      movc r16.xzw, r15.wwww, r16.xxzw, r18.xxzw
      movc r16.xzw, r12.wwww, r17.xxyz, r16.xxzw
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        iadd r12.w, -r16.z, l(6)
        ushr r17.xy, r15.zyzz, r12.wwww
        or r12.w, r16.w, l(0x40000000)
        bfi r15.w, l(1), l(1), r17.y, l(0)
        bfi r15.w, l(1), l(0), r17.x, r15.w
        imul null, r15.w, r15.w, l(10)
        ushr r12.w, r12.w, r15.w
        and r12.w, r12.w, l(1023)
        iadd r17.x, r12.w, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.w, r17.x, l(0), t23.xxxx
        iadd r17.yz, r16.zzzz, l(0, 1, 2, 0)
        iadd r12.w, -r17.y, l(6)
        ushr r18.xy, r15.zyzz, r12.wwww
        and r12.w, r17.w, l(0xc0000000)
        or r15.w, r17.w, l(0x40000000)
        bfi r16.z, l(1), l(1), r18.y, l(0)
        bfi r16.z, l(1), l(0), r18.x, r16.z
        imul null, r16.z, r16.z, l(10)
        ushr r15.w, r15.w, r16.z
        and r15.w, r15.w, l(1023)
        iadd r18.x, r15.w, r17.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r18.z, r18.x, l(0), t23.xxxx
        mov r18.y, r17.z
        movc r18.xyz, r12.wwww, r17.xywx, r18.xyzx
        iadd r15.w, -r18.y, l(6)
        ushr r17.yz, r15.zzyz, r15.wwww
        and r15.w, r18.z, l(0xc0000000)
        or r16.z, r18.z, l(0x40000000)
        bfi r17.z, l(1), l(1), r17.z, l(0)
        bfi r17.y, l(1), l(0), r17.y, r17.z
        imul null, r17.y, r17.y, l(10)
        ushr r16.z, r16.z, r17.y
        and r16.z, r16.z, l(1023)
        iadd r19.x, r16.z, r18.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r19.y, r19.x, l(0), t23.xxxx
        movc r17.yz, r15.wwww, r18.xxzx, r19.xxyx
        movc r16.xw, r12.wwww, r17.xxxw, r17.yyyz
      endif 
      and r12.w, r16.w, l(0xc0000000)
      if_z r12.w
        ubfe r15.w, l(14), l(15), r16.w
        utof r15.w, r15.w
        mul r15.w, r15.w, cb2[27].w
        mul r15.w, r15.w, l(0.00006104)
        and r17.xy, r16.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r16.z, r17.x
        mul r16.z, r16.z, cb2[27].w
        mul r16.z, r16.z, l(0.00003052)
        and r17.x, r15.y, l(3)
        iadd r17.x, r16.x, r17.x
        iadd r17.x, r17.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r17.x, r17.x, l(0), t23.xxxx
        bfi r18.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r15.xyzx, l(0, 0, 0, 0)
        ushr r15.x, r17.x, r18.x
        and r15.x, r15.x, l(255)
        utof r15.x, r15.x
        mul r15.x, r16.z, r15.x
        mad r15.x, r15.x, l(0.00392157), r15.w
        iadd r15.y, r18.y, l(1)
        ubfe r15.z, l(1), l(1), r15.z
        iadd r15.y, r15.z, r15.y
        iadd r15.y, r15.y, r16.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        ushr r15.y, r15.y, r18.z
        and r15.y, r15.y, l(0x0000ffff)
        utof r15.y, r15.y
        mul r15.y, r16.z, r15.y
        mad r15.y, r15.y, l(0.00001526), r15.w
        movc r16.y, r17.y, r15.x, r15.y
      else 
        and r15.x, r16.w, l(0x80000000)
        iadd r15.y, r16.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.y, r15.y, l(0), t23.xxxx
        movc r15.x, r15.x, r15.y, l(0)
        ishl r15.y, r16.w, l(2)
        ushr r15.z, r15.x, l(16)
        and r15.x, r15.x, l(0x0000ffff)
        f16tof32 r15.xz, r15.xxzx
        mad r15.y, r13.y, r15.z, r15.y
        mad r15.x, r13.z, r15.x, r15.y
        movc r16.y, r12.w, r15.x, r16.y
      endif 
    endif 
    mad r12.w, -cb2[27].z, l(2.000000), r13.w
    lt r12.w, r16.y, r12.w
    movc r9.x, r12.w, l(0), l(1.000000)
  endif 
  if_z r10.w
    if_z cb2[58].y
      ftou r10.w, r9.y
      add r15.xy, r13.yzyy, -cb2[r10.w + 20].xyxx
      mul r15.xy, r15.xyxx, cb2[r10.w + 20].zzzz
      mad r15.xy, r15.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r10.w, cb2[26].y
      add r15.z, r9.y, r10.w
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r15.xyzx, t13.xxxx, s13, r8.w
      sample_l_indexable(texture2darray)(float,float,float,float) r12.w, r15.xyzx, t31.yzwx, s0, l(0.000000)
      add r10.w, r10.w, r12.w
      add_sat r10.w, r10.w, l(-1.000000)
      mul r12.w, r10.w, r10.w
      mul r9.x, r10.w, r12.w
    endif 
    if_nz cb2[58].y
      mov r15.x, -r3.x
      ftou r10.w, r9.y
      add r9.y, r9.y, l(1.000000)
      min r9.y, r9.y, l(2.000000)
      add r9.w, -r9.w, l(1.000000)
      mul r9.w, r9.w, l(28.000000)
      ftou r9.yw, r9.yyyw
      add r16.xy, r13.yzyy, -cb2[r10.w + 20].xyxx
      mul r16.xy, r16.xyxx, cb2[r10.w + 20].zzzz
      mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r13.yz, r13.yyzy, -cb2[r9.y + 20].xxyx
      mul r13.yz, r13.yyzy, cb2[r9.y + 20].zzzz
      mad r13.yz, r13.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
      mov r15.y, r13.x
      mov r15.z, r3.x
      mov r12.w, l(0)
      mov r13.w, l(0)
      loop 
        uge r15.w, r13.w, l(8)
        breakc_nz r15.w
        ult r15.w, r9.w, r13.w
        movc r16.zw, r15.wwww, r13.yyyz, r16.xxxy
        movc r17.x, r15.w, cb2[r9.y + 20].w, cb2[r10.w + 20].w
        movc r15.w, r15.w, r9.y, r10.w
        dp2 r18.x, icb[r13.w + 0].yxyy, r15.xyxx
        dp2 r18.y, icb[r13.w + 0].yxyy, r15.yzyy
        mad r17.xy, r18.xyxx, r17.xxxx, r16.zwzz
        iadd r15.w, r15.w, cb2[26].y
        utof r17.z, r15.w
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r15.w, r17.xyzx, t13.xxxx, s13, r8.w
        sample_l_indexable(texture2darray)(float,float,float,float) r16.z, r17.xyzx, t31.yzxw, s0, l(0.000000)
        add r15.w, r15.w, r16.z
        add_sat r15.w, r15.w, l(-1.000000)
        mad r12.w, r15.w, l(0.125000), r12.w
        iadd r13.w, r13.w, l(1)
      endloop 
      mul r8.w, r12.w, r12.w
      mul r9.x, r12.w, r8.w
    endif 
  endif 
endif 
add r8.w, -r2.y, l(1.000000)
mul r9.y, r8.w, l(5.000000)
mad r9.w, r8.w, l(5.000000), l(-2.500000)
mul r9.w, r9.w, l(0.400000)
max r9.w, r9.w, l(0.000000)
mul r9.w, r9.w, l(100.000000)
mad r13.yz, -r8.wwww, l(0.000000, 10.000000, 5.000000, 0.000000), l(0.000000, 6.857410, 7.085000, 0.000000)
exp r10.w, r13.y
mul r10.w, r2.x, r10.w
mul r10.w, r10.w, l(9.136810)
mul r12.w, r8.w, r9.y
mad r12.w, -r12.w, l(2.015905), r13.z
exp r12.w, r12.w
mul r12.w, r2.x, r12.w
mul r12.w, r12.w, l(9.708090)
max r10.w, r10.w, r12.w
max r10.w, r10.w, l(1.268160)
iadd r12.w, cb2[0].y, -cb2[58].x
ftou r13.y, cb1[44].x
iadd r13.y, r13.y, l(7)
ushr r13.y, r13.y, l(3)
imad r0.x, r0.y, r13.y, r0.x
bfi r0.x, l(27), l(5), r0.x, l(16)
and r0.y, r12.w, l(-32)
iadd r13.y, -r0.y, r12.w
and r13.z, cb2[0].y, l(-32)
iadd r13.w, -r13.z, cb2[0].y
mov r15.yz, l(0,0,1.000000,0)
mov r16.xy, l(0,0,0,0)
mov r17.x, l(1.000000)
mov r18.xy, l(0,0,0,0)
mov r19.xy, l(0,0,0,0)
mov r20.xyzw, l(0,0,0,0)
mov r21.yzw, l(0,0,0,0)
mov r15.w, r0.y
loop 
  uge r16.w, r15.w, cb2[0].y
  breakc_nz r16.w
  ushr r16.w, r15.w, l(5)
  iadd r16.w, r0.x, r16.w
  ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r16.w, r16.w, l(0), t26.xxxx
  ieq r17.z, r0.y, r15.w
  bfi r17.w, r13.y, l(0), l(0), r16.w
  movc r16.w, r17.z, r17.w, r16.w
  ieq r17.z, r13.z, r15.w
  ubfe r17.w, r13.w, l(0), r16.w
  movc r16.w, r17.z, r17.w, r16.w
  mov r22.xyzw, r20.xyzw
  mov r23.xyz, r21.yzwy
  mov r17.z, r16.w
  loop 
    breakc_z r17.z
    firstbit_lo r17.w, r17.z
    ishl r18.w, l(1), r17.w
    not r18.w, r18.w
    and r17.z, r17.z, r18.w
    iadd r17.w, r15.w, r17.w
    imul null, r17.w, r17.w, l(14)
    add r24.xyz, r10.xyzx, -cb10[r17.w + 0].xyzx
    and r18.w, l(0x0000ffff), cb10[r17.w + 7].z
    ubfe r19.w, l(6), l(25), cb10[r17.w + 7].z
    imul null, r24.w, r18.w, l(6)
    dp3 r25.x, cb11[r24.w + 0].xyzx, r24.xyzx
    add_sat r25.x, r25.x, cb11[r24.w + 0].w
    dp3 r25.y, cb11[r24.w + 1].xyzx, r24.xyzx
    add_sat r25.y, r25.y, cb11[r24.w + 1].w
    mul r25.x, r25.y, r25.x
    dp3 r25.y, cb11[r24.w + 2].xyzx, r24.xyzx
    add_sat r25.y, r25.y, cb11[r24.w + 2].w
    mul r25.x, r25.y, r25.x
    dp3 r25.y, cb11[r24.w + 3].xyzx, r24.xyzx
    add_sat r25.y, r25.y, cb11[r24.w + 3].w
    mul r25.x, r25.y, r25.x
    dp3 r25.y, cb11[r24.w + 4].xyzx, r24.xyzx
    add_sat r25.y, r25.y, cb11[r24.w + 4].w
    mul r25.x, r25.y, r25.x
    dp3 r25.y, cb11[r24.w + 5].xyzx, r24.xyzx
    add_sat r24.w, r25.y, cb11[r24.w + 5].w
    mul r15.x, r24.w, r25.x
    and r24.w, l(1), cb10[r17.w + 6].x
    movc r25.xy, r24.wwww, r15.xyxx, r15.zxzz
    mov r15.x, cb10[r17.w + 6].x
    mov r26.xy, r25.xyxx
    mov r24.w, l(1)
    loop 
      ige r25.z, r24.w, r19.w
      breakc_nz r25.z
      iadd r25.z, r18.w, r24.w
      imul null, r25.z, r25.z, l(6)
      dp3 r25.w, cb11[r25.z + 0].xyzx, r24.xyzx
      add_sat r25.w, r25.w, cb11[r25.z + 0].w
      mul r25.w, r25.w, r26.x
      dp3 r26.z, cb11[r25.z + 1].xyzx, r24.xyzx
      add_sat r26.z, r26.z, cb11[r25.z + 1].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r25.z + 2].xyzx, r24.xyzx
      add_sat r26.z, r26.z, cb11[r25.z + 2].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r25.z + 3].xyzx, r24.xyzx
      add_sat r26.z, r26.z, cb11[r25.z + 3].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r25.z + 4].xyzx, r24.xyzx
      add_sat r26.z, r26.z, cb11[r25.z + 4].w
      mul r25.w, r25.w, r26.z
      dp3 r26.z, cb11[r25.z + 5].xyzx, r24.xyzx
      add_sat r25.z, r26.z, cb11[r25.z + 5].w
      mul r26.x, r25.z, r25.w
      ushr r26.z, r15.x, l(2)
      ubfe r26.w, l(1), l(2), r15.x
      and r27.x, r26.z, l(2)
      max r27.y, r26.x, r26.y
      mad r25.z, -r25.w, r25.z, l(1.000000)
      mul r25.z, r25.z, r26.y
      movc r17.y, r27.x, r25.z, r27.y
      movc r26.xy, r26.wwww, r26.xyxx, r17.xyxx
      iadd r24.w, r24.w, l(1)
      mov r15.x, r26.z
    endloop 
    mov_sat r26.y, r26.y
    mul r15.x, r26.y, cb10[r17.w + 6].y
    lt r17.y, l(0.000000), r15.x
    if_nz r17.y
      mad r23.z, r26.y, cb10[r17.w + 6].y, r23.z
      mul r15.x, r15.x, cb10[r17.w + 7].y
      mov r25.x, cb10[r17.w + 7].w
      mov r25.yz, cb10[r17.w + 8].xxyx
      dp3 r17.y, r14.xyzx, r25.xyzx
      dp3 r18.w, r24.xyzx, r25.xyzx
      add r18.w, r18.w, -cb10[r17.w + 8].z
      ge r19.w, r18.w, l(0.000000)
      max r18.w, r9.w, |r18.w|
      movc r18.w, r19.w, r18.w, -r18.w
      max r17.y, -r17.y, l(0.00000010)
      div r17.y, r18.w, r17.y
      min r17.y, |r17.y|, l(131072.000000)
      mov r25.x, cb10[r17.w + 8].w
      mov r25.yz, cb10[r17.w + 9].xxyx
      dp3 r18.w, r14.xyzx, r25.xyzx
      dp3 r19.w, r24.xyzx, r25.xyzx
      add r19.w, r19.w, -cb10[r17.w + 9].z
      ge r24.w, r19.w, l(0.000000)
      max r19.w, r9.w, |r19.w|
      movc r19.w, r24.w, r19.w, -r19.w
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.w, r18.w
      min r17.y, r17.y, |r18.w|
      mov r25.x, cb10[r17.w + 9].w
      mov r25.yz, cb10[r17.w + 10].xxyx
      dp3 r18.w, r14.xyzx, r25.xyzx
      dp3 r19.w, r24.xyzx, r25.xyzx
      add r19.w, r19.w, -cb10[r17.w + 10].z
      ge r24.w, r19.w, l(0.000000)
      max r19.w, r9.w, |r19.w|
      movc r19.w, r24.w, r19.w, -r19.w
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.w, r18.w
      min r17.y, r17.y, |r18.w|
      mov r25.x, cb10[r17.w + 10].w
      mov r25.yz, cb10[r17.w + 11].xxyx
      dp3 r18.w, r14.xyzx, r25.xyzx
      dp3 r19.w, r24.xyzx, r25.xyzx
      add r19.w, r19.w, -cb10[r17.w + 11].z
      ge r24.w, r19.w, l(0.000000)
      max r19.w, r9.w, |r19.w|
      movc r19.w, r24.w, r19.w, -r19.w
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.w, r18.w
      min r17.y, r17.y, |r18.w|
      mov r25.x, cb10[r17.w + 11].w
      mov r25.yz, cb10[r17.w + 12].xxyx
      dp3 r18.w, r14.xyzx, r25.xyzx
      dp3 r19.w, r24.xyzx, r25.xyzx
      add r19.w, r19.w, -cb10[r17.w + 12].z
      ge r24.w, r19.w, l(0.000000)
      max r19.w, r9.w, |r19.w|
      movc r19.w, r24.w, r19.w, -r19.w
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.w, r18.w
      min r17.y, r17.y, |r18.w|
      mov r25.x, cb10[r17.w + 12].w
      mov r25.yz, cb10[r17.w + 13].xxyx
      dp3 r18.w, r14.xyzx, r25.xyzx
      dp3 r19.w, r24.xyzx, r25.xyzx
      add r19.w, r19.w, -cb10[r17.w + 13].z
      ge r24.w, r19.w, l(0.000000)
      max r19.w, r9.w, |r19.w|
      movc r19.w, r24.w, r19.w, -r19.w
      max r18.w, -r18.w, l(0.00000010)
      div r18.w, r19.w, r18.w
      min r17.y, r17.y, |r18.w|
      add r25.x, r24.x, cb10[r17.w + 3].w
      add r25.yz, r24.yyzy, cb10[r17.w + 4].xxyx
      mad r25.xyz, r14.xyzx, r17.yyyy, r25.xyzx
      dp3 r18.w, r25.xyzx, r25.xyzx
      sqrt r18.w, r18.w
      div r17.y, r17.y, r18.w
      add r17.y, r17.y, r17.y
      sqrt r17.y, r17.y
      mad r17.y, r8.w, l(5.000000), r17.y
      add r17.y, r17.y, l(-0.844800)
      mov r27.x, cb10[r17.w + 0].w
      mov r27.y, cb10[r17.w + 1].z
      mov r27.z, cb10[r17.w + 2].y
      dp3 r28.x, r25.xyzx, r27.xyzx
      mov r29.xy, cb10[r17.w + 1].xwxx
      mov r29.z, cb10[r17.w + 2].z
      dp3 r28.y, r25.xyzx, r29.xyzx
      mov r30.x, cb10[r17.w + 1].y
      mov r30.yz, cb10[r17.w + 2].xxwx
      dp3 r28.z, r25.xyzx, r30.xyzx
      ubfe r18.w, l(9), l(16), cb10[r17.w + 7].z
      utof r28.w, r18.w
      sample_l_indexable(texturecubearray)(float,float,float,float) r25.xyz, r28.xyzw, t8.xyzw, s2, r17.y
      dp3 r31.x, r24.xyzx, r27.xyzx
      dp3 r31.y, r24.xyzx, r29.xyzx
      dp3 r31.z, r24.xyzx, r30.xyzx
      mad_sat r24.xyz, r31.xyzx, cb10[r17.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      mul r31.xy, r24.xyxx, cb10[r17.w + 4].zwzz
      mul r31.z, r24.z, cb10[r17.w + 5].x
      add r24.xyz, r31.xyzx, cb10[r17.w + 5].yzwy
      dp3 r28.x, r11.xyzx, r27.xyzx
      dp3 r28.y, r11.xyzx, r29.xyzx
      dp3 r28.z, r11.xyzx, r30.xyzx
      lt r26.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r28.xxyz
      movc r16.z, r26.x, l(0), l(0.500000)
      add r27.xyz, r16.xyzx, r24.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r27.xyz, r27.xyzx, t17.xyzw, s4, l(0.000000)
      mul r29.xyz, r28.xyzx, r28.xyzx
      mul r29.xyz, r15.xxxx, r29.xyzx
      movc r18.z, r26.z, l(0), l(0.500000)
      add r30.xyz, r18.xyzx, r24.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r30.xyz, r30.xyzx, t18.xyzw, s4, l(0.000000)
      mul r30.xyz, r29.yyyy, r30.xyzx
      mad r27.xyz, r27.xyzx, r29.xxxx, r30.xyzx
      movc r19.z, r26.w, l(0), l(0.500000)
      add r24.xyz, r19.xyzx, r24.xyzx
      sample_l_indexable(texture3d)(float,float,float,float) r24.xyz, r24.xyzx, t19.xyzw, s4, l(0.000000)
      mad r24.xyz, r24.xyzx, r29.zzzz, r27.xyzx
      sample_l_indexable(texturecubearray)(float,float,float,float) r26.xzw, r28.xyzw, t8.xwyz, s2, l(6.000000)
      mul r27.xyz, r24.xyzx, r26.xzwx
      dp3 r16.z, r27.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r22.xyz, r24.xyzx, r26.xzwx, r22.xyzx
      mul r17.y, r10.w, r16.z
      mul r24.xyz, r15.xxxx, r25.xyzx
      dp3 r15.x, r24.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r15.x, r10.w, r16.z, r15.x
      div r15.x, r17.y, r15.x
      mov r25.x, r22.w
      mov r25.yz, r23.xxyx
      mad r23.xyw, r24.yzyx, r15.xxxx, r25.yzyx
      mov r22.w, r23.w
    endif 
  endloop 
  mov r20.xyzw, r22.xyzw
  mov r21.yzw, r23.xxyz
  iadd r15.w, r15.w, l(32)
endloop 
lt r13.z, r21.w, l(1.000000)
if_nz r13.z
  mov r15.yz, l(0,0,1.000000,0)
  mov r16.xy, l(0,0,0,0)
  mov r17.x, l(1.000000)
  mov r18.xy, l(0,0,0,0)
  mov r19.xy, l(0,0,0,0)
  mov r22.x, r20.w
  mov r22.yzw, r21.yyzw
  mov r23.xyz, r20.xyzx
  mov r13.z, r21.w
  mov r13.w, l(0)
  loop 
    uge r15.w, r13.w, r12.w
    breakc_nz r15.w
    ushr r15.w, r13.w, l(5)
    iadd r15.w, r0.x, r15.w
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r15.w, r15.w, l(0), t26.xxxx
    ieq r16.w, r0.y, r13.w
    ubfe r17.z, r13.y, l(0), r15.w
    movc r15.w, r16.w, r17.z, r15.w
    mov r24.xyzw, r22.xyzw
    mov r25.xyz, r23.xyzx
    mov r16.w, r13.z
    mov r17.z, r15.w
    loop 
      breakc_z r17.z
      firstbit_lo r17.w, r17.z
      ishl r18.w, l(1), r17.w
      not r18.w, r18.w
      and r17.z, r17.z, r18.w
      iadd r17.w, r13.w, r17.w
      imul null, r17.w, r17.w, l(14)
      add r26.xyz, r10.xyzx, -cb10[r17.w + 0].xyzx
      and r18.w, l(0x0000ffff), cb10[r17.w + 7].z
      ubfe r19.w, l(6), l(25), cb10[r17.w + 7].z
      imul null, r23.w, r18.w, l(6)
      dp3 r25.w, cb11[r23.w + 0].xyzx, r26.xyzx
      add_sat r25.w, r25.w, cb11[r23.w + 0].w
      dp3 r26.w, cb11[r23.w + 1].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r23.w + 1].w
      mul r25.w, r25.w, r26.w
      dp3 r26.w, cb11[r23.w + 2].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r23.w + 2].w
      mul r25.w, r25.w, r26.w
      dp3 r26.w, cb11[r23.w + 3].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r23.w + 3].w
      mul r25.w, r25.w, r26.w
      dp3 r26.w, cb11[r23.w + 4].xyzx, r26.xyzx
      add_sat r26.w, r26.w, cb11[r23.w + 4].w
      mul r25.w, r25.w, r26.w
      dp3 r26.w, cb11[r23.w + 5].xyzx, r26.xyzx
      add_sat r23.w, r26.w, cb11[r23.w + 5].w
      mul r15.x, r23.w, r25.w
      and r23.w, l(1), cb10[r17.w + 6].x
      movc r27.xy, r23.wwww, r15.xyxx, r15.zxzz
      mov r15.x, cb10[r17.w + 6].x
      mov r28.xy, r27.xyxx
      mov r23.w, l(1)
      loop 
        ige r25.w, r23.w, r19.w
        breakc_nz r25.w
        iadd r25.w, r18.w, r23.w
        imul null, r25.w, r25.w, l(6)
        dp3 r26.w, cb11[r25.w + 0].xyzx, r26.xyzx
        add_sat r26.w, r26.w, cb11[r25.w + 0].w
        mul r26.w, r26.w, r28.x
        dp3 r27.z, cb11[r25.w + 1].xyzx, r26.xyzx
        add_sat r27.z, r27.z, cb11[r25.w + 1].w
        mul r26.w, r26.w, r27.z
        dp3 r27.z, cb11[r25.w + 2].xyzx, r26.xyzx
        add_sat r27.z, r27.z, cb11[r25.w + 2].w
        mul r26.w, r26.w, r27.z
        dp3 r27.z, cb11[r25.w + 3].xyzx, r26.xyzx
        add_sat r27.z, r27.z, cb11[r25.w + 3].w
        mul r26.w, r26.w, r27.z
        dp3 r27.z, cb11[r25.w + 4].xyzx, r26.xyzx
        add_sat r27.z, r27.z, cb11[r25.w + 4].w
        mul r26.w, r26.w, r27.z
        dp3 r27.z, cb11[r25.w + 5].xyzx, r26.xyzx
        add_sat r25.w, r27.z, cb11[r25.w + 5].w
        mul r28.x, r25.w, r26.w
        ushr r27.z, r15.x, l(2)
        ubfe r27.w, l(1), l(2), r15.x
        and r28.z, r27.z, l(2)
        max r28.w, r28.x, r28.y
        mad r25.w, -r26.w, r25.w, l(1.000000)
        mul r25.w, r25.w, r28.y
        movc r17.y, r28.z, r25.w, r28.w
        movc r28.xy, r27.wwww, r28.xyxx, r17.xyxx
        iadd r23.w, r23.w, l(1)
        mov r15.x, r27.z
      endloop 
      add_sat r15.x, -r16.w, r28.y
      mul r17.y, r15.x, cb10[r17.w + 6].y
      lt r18.w, l(0.000000), r17.y
      if_nz r18.w
        mad r24.w, r15.x, cb10[r17.w + 6].y, r24.w
        mul r15.x, r17.y, cb10[r17.w + 7].y
        mov r27.x, cb10[r17.w + 7].w
        mov r27.yz, cb10[r17.w + 8].xxyx
        dp3 r17.y, r14.xyzx, r27.xyzx
        dp3 r18.w, r26.xyzx, r27.xyzx
        add r18.w, r18.w, -cb10[r17.w + 8].z
        ge r19.w, r18.w, l(0.000000)
        max r18.w, r9.w, |r18.w|
        movc r18.w, r19.w, r18.w, -r18.w
        max r17.y, -r17.y, l(0.00000010)
        div r17.y, r18.w, r17.y
        min r17.y, |r17.y|, l(131072.000000)
        mov r27.x, cb10[r17.w + 8].w
        mov r27.yz, cb10[r17.w + 9].xxyx
        dp3 r18.w, r14.xyzx, r27.xyzx
        dp3 r19.w, r26.xyzx, r27.xyzx
        add r19.w, r19.w, -cb10[r17.w + 9].z
        ge r23.w, r19.w, l(0.000000)
        max r19.w, r9.w, |r19.w|
        movc r19.w, r23.w, r19.w, -r19.w
        max r18.w, -r18.w, l(0.00000010)
        div r18.w, r19.w, r18.w
        min r17.y, r17.y, |r18.w|
        mov r27.x, cb10[r17.w + 9].w
        mov r27.yz, cb10[r17.w + 10].xxyx
        dp3 r18.w, r14.xyzx, r27.xyzx
        dp3 r19.w, r26.xyzx, r27.xyzx
        add r19.w, r19.w, -cb10[r17.w + 10].z
        ge r23.w, r19.w, l(0.000000)
        max r19.w, r9.w, |r19.w|
        movc r19.w, r23.w, r19.w, -r19.w
        max r18.w, -r18.w, l(0.00000010)
        div r18.w, r19.w, r18.w
        min r17.y, r17.y, |r18.w|
        mov r27.x, cb10[r17.w + 10].w
        mov r27.yz, cb10[r17.w + 11].xxyx
        dp3 r18.w, r14.xyzx, r27.xyzx
        dp3 r19.w, r26.xyzx, r27.xyzx
        add r19.w, r19.w, -cb10[r17.w + 11].z
        ge r23.w, r19.w, l(0.000000)
        max r19.w, r9.w, |r19.w|
        movc r19.w, r23.w, r19.w, -r19.w
        max r18.w, -r18.w, l(0.00000010)
        div r18.w, r19.w, r18.w
        min r17.y, r17.y, |r18.w|
        mov r27.x, cb10[r17.w + 11].w
        mov r27.yz, cb10[r17.w + 12].xxyx
        dp3 r18.w, r14.xyzx, r27.xyzx
        dp3 r19.w, r26.xyzx, r27.xyzx
        add r19.w, r19.w, -cb10[r17.w + 12].z
        ge r23.w, r19.w, l(0.000000)
        max r19.w, r9.w, |r19.w|
        movc r19.w, r23.w, r19.w, -r19.w
        max r18.w, -r18.w, l(0.00000010)
        div r18.w, r19.w, r18.w
        min r17.y, r17.y, |r18.w|
        mov r27.x, cb10[r17.w + 12].w
        mov r27.yz, cb10[r17.w + 13].xxyx
        dp3 r18.w, r14.xyzx, r27.xyzx
        dp3 r19.w, r26.xyzx, r27.xyzx
        add r19.w, r19.w, -cb10[r17.w + 13].z
        ge r23.w, r19.w, l(0.000000)
        max r19.w, r9.w, |r19.w|
        movc r19.w, r23.w, r19.w, -r19.w
        max r18.w, -r18.w, l(0.00000010)
        div r18.w, r19.w, r18.w
        min r17.y, r17.y, |r18.w|
        add r27.x, r26.x, cb10[r17.w + 3].w
        add r27.yz, r26.yyzy, cb10[r17.w + 4].xxyx
        mad r27.xyz, r14.xyzx, r17.yyyy, r27.xyzx
        dp3 r18.w, r27.xyzx, r27.xyzx
        sqrt r18.w, r18.w
        div r17.y, r17.y, r18.w
        add r17.y, r17.y, r17.y
        sqrt r17.y, r17.y
        mad r17.y, r8.w, l(5.000000), r17.y
        add r17.y, r17.y, l(-0.844800)
        mov r29.x, cb10[r17.w + 0].w
        mov r29.y, cb10[r17.w + 1].z
        mov r29.z, cb10[r17.w + 2].y
        dp3 r30.x, r27.xyzx, r29.xyzx
        mov r31.xy, cb10[r17.w + 1].xwxx
        mov r31.z, cb10[r17.w + 2].z
        dp3 r30.y, r27.xyzx, r31.xyzx
        mov r32.x, cb10[r17.w + 1].y
        mov r32.yz, cb10[r17.w + 2].xxwx
        dp3 r30.z, r27.xyzx, r32.xyzx
        ubfe r18.w, l(9), l(16), cb10[r17.w + 7].z
        utof r30.w, r18.w
        sample_l_indexable(texturecubearray)(float,float,float,float) r27.xyz, r30.xyzw, t8.xyzw, s2, r17.y
        dp3 r33.x, r26.xyzx, r29.xyzx
        dp3 r33.y, r26.xyzx, r31.xyzx
        dp3 r33.z, r26.xyzx, r32.xyzx
        mad_sat r26.xyz, r33.xyzx, cb10[r17.w + 3].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        mul r33.xy, r26.xyxx, cb10[r17.w + 4].zwzz
        mul r33.z, r26.z, cb10[r17.w + 5].x
        add r26.xyz, r33.xyzx, cb10[r17.w + 5].yzwy
        dp3 r30.x, r11.xyzx, r29.xyzx
        dp3 r30.y, r11.xyzx, r31.xyzx
        dp3 r30.z, r11.xyzx, r32.xyzx
        lt r28.xzw, l(0.000000, 0.000000, 0.000000, 0.000000), r30.xxyz
        movc r16.z, r28.x, l(0), l(0.500000)
        add r29.xyz, r16.xyzx, r26.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r29.xyz, r29.xyzx, t17.xyzw, s4, l(0.000000)
        mul r31.xyz, r30.xyzx, r30.xyzx
        mul r31.xyz, r15.xxxx, r31.xyzx
        movc r18.z, r28.z, l(0), l(0.500000)
        add r32.xyz, r18.xyzx, r26.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r32.xyz, r32.xyzx, t18.xyzw, s4, l(0.000000)
        mul r32.xyz, r31.yyyy, r32.xyzx
        mad r29.xyz, r29.xyzx, r31.xxxx, r32.xyzx
        movc r19.z, r28.w, l(0), l(0.500000)
        add r26.xyz, r19.xyzx, r26.xyzx
        sample_l_indexable(texture3d)(float,float,float,float) r26.xyz, r26.xyzx, t19.xyzw, s4, l(0.000000)
        mad r26.xyz, r26.xyzx, r31.zzzz, r29.xyzx
        sample_l_indexable(texturecubearray)(float,float,float,float) r28.xzw, r30.xyzw, t8.xwyz, s2, l(6.000000)
        mul r29.xyz, r26.xyzx, r28.xzwx
        dp3 r16.z, r29.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r25.xyz, r26.xyzx, r28.xzwx, r25.xyzx
        mul r17.y, r10.w, r16.z
        mul r26.xyz, r15.xxxx, r27.xyzx
        dp3 r15.x, r26.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
        mad r15.x, r10.w, r16.z, r15.x
        div r15.x, r17.y, r15.x
        mad r24.xyz, r26.xyzx, r15.xxxx, r24.xyzx
      endif 
    endloop 
    mov r22.xyzw, r24.xyzw
    mov r23.xyz, r25.xyzx
    iadd r13.w, r13.w, l(32)
  endloop 
  mov r21.xyzw, r22.zxyw
  mov r20.xyz, r23.xyzx
  mov r21.xyzw, r21.yzxw
else 
  mov r21.x, r20.w
endif 
max r0.x, r21.w, l(1.000000)
rcp r0.x, r0.x
mov_sat r21.w, r21.w
mul r13.yzw, r0.xxxx, r20.xxyz
mul r15.xyz, r0.xxxx, r21.xyzx
lt r0.y, r21.w, l(0.990000)
if_nz r0.y
  add r0.y, -r21.w, l(1.000000)
  mul r8.w, r0.y, cb2[19].x
  add r16.xyz, r10.xyzx, -cb2[35].xyzx
  mul r17.x, r16.x, cb2[35].w
  mul r17.yz, r16.yyzy, cb2[36].xxyx
  add_sat r16.xyz, r17.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r17.xy, r16.xyxx, cb2[36].zwzz
  mul r17.z, r16.z, cb2[37].x
  add r16.xyz, r17.xyzx, cb2[37].yzwy
  lt r17.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r11.xyzx
  movc r17.xyz, r17.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r17.w, l(0)
  add r18.xyz, r16.xyzx, r17.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r18.xyz, r18.xyzx, t17.xyzw, s4, l(0.000000)
  mul r19.xyz, r11.xyzx, r11.xyzx
  mul r19.xyz, r8.wwww, r19.xyzx
  add r21.xyz, r16.xyzx, r17.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t18.xyzw, s4, l(0.000000)
  mul r21.xyz, r19.yyyy, r21.xyzx
  mad r18.xyz, r18.xyzx, r19.xxxx, r21.xyzx
  add r16.xyz, r16.xyzx, r17.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r16.xyz, r16.xyzx, t19.xyzw, s4, l(0.000000)
  mad r16.xyz, r16.xyzx, r19.zzzz, r18.xyzx
  mov r11.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r17.xyz, r11.xyzw, t8.xyzw, s2, l(6.000000)
  mul r16.xyz, r16.xyzx, r17.xyzx
  dp3 r8.w, r16.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r13.yzw, r20.xxyz, r0.xxxx, r16.xxyz
  mov r14.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r14.xyz, r14.xyzw, t8.xyzw, s2, r9.y
  mad r0.x, cb2[19].x, r0.y, -r8.w
  mad r0.x, r2.y, r0.x, r8.w
  mad r15.xyz, r14.xyzx, r0.xxxx, r15.xyzx
endif 
mad r0.x, r4.z, r2.z, r2.x
log r0.x, |r0.x|
mul r0.x, r0.x, r1.w
exp r0.x, r0.x
mad r0.x, r4.z, r2.z, r0.x
add_sat r0.x, r0.x, l(-1.000000)
mul r14.xyz, r2.wwww, r13.yzwy
and r16.xyz, r0.wwww, r14.xyzx
mad r2.yz, r2.xxyx, l(0.000000, 0.984375, 0.984375, 0.000000), l(0.000000, 0.00781250, 0.00781250, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.yz, r2.yzyy, t5.zxyw, s2, l(0.000000)
mul r15.xyz, r0.xxxx, r15.xyzx
mul r17.xyz, r2.yyyy, r15.xyzx
mul r15.xyz, r2.zzzz, r15.xyzx
lt r0.x, l(0.000000), r7.w
if_nz r0.x
  lt r0.x, l(0.000000), r9.x
  if_nz r0.x
    sqrt r0.x, r1.w
    mad r0.x, r0.x, l(0.500000), l(0.500000)
    mul r0.x, r0.x, r0.x
    mul r0.y, r0.x, l(0.500000)
    mad r0.x, -r0.x, l(0.500000), l(1.000000)
    mad r2.y, r2.x, r0.x, r0.y
    mul r0.xy, r0.xyxx, r2.yyyy
    mul r2.y, r1.z, cb2[18].w
    mul r2.y, r6.w, r2.y
    if_nz cb2[23].x
      add r18.xyz, r10.xyzx, cb1[24].xyzx
      mov r18.w, l(1.000000)
      dp4 r2.z, cb2[24].xyzw, r18.xyzw
      dp4 r4.z, cb2[25].xyzw, r18.xyzw
      frc r18.x, r2.z
      frc r18.y, r4.z
      iadd r2.z, l(-1), cb2[23].x
      utof r18.z, r2.z
      sample_l_indexable(texture2darray)(float,float,float,float) r18.xyz, r18.xyzx, t20.xyzw, s2, l(0.000000)
      add r18.xyz, r18.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r18.xyz, cb2[23].yyyy, r18.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r18.xyz, r18.xyzx, cb2[18].xyzx
    else 
      mov r18.xyz, cb2[18].xyzx
    endif 
    ushr r2.z, cb2[53].x, l(16)
    ult r4.z, l(0), r2.z
    and r4.z, r9.z, r4.z
    if_nz r4.z
      iadd r2.z, r2.z, cb2[0].x
      imad r2.z, r2.z, l(15), l(-15)
      mad r4.z, |r5.w|, l(-0.200000), l(0.400000)
      lt r8.w, r5.w, l(0.000000)
      and r8.w, r0.w, r8.w
      movc r4.z, r8.w, -r4.z, r4.z
      mad r19.xyz, r11.xyzx, r4.zzzz, r10.xyzx
      mov r20.xyz, cb9[r2.z + 4].yzwy
      mov r20.w, cb9[r2.z + 5].x
      mov r19.w, l(1.000000)
      dp4 r20.x, r20.xyzw, r19.xyzw
      mov r21.xyz, cb9[r2.z + 5].yzwy
      mov r21.w, cb9[r2.z + 6].x
      dp4 r20.y, r21.xyzw, r19.xyzw
      mad r9.yw, r20.xxxy, l(0.000000, 0.500000, 0.000000, -0.500000), l(0.000000, 0.500000, 0.000000, 0.500000)
      add r20.x, r9.y, cb9[r2.z + 9].w
      add r20.y, r9.w, cb9[r2.z + 10].x
      mul r9.yw, r20.xxxy, cb9[r2.z + 9].yyyz
      div r20.xy, cb9[r2.z + 3].yyyy, cb9[r2.z + 8].ywyy
      add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
      ge r20.zw, r9.yyyw, r20.zzzw
      ge r20.xy, r20.xyxx, r9.ywyy
      or r20.xy, r20.xyxx, r20.zwzz
      or r4.z, r20.y, r20.x
      if_z r4.z
        mov r20.xyz, cb9[r2.z + 6].yzwy
        mov r20.w, cb9[r2.z + 7].x
        dp4 r4.z, r20.xyzw, r19.xyzw
        mov_sat r9.yw, r9.yyyw
        mad r19.x, r9.y, cb9[r2.z + 8].y, cb9[r2.z + 8].z
        mad r19.y, r9.w, cb9[r2.z + 8].w, cb9[r2.z + 9].x
        add r4.z, r4.z, cb9[r2.z + 10].y
        div r4.z, r4.z, cb9[r2.z + 10].z
        max r4.z, r4.z, l(0.00006104)
        and r8.w, l(0x0000ffff), cb9[r2.z + 1].w
        if_nz cb2[58].y
          mov r20.x, -r3.x
          utof r21.z, r8.w
          mov r20.y, r13.x
          mov r20.z, r3.x
          mov r9.yw, l(0,0,0,0)
          loop 
            ige r10.w, r9.w, l(8)
            breakc_nz r10.w
            dp2 r22.x, icb[r9.w + 0].yxyy, r20.xyxx
            dp2 r22.y, icb[r9.w + 0].yxyy, r20.yzyy
            mad r21.xy, r22.xyxx, cb9[r2.z + 3].yyyy, r19.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r21.xyzx, t9.xxxx, s13, r4.z
            mad r9.y, r10.w, l(0.125000), r9.y
            iadd r9.w, r9.w, l(1)
          endloop 
        else 
          utof r19.z, r8.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.y, r19.xyzx, t9.xxxx, s13, r4.z
        endif 
        mul r2.z, r9.y, r9.y
        mul r2.z, r9.y, r2.z
      else 
        mov r2.z, l(1.000000)
      endif 
      mul r9.x, r2.z, r9.x
    else 
      and r2.z, cb2[53].x, l(0x0000ffff)
      ult r4.z, l(0), r2.z
      not r8.w, r9.z
      and r4.z, r4.z, r8.w
      if_nz r4.z
        iadd r2.z, r2.z, cb2[0].x
        imad r2.z, r2.z, l(15), l(-15)
        mad r4.z, |r5.w|, l(-0.200000), l(0.400000)
        lt r8.w, r5.w, l(0.000000)
        and r8.w, r0.w, r8.w
        movc r4.z, r8.w, -r4.z, r4.z
        mad r19.xyz, r11.xyzx, r4.zzzz, r10.xyzx
        mov r20.xyz, cb9[r2.z + 4].yzwy
        mov r20.w, cb9[r2.z + 5].x
        mov r19.w, l(1.000000)
        dp4 r20.x, r20.xyzw, r19.xyzw
        mov r21.xyz, cb9[r2.z + 5].yzwy
        mov r21.w, cb9[r2.z + 6].x
        dp4 r20.y, r21.xyzw, r19.xyzw
        mad r9.yz, r20.xxyx, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
        add r20.x, r9.y, cb9[r2.z + 9].w
        add r20.y, r9.z, cb9[r2.z + 10].x
        mul r9.yz, r20.xxyx, cb9[r2.z + 9].yyzy
        div r20.xy, cb9[r2.z + 3].yyyy, cb9[r2.z + 8].ywyy
        add r20.zw, -r20.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
        ge r20.zw, r9.yyyz, r20.zzzw
        ge r20.xy, r20.xyxx, r9.yzyy
        or r20.xy, r20.xyxx, r20.zwzz
        or r4.z, r20.y, r20.x
        if_z r4.z
          mov r20.xyz, cb9[r2.z + 6].yzwy
          mov r20.w, cb9[r2.z + 7].x
          dp4 r4.z, r20.xyzw, r19.xyzw
          mov_sat r9.yz, r9.yyzy
          mad r19.x, r9.y, cb9[r2.z + 8].y, cb9[r2.z + 8].z
          mad r19.y, r9.z, cb9[r2.z + 8].w, cb9[r2.z + 9].x
          add r4.z, r4.z, cb9[r2.z + 10].y
          div r4.z, r4.z, cb9[r2.z + 10].z
          max r4.z, r4.z, l(0.00006104)
          and r8.w, l(0x0000ffff), cb9[r2.z + 1].w
          if_nz cb2[58].y
            mov r20.x, -r3.x
            utof r21.z, r8.w
            mov r20.y, r13.x
            mov r20.z, r3.x
            mov r3.x, l(0)
            mov r9.y, l(0)
            loop 
              ige r9.z, r9.y, l(8)
              breakc_nz r9.z
              dp2 r22.x, icb[r9.y + 0].yxyy, r20.xyxx
              dp2 r22.y, icb[r9.y + 0].yxyy, r20.yzyy
              mad r21.xy, r22.xyxx, cb9[r2.z + 3].yyyy, r19.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r21.xyzx, t9.xxxx, s13, r4.z
              mad r3.x, r9.z, l(0.125000), r3.x
              iadd r9.y, r9.y, l(1)
            endloop 
          else 
            utof r19.z, r8.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r3.x, r19.xyzx, t9.xxxx, s13, r4.z
          endif 
          mul r2.z, r3.x, r3.x
          mul r2.z, r3.x, r2.z
        else 
          mov r2.z, l(1.000000)
        endif 
        mul r9.x, r2.z, r9.x
      endif 
    endif 
    mad r2.x, -r2.x, l(0.500000), l(1.000000)
    mad r2.x, -r7.w, r2.x, l(1.000000)
    mul r2.x, r2.x, r2.x
    mad r2.x, -r2.x, l(0.620000), l(0.620000)
    add r2.x, -r7.w, r2.x
    mad r1.w, r1.w, r2.x, r7.w
    mul r1.w, r9.x, r1.w
    mul r9.yzw, r18.xxyz, r1.wwww
    lt r2.x, l(0.000000), r5.w
    mad r9.yzw, r13.yyzw, r2.wwww, r9.yyzw
    mad r13.xyz, -r10.xyzx, r0.zzzz, cb2[17].xyzx
    dp3 r0.z, r13.xyzx, r13.xyzx
    rsq r0.z, r0.z
    mul r13.xyz, r0.zzzz, r13.xyzx
    dp3 r0.z, r13.xyzx, r12.xyzx
    dp3 r2.z, r11.xyzx, r13.xyzx
    mad r1.z, |r2.z|, r1.z, -|r2.z|
    mad r1.z, |r2.z|, r1.z, l(1.000000)
    mad r0.x, r6.w, r0.x, r0.y
    mul r0.y, r1.z, r1.z
    mul r0.x, r0.x, r0.y
    rcp r0.x, r0.x
    mul r0.x, r2.y, r0.x
    mul r0.x, r0.x, r9.x
    mul r0.x, r0.x, l(0.250000)
    mad r2.yzw, r0.xxxx, r18.xxyz, r15.xxyz
    add_sat r0.y, -r0.z, l(1.000000)
    mul r0.z, r0.y, r0.y
    mul r0.z, r0.z, r0.z
    mul r0.y, r0.z, r0.y
    mul r0.x, r0.y, r0.x
    mad r0.xyz, r0.xxxx, r18.xyzx, r17.xyzx
    mad r11.xyz, r1.wwww, r18.xyzx, r16.xyzx
    and r11.xyz, r0.wwww, r11.xyzx
    movc r14.xyz, r2.xxxx, r9.yzwy, r14.xyzx
    movc r16.xyz, r2.xxxx, r16.xyzx, r11.xyzx
    movc r17.xyz, r2.xxxx, r0.xyzx, r17.xyzx
    movc r15.xyz, r2.xxxx, r2.yzwy, r15.xyzx
  endif 
endif 
mad r2.xyz, r4.xwyx, l(1.000000, 3.000000, 2.000000, 0.000000), l(0.000000, 0.500000, -1.000000, 0.000000)
ftou r0.x, r2.y
mad r4.xyz, r5.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r0.y, r4.x
ieq r0.y, r0.x, r0.y
movc r0.yz, r0.yyyy, r4.yyzy, l(0,-1.000000,0,0)
mad r4.xyz, r6.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r1.z, r4.x
ieq r1.z, r0.x, r1.z
movc r1.zw, r1.zzzz, r4.yyyz, l(0,0,-1.000000,0)
mad r4.xyz, r7.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r4.x
ieq r3.x, r0.x, r3.x
movc r4.xy, r3.xxxx, r4.yzyy, l(-1.000000,0,0,0)
mad r5.xyz, r8.zxyz, l(3.000000, 1.000000, 2.000000, 0.000000), l(0.500000, 0.000000, -1.000000, 0.000000)
ftou r3.x, r5.x
ieq r0.x, r0.x, r3.x
movc r4.zw, r0.xxxx, r5.yyyz, l(0,0,-1.000000,0)
mov r5.x, r0.y
mov r5.y, r1.z
mov r5.zw, r4.xxxz
add r5.xyzw, -r2.xxxx, r5.xyzw
ge r5.xyzw, |r5.xyzw|, l(0.00902149, 0.00902149, 0.00902149, 0.00902149)
movc r5.xyzw, r5.xyzw, l(0,0,0,0), l(1.000000,1.000000,1.000000,1.000000)
add r0.x, r5.y, r5.x
add r0.x, r5.z, r0.x
add r0.x, r5.w, r0.x
mul r0.y, r1.w, r5.y
mad r0.y, r5.x, r0.z, r0.y
mad r0.y, r5.z, r4.y, r0.y
mad r0.y, r5.w, r4.w, r0.y
div r2.w, r0.y, r0.x
ge r0.x, l(0.000000), r0.x
movc r2.yz, r0.xxxx, l(0,0,0,0), r2.zzwz
and r0.xy, r1.xyxx, l(1, 1, 0, 0)
ieq r0.x, r0.y, r0.x
movc r0.xyz, r0.xxxx, r2.xyzx, r2.xzyx
mad r0.x, -r0.z, l(0.500000), r0.x
add r2.y, r0.x, r0.z
mad r2.z, -r0.y, l(0.500000), r0.x
add r2.x, r0.y, r2.z
mul r0.xyz, r3.yzwy, r14.xyzx
mad r0.xyz, r16.xyzx, r2.xyzx, r0.xyzx
mul r4.xyz, r17.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r4.xyz, r15.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r4.xyzx
add r0.xyz, r0.xyzx, r4.xyzx
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r17.xyzx
mad r2.xyz, r15.xyzx, r2.xyzx, r4.xyzx
mad r2.xyz, r14.xyzx, r3.yzwy, r2.xyzx
movc r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
lt r0.w, l(0.000000), cb2[9].z
if_nz r0.w
  dp3 r0.w, r10.xyzx, r10.xyzx
  rsq r1.z, r0.w
  mul r2.xyz, r1.zzzz, r10.xyzx
  sqrt r0.w, r0.w
  lt r1.z, l(0.000000), cb2[13].w
  if_nz r1.z
    mad r1.zw, r0.wwww, cb2[15].xxxy, cb2[14].zzzw
    mul r1.zw, r1.zzzw, cb2[16].xxxy
    lt r2.w, l(0.010000), |r10.z|
    mul r3.xy, r10.zzzz, cb2[15].zwzz
    mul r3.zw, r3.xxxy, l(0.000000, 0.000000, -1.442695, -1.442695)
    exp r3.zw, r3.zzzw
    add r3.zw, -r3.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
    div r3.xy, r3.zwzz, r3.xyxx
    mul r3.xy, r1.zwzz, r3.xyxx
    movc r1.zw, r2.wwww, r3.xxxy, r1.zzzw
    mul r3.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    mul r4.xyz, r1.wwww, cb2[12].xyzx
    exp r4.xyz, r4.xyzx
    add r4.xyz, -r3.xyzx, r4.xyzx
    mad r3.xyz, cb2[13].wwww, r4.xyzx, r3.xyzx
  else 
    mad r1.z, r0.w, cb2[15].x, cb2[14].z
    mul r1.z, r1.z, cb2[16].x
    lt r1.w, l(0.010000), |r10.z|
    mul r2.w, r10.z, cb2[15].z
    mul r3.w, r2.w, l(-1.442695)
    exp r3.w, r3.w
    add r3.w, -r3.w, l(1.000000)
    div r2.w, r3.w, r2.w
    mul r2.w, r1.z, r2.w
    movc r1.z, r1.w, r2.w, r1.z
    mul r4.xyz, r1.zzzz, cb2[12].xyzx
    exp r3.xyz, r4.xyzx
  endif 
  mad r3.xyz, r3.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r3.xyz, r3.xyzx, -cb2[9].zzzz
  dp3 r1.z, cb2[7].yzwy, -r2.xyzx
  mad r1.w, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r2.x, cb2[8].w, -r1.z, l(1.000000)
  mul r2.x, r2.x, r2.x
  mul r2.x, r2.x, l(12.566371)
  div r1.w, r1.w, r2.x
  add r0.w, r0.w, -cb2[10].w
  mul_sat r0.w, r0.w, cb2[11].w
  mul r0.w, r0.w, r1.w
  mov_sat r1.z, r1.z
  mad r1.z, r1.z, r1.z, l(1.000000)
  mad r1.z, r1.z, l(0.05968310), l(-1.000000)
  mad r1.z, cb2[8].z, r1.z, l(1.000000)
  mul r2.xyz, r0.wwww, cb2[11].xyzx
  mad r2.xyz, r1.zzzz, cb2[10].xyzx, r2.xyzx
  mul r2.xyz, r2.xyzx, cb2[9].wwww
  add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r2.xyz, r2.xyzx, r4.xyzx
  mad r2.xyz, r0.xyzx, r3.xyzx, r2.xyzx
else 
  mul r0.w, r10.z, cb2[6].x
  mad r1.z, cb2[6].x, r10.z, cb2[5].x
  lt r1.w, |r0.w|, l(0.000100)
  min r2.w, r1.z, l(64.000000)
  mul r2.w, r2.w, l(1.442695)
  exp r2.w, r2.w
  mov_sat r3.x, cb2[6].z
  lt r3.y, r1.z, l(0.000000)
  add r1.z, r1.z, l(1.000000)
  movc r1.z, r3.y, r2.w, r1.z
  add r1.z, r1.z, -cb2[6].z
  movc r0.w, r1.w, l(1.000000), r0.w
  div r0.w, r1.z, r0.w
  movc r0.w, r1.w, r3.x, r0.w
  mul r0.w, r0.w, cb2[5].z
  dp3 r1.z, r10.xyzx, r10.xyzx
  sqrt r1.w, r1.z
  mad r0.w, r0.w, r1.w, cb2[5].w
  exp r0.w, r0.w
  min r0.w, r0.w, l(1.000000)
  add r0.w, -r0.w, l(1.000000)
  rsq r1.z, r1.z
  mul r3.xyz, r1.zzzz, r10.xyzx
  dp3 r1.z, cb2[7].yzwy, r3.xyzx
  mad_sat r1.z, cb2[8].y, r1.z, cb2[8].x
  add r3.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r3.xyzw, r1.zzzz, r3.xyzw, cb2[4].xyzw
  mul r0.w, r0.w, r3.w
  add r3.xyz, -r0.xyzx, r3.xyzx
  mad r2.xyz, r0.wwww, r3.xyzx, r0.xyzx
endif 
mul r0.xyzw, r2.xyzx, cb1[85].yyyy
ge r2.xyzw, r0.wyzw, l(0.00006104, 0.00006104, 0.00006104, 0.00006104)
and r0.xyzw, r0.xyzw, r2.xyzw
min r0.xyzw, r0.xyzw, l(65024.000000, 65024.000000, 64512.000000, 65024.000000)
store_uav_typed u0.xyzw, r1.xyyy, r0.xyzw
ret 
// Approximately 1217 instruction slots used
