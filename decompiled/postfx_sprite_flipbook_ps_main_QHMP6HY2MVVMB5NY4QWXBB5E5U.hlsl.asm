//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:24 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float alphaRevealSoftEdge;         // Offset:  160 Size:     4 [unused]
//   float alphaRevealRamp;             // Offset:  164 Size:     4 [unused]
//   float heightScale;                 // Offset:  168 Size:     4 [unused]
//   float2 sprites;                    // Offset:  176 Size:     8 [unused]
//   float2 source;                     // Offset:  184 Size:     8 [unused]
//   float count;                       // Offset:  192 Size:     4 [unused]
//   float seed;                        // Offset:  196 Size:     4 [unused]
//   float2 scaleMin;                   // Offset:  200 Size:     8 [unused]
//   float2 scaleMax;                   // Offset:  208 Size:     8 [unused]
//   float2 lifeMaxMin;                 // Offset:  216 Size:     8 [unused]
//   float2 fadeInMaxMin;               // Offset:  224 Size:     8 [unused]
//   float2 fadeOutMaxMin;              // Offset:  232 Size:     8 [unused]
//   float2 pauseMaxMin;                // Offset:  240 Size:     8 [unused]
//   float2 stretchMaxMin;              // Offset:  248 Size:     8 [unused]
//   float2 slideMaxMin;                // Offset:  256 Size:     8 [unused]
//   float2 heightMaxMin;               // Offset:  264 Size:     8 [unused]
//   float2 warpMaxMin;                 // Offset:  272 Size:     8 [unused]
//   float2 jitterMaxMin;               // Offset:  280 Size:     8 [unused]
//   float2 rotationMaxMin;             // Offset:  288 Size:     8 [unused]
//   float2 flipbookCounts;             // Offset:  296 Size:     8
//   float flipbookTime;                // Offset:  304 Size:     4
//
// }
//
// cbuffer GenericsCBuffer
// {
//
//   float4 scriptVector0;              // Offset:    0 Size:    16
//   float4 scriptVector1;              // Offset:   16 Size:    16 [unused]
//   float4 scriptVector2;              // Offset:   32 Size:    16 [unused]
//   float4 scriptVector3;              // Offset:   48 Size:    16 [unused]
//   float4 scriptVector4;              // Offset:   64 Size:    16 [unused]
//   float4 scriptVector5;              // Offset:   80 Size:    16 [unused]
//   float4 scriptVector6;              // Offset:   96 Size:    16 [unused]
//   float4 scriptVector7;              // Offset:  112 Size:    16
//   float4 weaponParam0;               // Offset:  128 Size:    16 [unused]
//   float4 weaponParam1;               // Offset:  144 Size:    16 [unused]
//   float4 weaponParam2;               // Offset:  160 Size:    16 [unused]
//   float4 weaponParam3;               // Offset:  176 Size:    16 [unused]
//   float4 weaponParam4;               // Offset:  192 Size:    16 [unused]
//   float4 weaponParam5;               // Offset:  208 Size:    16 [unused]
//   float4 weaponParam6;               // Offset:  224 Size:    16 [unused]
//   float4 weaponParam7;               // Offset:  240 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// trilinearSampler                  sampler      NA          NA             s1      1 
// colorMap                          texture  float4          2d             t0      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// GenericsCBuffer                   cbuffer      NA          NA            cb3      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 3     zw        1     NONE   float     z 
// TEXCOORD                 2   xyzw        2     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[20], immediateIndexed
dcl_constantbuffer CB3[8], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v2.zw
dcl_output o0.xyzw
dcl_temps 2
mul r0.x, cb0[19].x, l(100.000000)
mad r0.y, v1.z, v2.w, cb3[7].x
mul r0.z, cb0[18].w, cb0[18].z
mul r0.x, r0.z, r0.x
mul r0.w, r0.x, r0.y
ge r0.w, r0.w, -r0.w
movc r0.w, r0.w, r0.x, -r0.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.y, r0.y, r1.x
frc r0.y, r0.y
mul r0.y, r0.y, r0.w
div r0.x, r0.y, r0.x
mul r0.x, r0.z, r0.x
round_ne r0.x, r0.x
div r0.y, r0.x, cb0[18].w
mul r0.z, r0.x, cb0[18].w
ge r0.z, r0.z, -r0.z
movc r0.z, r0.z, cb0[18].w, -cb0[18].w
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.x, r0.w, r0.x
frc r0.x, r0.x
mul r0.x, r0.x, r0.z
round_z r0.x, r0.x
add r0.x, r0.x, v1.x
div r1.x, r0.x, cb0[18].w
round_z r0.x, r0.y
add r0.x, r0.x, -v1.y
div r1.y, r0.x, cb0[18].z
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r1.xyxx, t0.xyzw, s1
mul r0.w, r0.w, cb3[0].x
ge r1.x, l(0.000000), r0.w
discard_nz r1.x
mul r0.w, r0.w, v2.z
mul o0.w, r0.w, l(0.03333334)
mul o0.xyz, r0.xyzx, l(32768.000000, 32768.000000, 32768.000000, 0.000000)
ret 
// Approximately 36 instruction slots used
