//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:42:54 2021
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 flagParams;                 // Offset:    0 Size:    16 [unused]
//   float4 colorObjMin;                // Offset:   16 Size:    16 [unused]
//   float4 colorObjMax;                // Offset:   32 Size:    16 [unused]
//   float colorObjMinBaseBlend;        // Offset:   48 Size:     4 [unused]
//   float colorObjMaxBaseBlend;        // Offset:   52 Size:     4 [unused]
//   float2 uvScroll;                   // Offset:   56 Size:     8 [unused]
//   float4 detailScale;                // Offset:   64 Size:    16 [unused]
//   float4 detailScale1;               // Offset:   80 Size:    16 [unused]
//   float4 detailScale2;               // Offset:   96 Size:    16 [unused]
//   float4 detailScale3;               // Offset:  112 Size:    16 [unused]
//   float4 alphaRevealParms;           // Offset:  128 Size:    16 [unused]
//   float4 colorDetailScale;           // Offset:  144 Size:    16 [unused]
//   float3 specColorTint;              // Offset:  160 Size:    12 [unused]
//   float baseNormalHeight;            // Offset:  172 Size:     4 [unused]
//   float2 glossRange;                 // Offset:  176 Size:     8 [unused]
//   float3 diffuseAlbedo;              // Offset:  192 Size:    12
//   float4 scanlineConsts;             // Offset:  208 Size:    16
//   float4 scanlineConsts1;            // Offset:  224 Size:    16
//   float2 falloffParms;               // Offset:  240 Size:     8
//   float2 noiseScroll;                // Offset:  248 Size:     8
//   float2 noiseScale;                 // Offset:  256 Size:     8
//   float hdrScale;                    // Offset:  264 Size:     4
//   float minScanlineEffect;           // Offset:  268 Size:     4
//   float2 edgeFalloffParms;           // Offset:  272 Size:     8 [unused]
//
// }
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16 [unused]
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16
//   float4 gameTick;                   // Offset: 1120 Size:    16
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16 [unused]
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16 [unused]
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16 [unused]
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4
//   uint numRefProbes;                 // Offset:    4 Size:     4
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4
//   uint enableDitheredShadow;         // Offset:  932 Size:     4
//   uint oitMaxEntries;                // Offset:  936 Size:     4 [unused]
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for gCullConstants
// {
//
//   struct CoreCullConstantsPack
//   {
//       
//       uint4 data[5];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    80
//
// }
//
// Resource bind info for lightConstants
// {
//
//   struct CoreLightConstantsPack
//   {
//       
//       uint4 data[15];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   240
//
// }
//
// Resource bind info for refProbeConstants
// {
//
//   struct CoreReflectionProbePack
//   {
//       
//       uint4 data[14];                // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:   224
//
// }
//
// Resource bind info for refProbeAttenuationConstants
// {
//
//   struct CoreReflectionProbeAttenuationPack
//   {
//       
//       uint4 data[6];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    96
//
// }
//
// Resource bind info for gSunShadowTree
// {
//
//   uint $Element;                     // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// samp0                             sampler      NA          NA             s0      1 
// bilinearSampler                   sampler      NA          NA             s1      1 
// samplerLinear                     sampler      NA          NA             s2      1 
// samplerLinearClamp                sampler      NA          NA             s4      1 
// ShadowSamplerComparisonState    sampler_c      NA          NA            s13      1 
// noiseTexture                      texture  float4          2d             t0      1 
// gEnvBRDFGeneric                   texture  float2          2d             t5      1 
// visibleLights                     texture    uint     2darray             t6      1 
// visibleProbes                     texture    uint     2darray             t7      1 
// gReflectionProbeArray             texture  float3   cubearray             t8      1 
// gSpotShadowmapArray               texture   float     2darray             t9      1 
// gOmniShadowmapArray               texture   float   cubearray            t10      1 
// gCullConstants                    texture  struct         r/o            t11      1 
// lightConstants                    texture  struct         r/o            t12      1 
// gSunShadowmapArray                texture   float     2darray            t13      1 
// refProbeConstants                 texture  struct         r/o            t15      1 
// refProbeAttenuationConstants      texture  struct         r/o            t16      1 
// gProbeXArray                      texture  float3          3d            t17      1 
// gProbeYArray                      texture  float3          3d            t18      1 
// gProbeZArray                      texture  float3          3d            t19      1 
// gCookieArray                      texture  float4     2darray            t20      1 
// gSunShadowTree                    texture  struct         r/o            t23      1 
// gTransShadowmapArray              texture   float     2darray            t31      1 
// $Globals                          cbuffer      NA          NA            cb0      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyz 
// COLOR                    1   x           1     NONE   float       
// TEXCOORD                 0    yz         1     NONE   float       
// TEXCOORD                 4   x           2     NONE    uint       
// TEXCOORD                 1   xyz         3     NONE   float   xyz 
// TEXCOORD                 2   xyz         4     NONE   float       
// TEXCOORD                 3   xyz         5     NONE   float       
// OFFPOSITION              0   xyz         6     NONE   float   xyz 
// TEXCOORD                 9   xy          7     NONE   float   xy  
// TEXCOORD                10   xyz         8     NONE   float   xyz 
// SV_IsFrontFace           0   x           9    FFACE    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.80811429, 0.80811429, 0, 0},
                              { 0, -1.000000, 0, 0},
                              { 0.60605717, 0.60605717, 0, 0},
                              { -0.71428573, 0, 0, 0},
                              { 0.40411428, -0.40411428, 0, 0},
                              { 0, 0.42857143, 0, 0},
                              { -0.20205714, -0.20205714, 0, 0},
                              { 0.14285715, 0, 0, 0} }
dcl_constantbuffer CB0[17], immediateIndexed
dcl_constantbuffer CB1[93], immediateIndexed
dcl_constantbuffer CB2[59], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s4, mode_default
dcl_sampler s13, mode_comparison
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2darray (uint,uint,uint,uint) t6
dcl_resource_texture2darray (uint,uint,uint,uint) t7
dcl_resource_texturecubearray (float,float,float,float) t8
dcl_resource_texture2darray (float,float,float,float) t9
dcl_resource_texturecubearray (float,float,float,float) t10
dcl_resource_structured t11, 80
dcl_resource_structured t12, 240
dcl_resource_texture2darray (float,float,float,float) t13
dcl_resource_structured t15, 224
dcl_resource_structured t16, 96
dcl_resource_texture3d (float,float,float,float) t17
dcl_resource_texture3d (float,float,float,float) t18
dcl_resource_texture3d (float,float,float,float) t19
dcl_resource_texture2darray (float,float,float,float) t20
dcl_resource_structured t23, 4
dcl_resource_texture2darray (float,float,float,float) t31
dcl_input_ps_siv linear noperspective v0.xyz, position
dcl_input_ps linear v3.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xy
dcl_input_ps linear v8.xyz
dcl_input_ps_sgv constant v9.x, is_front_face
dcl_output o0.xyzw
dcl_temps 45
mul r0.x, cb0[13].z, cb1[69].w
mad r0.x, v8.z, cb0[13].w, r0.x
sincos r0.x, null, r0.x
mad r0.x, r0.x, l(0.500000), l(0.500000)
log r0.x, r0.x
mul r0.x, r0.x, cb0[13].x
exp r0.x, r0.x
add_sat r0.y, -cb0[13].y, l(1.000000)
add r0.x, r0.y, r0.x
mul r0.y, cb0[14].z, cb1[69].w
mad r0.yz, v8.yyxy, cb0[14].wwww, r0.yyyy
sincos r0.yz, null, r0.yyzy
mad r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
log r0.yz, r0.yyzy
mul r0.yz, r0.yyzy, cb0[14].xxxx
exp r0.yz, r0.yyzy
add_sat r0.w, -cb0[14].y, l(1.000000)
add r0.yz, r0.wwww, r0.yyzy
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.x, r0.y, r0.x
mul r0.yw, cb0[15].zzzw, cb1[69].wwww
mad r0.yw, v7.xxxy, cb0[16].xxxy, r0.yyyw
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.ywyy, t0.yxzw, s1
mad_sat r0.x, r0.x, r0.z, r0.y
movc r0.yzw, v9.xxxx, v3.xxyz, -v3.xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r1.xyz, r0.yzwy, r1.xxxx
mul r0.y, |r1.z|, cb0[15].y
log r0.y, r0.y
mul r0.y, r0.y, cb0[15].x
exp r0.y, r0.y
min r0.y, r0.y, l(1.000000)
add r0.z, -cb0[16].w, l(1.000000)
mad r0.z, r0.y, r0.z, cb0[16].w
mul r0.x, r0.z, r0.x
mul r0.x, r0.x, cb0[16].z
ftou r0.zw, v0.xxxy
ge r2.x, v0.z, l(0.984375)
mul r2.y, v0.z, l(1.01587307)
mad r2.z, v0.z, l(64.000000), l(-63.000000)
movc r2.x, r2.x, r2.z, r2.y
max r2.x, r2.x, l(0.00000001)
rcp r2.x, r2.x
dp3 r2.y, -v6.xyzx, -v6.xyzx
rsq r2.y, r2.y
mul r3.xyz, r2.yyyy, -v6.xyzx
ine r2.z, cb1[92].x, l(0)
utof r4.xy, r0.wzww
dp2 r2.w, r4.yxyy, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.xw, r2.xxxw, l(0.00781250, 0.000000, 0.000000, 52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r5.x, r6.x, r2.w
dp2 r2.w, r4.xyxx, l(0.06711056, 0.00583715, 0.000000, 0.000000)
frc r2.w, r2.w
mul r2.w, r2.w, l(52.982918)
frc r2.w, r2.w
mad r2.w, r2.w, l(6.28318548), cb1[70].w
sincos r4.x, r7.x, r2.w
dp3_sat r2.w, r1.xyzx, r3.xyzx
dp3 r3.w, -r3.xyzx, r1.xyzx
add r3.w, r3.w, r3.w
mad r8.xyz, r1.xyzx, -r3.wwww, -r3.xyzx
mul r4.yz, r2.wwww, l(0.000000, 264.862640, 498.346863, 0.000000)
mad r3.w, r2.w, l(0.84525073), l(0.15474926)
mul r5.zw, r3.wwww, l(0.000000, 0.000000, 0.84525073, 0.15474926)
dp3 r3.w, r1.xyzx, cb2[17].xyzx
mov_sat r4.w, r3.w
ge r6.w, l(0.000000), r4.w
if_nz r6.w
  mov r7.y, l(0)
endif 
if_z r6.w
  mul r9.xyz, v6.yyyy, cb2[29].xyzx
  mad r9.xyz, v6.xxxx, cb2[28].xyzx, r9.xyzx
  mad r9.xyz, v6.zzzz, cb2[30].xyzx, r9.xyzx
  add r9.xyz, r9.xyzx, cb2[31].xyzx
  add r6.w, r9.z, -cb2[17].w
  mad r6.w, -r6.w, l(0.00006104), l(1.000000)
  mov_sat r7.z, r6.w
  eq r7.z, r6.w, r7.z
  if_nz r7.z
    mov r7.zw, l(0,0,0,0)
    loop 
      ge r9.w, r7.z, l(3.000000)
      breakc_nz r9.w
      ftou r9.w, r7.z
      add r10.xy, r9.xyxx, -cb2[r9.w + 20].xyxx
      max r10.x, |r10.y|, |r10.x|
      mul r7.w, r10.x, cb2[r9.w + 20].z
      lt r9.w, r7.w, l(1.000000)
      if_nz r9.w
        break 
      endif 
      add r7.z, r7.z, l(1.000000)
      mov r7.w, l(0)
    endloop 
  else 
    mov r7.zw, l(0,0,3.000000,0)
  endif 
  ge r9.w, r7.z, l(3.000000)
  if_nz r9.w
    mul r10.xyz, l(128.000000, 0.500000, 0.500000, 0.000000), cb2[27].zxyz
    rcp r11.xz, r10.xxxx
    mov r11.y, -r11.z
    mad r10.xyz, r9.xyxx, r11.xyzx, r10.yzyy
    add r11.xyz, l(-0.00781250, -0.00781250, -0.00781250, 0.000000), cb2[27].xyxx
    max r10.xyz, r10.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r10.xyz, r11.xyzx, r10.xyzx
    mul r11.xy, r10.zyzz, cb2[32].xxxx
    round_ni r11.xy, r11.xyxx
    mul r10.w, r11.y, cb2[27].x
    mad r10.w, r10.w, cb2[32].x, r11.x
    ftou r10.w, r10.w
    iadd r10.w, r10.w, cb2[32].y
    ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.x, r10.w, l(0), t23.xxxx
    and r11.y, r11.x, l(0x40000000)
    ishl r11.z, r11.x, l(2)
    if_z r11.y
      and r11.y, r11.x, l(0x01ffffff)
      iadd r12.x, r10.w, r11.y
      ushr r10.w, r11.x, l(25)
      utof r10.w, r10.w
      mul r10.xyz, r10.wwww, r10.xyzx
      frc r10.xyz, r10.xyzx
      mul r10.xyz, r10.xyzx, l(128.000000, 128.000000, 128.000000, 0.000000)
      ftou r10.xyz, r10.xyzx
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.x, l(0), t23.xxxx
      ushr r11.xy, r10.zyzz, l(6, 6, 0, 0)
      and r10.w, r12.z, l(0xc0000000)
      iadd r11.w, r12.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r11.w, r11.w, l(0), t23.xxxx
      movc r11.y, r11.y, r12.z, r11.w
      ushr r11.w, r11.y, l(13)
      movc r11.x, r11.x, r11.w, r11.y
      and r11.x, r11.x, l(8191)
      iadd r13.x, r11.x, r12.x
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
      mov r12.y, l(0)
      mov r13.y, l(1)
      movc r11.xyw, r10.wwww, r12.xyxz, r13.xyxz
      movc r13.yz, r10.wwww, l(0,6,1,0), l(0,5,2,0)
      ushr r14.xy, r10.zyzz, r13.yyyy
      and r14.xy, r14.xyxx, l(1, 1, 0, 0)
      and r12.w, r11.w, l(0xc0000000)
      iadd r13.y, r11.x, l(1)
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.y, r13.y, l(0), t23.xxxx
      movc r13.y, r14.y, r11.w, r13.y
      ushr r14.y, r13.y, l(13)
      movc r13.y, r14.x, r14.y, r13.y
      and r13.y, r13.y, l(8191)
      iadd r13.x, r11.x, r13.y
      ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.w, r13.x, l(0), t23.xxxx
      movc r11.xyw, r12.wwww, r11.xyxw, r13.xzxw
      movc r11.xyw, r10.wwww, r12.xyxz, r11.xyxw
      and r10.w, r11.w, l(0xc0000000)
      if_z r10.w
        iadd r10.w, -r11.y, l(6)
        ushr r12.xy, r10.zyzz, r10.wwww
        or r10.w, r11.w, l(0x40000000)
        bfi r12.y, l(1), l(1), r12.y, l(0)
        bfi r12.x, l(1), l(0), r12.x, r12.y
        imul null, r12.x, r12.x, l(10)
        ushr r10.w, r10.w, r12.x
        and r10.w, r10.w, l(1023)
        iadd r12.x, r10.w, r11.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.w, r12.x, l(0), t23.xxxx
        iadd r12.yz, r11.yyyy, l(0, 1, 2, 0)
        iadd r10.w, -r12.y, l(6)
        ushr r13.xy, r10.zyzz, r10.wwww
        and r10.w, r12.w, l(0xc0000000)
        or r11.y, r12.w, l(0x40000000)
        bfi r13.y, l(1), l(1), r13.y, l(0)
        bfi r13.x, l(1), l(0), r13.x, r13.y
        imul null, r13.x, r13.x, l(10)
        ushr r11.y, r11.y, r13.x
        and r11.y, r11.y, l(1023)
        iadd r13.x, r11.y, r12.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r13.z, r13.x, l(0), t23.xxxx
        mov r13.y, r12.z
        movc r13.xyz, r10.wwww, r12.xywx, r13.xyzx
        iadd r11.y, -r13.y, l(6)
        ushr r12.yz, r10.zzyz, r11.yyyy
        and r11.y, r13.z, l(0xc0000000)
        or r13.y, r13.z, l(0x40000000)
        bfi r12.z, l(1), l(1), r12.z, l(0)
        bfi r12.y, l(1), l(0), r12.y, r12.z
        imul null, r12.y, r12.y, l(10)
        ushr r12.y, r13.y, r12.y
        and r12.y, r12.y, l(1023)
        iadd r14.x, r12.y, r13.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r14.y, r14.x, l(0), t23.xxxx
        movc r12.yz, r11.yyyy, r13.xxzx, r14.xxyx
        movc r11.xw, r10.wwww, r12.xxxw, r12.yyyz
      endif 
      and r10.w, r11.w, l(0xc0000000)
      if_z r10.w
        ubfe r11.y, l(14), l(15), r11.w
        utof r11.y, r11.y
        mul r11.y, r11.y, cb2[27].w
        mul r11.y, r11.y, l(0.00006104)
        and r12.xy, r11.wwww, l(0x00007fff, 0x20000000, 0, 0)
        utof r12.x, r12.x
        mul r12.x, r12.x, cb2[27].w
        mul r12.x, r12.x, l(0.00003052)
        and r12.z, r10.y, l(3)
        iadd r12.z, r11.x, r12.z
        iadd r12.z, r12.z, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r12.z, r12.z, l(0), t23.xxxx
        bfi r13.xyz, l(2, 2, 1, 0), l(3, 1, 4, 0), r10.xyzx, l(0, 0, 0, 0)
        ushr r10.x, r12.z, r13.x
        and r10.x, r10.x, l(255)
        utof r10.x, r10.x
        mul r10.x, r12.x, r10.x
        mad r10.x, r10.x, l(0.00392157), r11.y
        iadd r10.y, r13.y, l(1)
        ubfe r10.z, l(1), l(1), r10.z
        iadd r10.y, r10.z, r10.y
        iadd r10.y, r10.y, r11.x
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(0), t23.xxxx
        ushr r10.y, r10.y, r13.z
        and r10.y, r10.y, l(0x0000ffff)
        utof r10.y, r10.y
        mul r10.y, r12.x, r10.y
        mad r10.y, r10.y, l(0.00001526), r11.y
        movc r11.z, r12.y, r10.x, r10.y
      else 
        and r10.x, r11.w, l(0x80000000)
        iadd r10.y, r11.x, l(1)
        ld_structured_indexable(structured_buffer, stride=4)(mixed,mixed,mixed,mixed) r10.y, r10.y, l(0), t23.xxxx
        movc r10.x, r10.x, r10.y, l(0)
        ishl r10.y, r11.w, l(2)
        ushr r10.z, r10.x, l(16)
        and r10.x, r10.x, l(0x0000ffff)
        f16tof32 r10.xz, r10.xxzx
        mad r10.y, r9.x, r10.z, r10.y
        mad r10.x, r9.y, r10.x, r10.y
        movc r11.z, r10.w, r10.x, r11.z
      endif 
    endif 
    mad r9.z, -cb2[27].z, l(2.000000), r9.z
    lt r9.z, r11.z, r9.z
    movc r7.y, r9.z, l(0), l(1.000000)
  endif 
  if_z r9.w
    if_z cb2[58].y
      ftou r9.z, r7.z
      add r10.xy, r9.xyxx, -cb2[r9.z + 20].xyxx
      mul r9.zw, r10.xxxy, cb2[r9.z + 20].zzzz
      mad r10.xy, r9.zwzz, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      itof r9.z, cb2[26].y
      add r10.z, r7.z, r9.z
      sample_c_lz_indexable(texture2darray)(float,float,float,float) r9.z, r10.xyzx, t13.xxxx, s13, r6.w
      sample_l_indexable(texture2darray)(float,float,float,float) r9.w, r10.xyzx, t31.yzwx, s0, l(0.000000)
      add r9.z, r9.w, r9.z
      add_sat r9.z, r9.z, l(-1.000000)
      mul r9.w, r9.z, r9.z
      mul r7.y, r9.z, r9.w
    endif 
    if_nz cb2[58].y
      mov r10.x, -r5.x
      ftou r9.z, r7.z
      add r7.z, r7.z, l(1.000000)
      min r7.z, r7.z, l(2.000000)
      add r7.w, -r7.w, l(1.000000)
      mul r7.w, r7.w, l(28.000000)
      ftou r7.zw, r7.zzzw
      add r11.xy, r9.xyxx, -cb2[r9.z + 20].xyxx
      mul r11.xy, r11.xyxx, cb2[r9.z + 20].zzzz
      mad r11.xy, r11.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r9.xy, r9.xyxx, -cb2[r7.z + 20].xyxx
      mul r9.xy, r9.xyxx, cb2[r7.z + 20].zzzz
      mad r9.xy, r9.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      mov r10.y, r6.x
      mov r10.z, r5.x
      mov r9.w, l(0)
      mov r10.w, l(0)
      loop 
        uge r11.z, r10.w, l(8)
        breakc_nz r11.z
        ult r11.z, r7.w, r10.w
        movc r12.xy, r11.zzzz, r9.xyxx, r11.xyxx
        movc r11.w, r11.z, cb2[r7.z + 20].w, cb2[r9.z + 20].w
        movc r11.z, r11.z, r7.z, r9.z
        dp2 r13.x, icb[r10.w + 0].yxyy, r10.xyxx
        dp2 r13.y, icb[r10.w + 0].yxyy, r10.yzyy
        mad r12.xy, r13.xyxx, r11.wwww, r12.xyxx
        iadd r11.z, r11.z, cb2[26].y
        utof r12.z, r11.z
        sample_c_lz_indexable(texture2darray)(float,float,float,float) r11.z, r12.xyzx, t13.xxxx, s13, r6.w
        sample_l_indexable(texture2darray)(float,float,float,float) r11.w, r12.xyzx, t31.yzwx, s0, l(0.000000)
        add r11.z, r11.w, r11.z
        add_sat r11.z, r11.z, l(-1.000000)
        mad r9.w, r11.z, l(0.125000), r9.w
        iadd r10.w, r10.w, l(1)
      endloop 
      mul r6.w, r9.w, r9.w
      mul r7.y, r9.w, r6.w
    endif 
  endif 
endif 
lt r6.w, l(0.000000), r4.w
if_nz r6.w
  lt r6.w, l(0.000000), r7.y
  if_nz r6.w
    mul r6.w, r4.w, cb2[18].w
    if_nz cb2[23].x
      add r9.xyz, v6.xyzx, cb1[24].xyzx
      mov r9.w, l(1.000000)
      dp4 r7.z, cb2[24].xyzw, r9.xyzw
      dp4 r7.w, cb2[25].xyzw, r9.xyzw
      frc r9.xy, r7.zwzz
      iadd r7.z, l(-1), cb2[23].x
      utof r9.z, r7.z
      sample_l_indexable(texture2darray)(float,float,float,float) r9.xyz, r9.xyzx, t20.xyzw, s2, l(0.000000)
      add r9.xyz, r9.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      mad r9.xyz, cb2[23].yyyy, r9.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r9.xyz, r9.xyzx, cb2[18].xyzx
    else 
      mov r9.xyz, cb2[18].xyzx
    endif 
    ushr r7.z, cb2[53].x, l(16)
    ult r7.w, l(0), r7.z
    and r7.w, r2.z, r7.w
    if_nz r7.w
      iadd r7.z, r7.z, cb2[0].x
      iadd r7.z, r7.z, l(-1)
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xyzw, r7.z, l(68), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.z, l(84), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r7.z, l(132), t12.xyzw
      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r7.z, l(148), t12.xyzw
      mad r9.w, |r3.w|, l(-0.200000), l(0.400000)
      mad r14.xyz, r1.xyzx, r9.wwww, v6.xyzx
      mov r14.w, l(1.000000)
      dp4 r10.x, r10.xyzw, r14.xyzw
      dp4 r10.y, r11.xyzw, r14.xyzw
      mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      add r10.xy, r13.zwzz, r10.xyxx
      mul r10.xy, r13.xyxx, r10.xyxx
      div r10.zw, r7.wwww, r12.xxxz
      add r11.xy, -r10.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
      ge r11.xy, r10.xyxx, r11.xyxx
      ge r10.zw, r10.zzzw, r10.xxxy
      or r10.zw, r10.zzzw, r11.xxxy
      or r9.w, r10.w, r10.z
      if_z r9.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.z, l(28), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.z, l(100), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.zw, r7.z, l(164), t12.xxxy
        dp4 r7.z, r11.xyzw, r14.xyzw
        mov_sat r10.xy, r10.xyxx
        mad r11.xy, r10.xyxx, r12.xzxx, r12.ywyy
        add r7.z, r10.z, r7.z
        div r7.z, r7.z, r10.w
        max r7.z, r7.z, l(0.00006104)
        and r9.w, r9.w, l(0x0000ffff)
        if_nz cb2[58].y
          mov r10.x, -r5.x
          utof r12.z, r9.w
          mov r10.y, r6.x
          mov r10.z, r5.x
          mov r10.w, l(0)
          mov r11.w, l(0)
          loop 
            ige r12.w, r11.w, l(8)
            breakc_nz r12.w
            dp2 r13.x, icb[r11.w + 0].yxyy, r10.xyxx
            dp2 r13.y, icb[r11.w + 0].yxyy, r10.yzyy
            mad r12.xy, r13.xyxx, r7.wwww, r11.xyxx
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.x, r12.xyzx, t9.xxxx, s13, r7.z
            mad r10.w, r12.x, l(0.125000), r10.w
            iadd r11.w, r11.w, l(1)
          endloop 
        else 
          utof r11.z, r9.w
          sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r11.xyzx, t9.xxxx, s13, r7.z
        endif 
        mul r7.z, r10.w, r10.w
        mul r7.z, r10.w, r7.z
      else 
        mov r7.z, l(1.000000)
      endif 
      mul r7.y, r7.z, r7.y
    else 
      and r7.z, cb2[53].x, l(0x0000ffff)
      ult r7.w, l(0), r7.z
      not r9.w, r2.z
      and r7.w, r7.w, r9.w
      if_nz r7.w
        iadd r7.z, r7.z, cb2[0].x
        iadd r7.z, r7.z, l(-1)
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r7.w, r7.z, l(52), t12.xxxx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.xyzw, r7.z, l(68), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.z, l(84), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r12.xyzw, r7.z, l(132), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r13.xyzw, r7.z, l(148), t12.xyzw
        mad r9.w, |r3.w|, l(-0.200000), l(0.400000)
        mad r14.xyz, r1.xyzx, r9.wwww, v6.xyzx
        mov r14.w, l(1.000000)
        dp4 r10.x, r10.xyzw, r14.xyzw
        dp4 r10.y, r11.xyzw, r14.xyzw
        mad r10.xy, r10.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
        add r10.xy, r13.zwzz, r10.xyxx
        mul r10.xy, r13.xyxx, r10.xyxx
        div r10.zw, r7.wwww, r12.xxxz
        add r11.xy, -r10.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
        ge r11.xy, r10.xyxx, r11.xyxx
        ge r10.zw, r10.zzzw, r10.xxxy
        or r10.zw, r10.zzzw, r11.xxxy
        or r9.w, r10.w, r10.z
        if_z r9.w
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r9.w, r7.z, l(28), t12.xxxx
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r11.xyzw, r7.z, l(100), t12.xyzw
          ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r10.zw, r7.z, l(164), t12.xxxy
          dp4 r7.z, r11.xyzw, r14.xyzw
          mov_sat r10.xy, r10.xyxx
          mad r11.xy, r10.xyxx, r12.xzxx, r12.ywyy
          add r7.z, r10.z, r7.z
          div r7.z, r7.z, r10.w
          max r7.z, r7.z, l(0.00006104)
          and r9.w, r9.w, l(0x0000ffff)
          if_nz cb2[58].y
            mov r10.x, -r5.x
            utof r12.z, r9.w
            mov r10.y, r6.x
            mov r10.z, r5.x
            mov r10.w, l(0)
            mov r11.w, l(0)
            loop 
              ige r12.w, r11.w, l(8)
              breakc_nz r12.w
              dp2 r13.x, icb[r11.w + 0].yxyy, r10.xyxx
              dp2 r13.y, icb[r11.w + 0].yxyy, r10.yzyy
              mad r12.xy, r13.xyxx, r7.wwww, r11.xyxx
              sample_c_lz_indexable(texture2darray)(float,float,float,float) r12.x, r12.xyzx, t9.xxxx, s13, r7.z
              mad r10.w, r12.x, l(0.125000), r10.w
              iadd r11.w, r11.w, l(1)
            endloop 
          else 
            utof r11.z, r9.w
            sample_c_lz_indexable(texture2darray)(float,float,float,float) r10.w, r11.xyzx, t9.xxxx, s13, r7.z
          endif 
          mul r7.z, r10.w, r10.w
          mul r7.z, r10.w, r7.z
        else 
          mov r7.z, l(1.000000)
        endif 
        mul r7.y, r7.z, r7.y
      endif 
    endif 
    mad r7.z, -r2.w, l(0.500000), l(1.000000)
    mad r7.z, -r4.w, r7.z, l(1.000000)
    mul r7.z, r7.z, r7.z
    mad r7.z, -r7.z, l(0.620000), l(0.620000)
    add r7.z, -r4.w, r7.z
    mad r7.z, r7.z, l(0.01269042), r4.w
    mul r7.z, r7.y, r7.z
    mul r10.xyz, r9.xyzx, r7.zzzz
    lt r3.w, l(0.000000), r3.w
    mad r11.xyz, -v6.xyzx, r2.yyyy, cb2[17].xyzx
    dp3 r2.y, r11.xyzx, r11.xyzx
    rsq r2.y, r2.y
    mul r11.xyz, r2.yyyy, r11.xyzx
    dp3 r2.y, r11.xyzx, r3.xyzx
    dp3 r7.z, r1.xyzx, r11.xyzx
    mul r7.z, |r7.z|, |r7.z|
    mad r7.z, r7.z, l(-0.99983895), l(1.000000)
    mad r4.w, r4.w, r5.z, r5.w
    mul r7.z, r7.z, r7.z
    mul r4.w, r4.w, r7.z
    rcp r4.w, r4.w
    mul r4.w, r6.w, r4.w
    mul r4.w, r4.w, r7.y
    mul r4.w, r4.w, l(0.00004026)
    mul r7.yzw, r9.xxyz, r4.wwww
    add_sat r2.y, -r2.y, l(1.000000)
    mul r6.w, r2.y, r2.y
    mul r6.w, r6.w, r6.w
    mul r2.y, r2.y, r6.w
    mul r2.y, r2.y, r4.w
    mul r9.xyz, r9.yzxy, r2.yyyy
    mov r10.w, r9.z
    and r10.xyzw, r3.wwww, r10.xyzw
    mov r9.zw, r7.yyyz
    and r9.xyzw, r3.wwww, r9.xyzw
    and r2.y, r3.w, r7.w
  else 
    mov r10.xyzw, l(0,0,0,0)
    mov r9.xyzw, l(0,0,0,0)
    mov r2.y, l(0)
  endif 
else 
  mov r10.xyzw, l(0,0,0,0)
  mov r9.xyzw, l(0,0,0,0)
  mov r2.y, l(0)
endif 
min r2.x, r2.x, l(15.000000)
ftou r2.x, r2.x
ushr r11.xy, r0.zwzz, l(6, 6, 0, 0)
ishl r11.z, r2.x, l(4)
mov r12.x, -r5.x
not r0.z, r2.z
mad r0.w, -r2.w, l(0.500000), l(1.000000)
mov r13.xy, l(0,0,0,0)
mov r14.w, l(0)
mov r15.xyz, v6.xyzx
mov r15.w, l(1.000000)
mov r16.w, l(1.000000)
mov r12.z, r5.x
mov r17.w, l(1.000000)
mov r18.z, l(1.000000)
mov r19.w, l(1.000000)
mov r12.yw, r6.xxxx
mov r5.y, r12.w
mov r20.w, l(1.000000)
mov r6.y, r12.x
mov r6.z, r5.x
mov r21.w, l(1.000000)
mov r22.x, r6.x
mov r22.y, r12.x
mov r22.z, r5.x
mov r23.x, r6.x
mov r23.y, r12.x
mov r23.z, r5.x
mov r24.x, r6.x
mov r24.y, r12.x
mov r24.z, r5.x
mov r7.yzw, r10.xxyz
mov r25.x, r10.w
mov r25.yz, r9.xxyx
mov r26.xy, r9.zwzz
mov r26.z, r2.y
mov r2.x, cb2[58].y
mov r3.w, l(0)
loop 
  uge r4.w, r3.w, cb2[0].x
  breakc_nz r4.w
  ushr r13.z, r3.w, l(5)
  iadd r14.xyz, r11.xyzx, r13.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r14.xyzw, t6.yzwx
  mov r14.xyz, r7.yzwy
  mov r27.xyz, r25.xyzx
  mov r28.xyz, r26.xyzx
  mov r6.w, r2.x
  mov r11.w, r4.w
  loop 
    breakc_z r11.w
    firstbit_lo r13.z, r11.w
    ishl r13.w, l(1), r13.z
    and r18.w, r11.w, r13.w
    if_nz r18.w
      xor r11.w, r11.w, r13.w
      iadd r13.z, r3.w, r13.z
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r29.xyzw, r13.z, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r30.xy, r13.z, l(16), t11.xyxx
      add r29.xyz, r29.xyzx, -v6.xyzx
      mov r30.z, r29.w
      lt r29.xyz, |r29.xyzx|, r30.zxyz
      and r13.w, r29.y, r29.x
      and r13.w, r29.z, r13.w
      if_nz r13.w
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r13.z, l(0), t12.wxyz
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r13.z, l(16), t12.zxyw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r13.z, l(32), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r13.z, l(48), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r13.z, l(64), t12.yzwx
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r13.z, l(80), t12.xyzw
        ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r13.z, l(96), t12.yzwx
        ubfe r13.w, l(3), l(24), r30.w
        switch r13.w
          case l(4)
          lt r13.w, l(0.000000), r35.x
          mov r36.xy, r34.zwzz
          mov r36.z, r35.w
          mad r37.xyz, -r36.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), r29.yzwy
          add r38.xyz, r37.xyzx, -v6.xyzx
          dp3 r18.w, r36.xyzx, r38.xyzx
          div_sat r22.w, -r18.w, r35.x
          mad r39.xyz, r22.wwww, r36.xyzx, r37.xyzx
          movc r39.xyz, r13.wwww, r39.xyzx, r29.yzwy
          add r39.xyz, r39.xyzx, -v6.xyzx
          dp3 r23.w, r39.xyzx, r39.xyzx
          rsq r24.w, r23.w
          mul r39.xyz, r24.wwww, r39.xyzx
          dp3 r24.w, r1.xyzx, r39.xyzx
          mov_sat r25.w, r24.w
          lt r26.w, l(0.000000), r25.w
          if_nz r26.w
            sqrt r26.w, r23.w
            mul r27.w, r32.x, r32.x
            div r23.w, r27.w, r23.w
            min r23.w, r23.w, l(1.000000)
            mad_sat r39.xy, r26.wwww, r31.xzxx, r31.ywyy
            mul r39.zw, r39.xxxy, r39.xxxy
            mad r39.xy, r39.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
            mul r39.xy, r39.xyxx, r39.zwzz
            mul r23.w, r23.w, r39.x
            mul r23.w, r39.y, r23.w
            lt r26.w, l(0.000000), r23.w
            if_nz r26.w
              ubfe r26.w, l(3), l(27), r30.w
              ine r26.w, r26.w, l(1)
              if_nz r26.w
                mad r26.w, |r24.w|, l(-0.200000), l(0.400000)
                mad r39.xyz, r1.xyzx, r26.wwww, v6.xyzx
                add r39.xyz, -r33.xyzx, r39.xyzx
                max r26.w, |r39.z|, |r39.y|
                max r26.w, r26.w, |r39.x|
                div r26.w, r34.x, r26.w
                add r26.w, r34.y, r26.w
                dp3 r27.w, r39.xyzx, r39.xyzx
                rsq r27.w, r27.w
                max r26.w, r26.w, l(0.00006104)
                and r28.w, r30.w, l(0x0000ffff)
                utof r40.w, r28.w
                mov r28.w, l(0)
                mov r36.w, l(0)
                loop 
                  ige r37.w, r36.w, l(8)
                  breakc_nz r37.w
                  dp2 r41.y, icb[r36.w + 0].yxyy, r12.xyxx
                  dp2 r41.z, icb[r36.w + 0].yxyy, r12.yzyy
                  mul r41.yz, r32.yyyy, r41.yyzy
                  mul r41.x, r7.x, r41.y
                  mul r41.w, r4.x, r41.y
                  mad r40.xyz, r39.xyzx, r27.wwww, r41.xzwx
                  sample_c_lz_indexable(texturecubearray)(float,float,float,float) r37.w, r40.xyzw, t10.xxxx, s13, r26.w
                  mad r28.w, r37.w, l(0.125000), r28.w
                  iadd r36.w, r36.w, l(1)
                endloop 
              else 
                mov r28.w, l(1.000000)
              endif 
              mul r23.w, r23.w, r28.w
              lt r26.w, l(0.000000), r23.w
              if_nz r26.w
                mul r26.w, r30.x, l(0.00004026)
                dp3 r27.w, r36.xyzx, r8.xyzx
                dp3 r36.w, r8.xyzx, r38.xyzx
                mad r37.w, -r27.w, r27.w, r35.x
                mad r18.w, r27.w, r36.w, -r18.w
                div_sat r18.w, r18.w, r37.w
                div r27.w, r37.w, r35.x
                mul r27.w, r27.w, l(10.000000)
                min r27.w, r27.w, l(1.000000)
                add r18.w, -r22.w, r18.w
                mad r18.w, r27.w, r18.w, r22.w
                mad r36.xyz, r18.wwww, r36.xyzx, r37.xyzx
                movc r36.xyz, r13.wwww, r36.xyzx, r29.yzwy
                add r36.xyz, r36.xyzx, -v6.xyzx
                dp3 r13.w, r36.xyzx, r36.xyzx
                rsq r13.w, r13.w
                mul r37.xyz, r13.wwww, r36.xyzx
                ubfe r18.w, l(4), l(16), r30.w
                ult r22.w, l(0), r18.w
                and r22.w, r2.z, r22.w
                if_nz r22.w
                  iadd r18.w, r18.w, cb2[0].x
                  iadd r18.w, r18.w, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r22.w, r18.w, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r18.w, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r18.w, l(116), t12.xyzw
                  mad r27.w, |r24.w|, l(-0.200000), l(0.400000)
                  mad r16.xyz, r1.xyzx, r27.wwww, v6.xyzx
                  dp4 r27.w, r38.xyzw, r16.xyzw
                  dp4 r36.w, r39.xyzw, r16.xyzw
                  lt r37.w, r36.w, r27.w
                  if_z r37.w
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r18.w, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r18.w, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r18.w, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r18.w, l(148), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xy, r18.w, l(164), t12.xyxx
                    dp4 r38.x, r38.xyzw, r16.xyzw
                    dp4 r38.y, r39.xyzw, r16.xyzw
                    div r16.xy, r38.xyxx, r36.wwww
                    mad r16.xy, r16.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r16.xy, r41.zwzz, r16.xyxx
                    mul r16.xy, r41.xyxx, r16.xyxx
                    div r38.xy, r22.wwww, r40.xzxx
                    add r38.zw, -r38.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                    ge r38.zw, r16.xxxy, r38.zzzw
                    ge r38.xy, r38.xyxx, r16.xyxx
                    or r38.xy, r38.xyxx, r38.zwzz
                    or r16.z, r38.y, r38.x
                    mov_sat r16.xy, r16.xyxx
                    mad r38.xy, r16.xyxx, r40.xzxx, r40.ywyy
                    mul r16.x, r36.w, r42.y
                    mad r16.y, r42.x, r36.w, r27.w
                    div r16.x, r16.y, r16.x
                  else 
                    mov r16.z, l(-1)
                  endif 
                  or r16.y, r37.w, r16.z
                  if_z r16.y
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.y, r18.w, l(28), t12.xxxx
                    max r16.x, r16.x, l(0.00006104)
                    and r16.y, r16.y, l(0x0000ffff)
                    if_nz r6.w
                      utof r39.z, r16.y
                      mov r16.z, l(0)
                      mov r18.w, l(0)
                      loop 
                        ige r27.w, r18.w, l(8)
                        breakc_nz r27.w
                        dp2 r40.x, icb[r18.w + 0].yxyy, r12.xwxx
                        dp2 r40.y, icb[r18.w + 0].xyxx, r5.xyxx
                        mad r39.xy, r40.xyxx, r22.wwww, r38.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r27.w, r39.xyzx, t9.xxxx, s13, r16.x
                        mad r16.z, r27.w, l(0.125000), r16.z
                        iadd r18.w, r18.w, l(1)
                      endloop 
                    else 
                      utof r38.z, r16.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r16.z, r38.xyzx, t9.xxxx, s13, r16.x
                    endif 
                    mul r16.x, r16.z, r16.z
                    mul r16.x, r16.z, r16.x
                  else 
                    mov r16.x, l(1.000000)
                  endif 
                  mul r23.w, r16.x, r23.w
                else 
                  ubfe r16.x, l(4), l(20), r30.w
                  ult r16.y, l(0), r16.x
                  and r16.y, r0.z, r16.y
                  if_nz r16.y
                    iadd r16.x, r16.x, cb2[0].x
                    iadd r16.x, r16.x, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.y, r16.x, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r16.x, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r16.x, l(116), t12.xyzw
                    mad r18.w, |r24.w|, l(-0.200000), l(0.400000)
                    mad r17.xyz, r1.xyzx, r18.wwww, v6.xyzx
                    dp4 r18.w, r38.xyzw, r17.xyzw
                    dp4 r22.w, r39.xyzw, r17.xyzw
                    lt r27.w, r22.w, r18.w
                    if_z r27.w
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r16.x, l(68), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r39.xyzw, r16.x, l(84), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r40.xyzw, r16.x, l(132), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r16.x, l(148), t12.xyzw
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xy, r16.x, l(164), t12.xyxx
                      dp4 r38.x, r38.xyzw, r17.xyzw
                      dp4 r38.y, r39.xyzw, r17.xyzw
                      div r17.xy, r38.xyxx, r22.wwww
                      mad r17.xy, r17.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                      add r17.xy, r41.zwzz, r17.xyxx
                      mul r17.xy, r41.xyxx, r17.xyxx
                      div r38.xy, r16.yyyy, r40.xzxx
                      add r38.zw, -r38.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                      ge r38.zw, r17.xxxy, r38.zzzw
                      ge r38.xy, r38.xyxx, r17.xyxx
                      or r38.xy, r38.xyxx, r38.zwzz
                      or r17.z, r38.y, r38.x
                      mov_sat r17.xy, r17.xyxx
                      mad r38.xy, r17.xyxx, r40.xzxx, r40.ywyy
                      mul r17.x, r22.w, r42.y
                      mad r17.y, r42.x, r22.w, r18.w
                      div r17.x, r17.y, r17.x
                    else 
                      mov r17.z, l(-1)
                    endif 
                    or r17.y, r27.w, r17.z
                    if_z r17.y
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r16.x, r16.x, l(28), t12.xxxx
                      max r17.x, r17.x, l(0.00006104)
                      and r16.x, r16.x, l(0x0000ffff)
                      if_nz r6.w
                        utof r39.z, r16.x
                        mov r17.yz, l(0,0,0,0)
                        loop 
                          ige r18.w, r17.z, l(8)
                          breakc_nz r18.w
                          dp2 r40.x, icb[r17.z + 0].xyxx, r6.xyxx
                          dp2 r40.y, icb[r17.z + 0].yxyy, r6.xzxx
                          mad r39.xy, r40.xyxx, r16.yyyy, r38.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r18.w, r39.xyzx, t9.xxxx, s13, r17.x
                          mad r17.y, r18.w, l(0.125000), r17.y
                          iadd r17.z, r17.z, l(1)
                        endloop 
                      else 
                        utof r38.z, r16.x
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r17.y, r38.xyzx, t9.xxxx, s13, r17.x
                      endif 
                      mul r16.x, r17.y, r17.y
                      mul r16.x, r17.y, r16.x
                    else 
                      mov r16.x, l(1.000000)
                    endif 
                    mul r23.w, r16.x, r23.w
                  endif 
                endif 
                mad r16.x, -r25.w, r0.w, l(1.000000)
                mul r16.x, r16.x, r16.x
                mad r16.x, -r16.x, l(0.620000), l(0.620000)
                add r16.x, -r25.w, r16.x
                mad r16.x, r16.x, l(0.01269042), r25.w
                mul r16.x, r23.w, r16.x
                mov r30.x, r29.x
                lt r16.y, l(0.000000), r24.w
                mad r38.xyz, r16.xxxx, r30.xyzx, r14.xyzx
                dp3_sat r16.x, r1.xyzx, r37.xyzx
                mad r36.xyz, r36.xyzx, r13.wwww, r3.xyzx
                dp3 r13.w, r36.xyzx, r36.xyzx
                rsq r13.w, r13.w
                mul r36.xyz, r13.wwww, r36.xyzx
                dp3 r13.w, r36.xyzx, r3.xyzx
                dp3 r17.x, r1.xyzx, r36.xyzx
                mul r17.x, |r17.x|, |r17.x|
                mad r17.x, r17.x, l(-0.99983895), l(1.000000)
                mad r17.z, r16.x, r5.z, r5.w
                mul r17.x, r17.x, r17.x
                mul r17.x, r17.z, r17.x
                rcp r17.x, r17.x
                mul r16.x, r26.w, r16.x
                mul r16.x, r16.x, r17.x
                mul r16.x, r23.w, r16.x
                mad r36.xyz, r16.xxxx, r30.xyzx, r28.xyzx
                add_sat r13.w, -r13.w, l(1.000000)
                mul r17.x, r13.w, r13.w
                mul r17.x, r17.x, r17.x
                mul r13.w, r13.w, r17.x
                mul r13.w, r13.w, r16.x
                mad r37.xyz, r13.wwww, r30.xyzx, r27.xyzx
                movc r14.xyz, r16.yyyy, r38.xyzx, r14.xyzx
                movc r27.xyz, r16.yyyy, r37.xyzx, r27.xyzx
                movc r28.xyz, r16.yyyy, r36.xyzx, r28.xyzx
              endif 
            endif 
          endif 
          break 
          case l(2)
          mov r36.xy, r32.zwzz
          mov r36.z, r33.w
          add r36.xyz, r36.xyzx, -v6.xyzx
          dp3 r13.w, r36.xyzx, r36.xyzx
          rsq r13.w, r13.w
          mul r37.xyz, r13.wwww, r36.xyzx
          dp3 r16.x, r1.xyzx, r37.xyzx
          mov_sat r16.y, r16.x
          lt r17.x, l(0.000000), r16.y
          if_nz r17.x
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r37.xyzw, r13.z, l(112), t12.yzwx
            ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.xyzw, r13.z, l(128), t12.zxyw
            mov r39.xyz, r37.xyzx
            mov r39.w, r38.y
            dp4 r17.x, r39.xyzw, r15.xyzw
            lt r17.z, r17.x, l(1.000000)
            if_nz r17.z
              mov r40.xyz, l(1.000000,1.000000,1.000000,0)
              mov r17.z, l(0)
            else 
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r41.xyzw, r13.z, l(172), t12.yzwx
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r42.xyzw, r13.z, l(188), t12.wxyz
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r43.xyzw, r13.z, l(204), t12.xyzw
              ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r18.w, r13.z, l(236), t12.xxxx
              add r44.xyz, r29.yzwy, -v6.xyzx
              mul r22.w, r32.x, r32.x
              dp3 r23.w, r44.xyzx, r44.xyzx
              div r22.w, r22.w, r23.w
              min r22.w, r22.w, l(1.000000)
              mad_sat r31.xy, r17.xxxx, r31.xzxx, r31.ywyy
              mul r31.zw, r31.xxxy, r31.xxxy
              mad r31.xy, r31.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
              mul r31.xy, r31.xyxx, r31.zwzz
              mul r22.w, r22.w, r31.x
              mul r22.w, r31.y, r22.w
              mov r33.w, r34.x
              dp4 r31.x, r33.xyzw, r15.xyzw
              mov r44.xyz, r34.yzwy
              mov r44.w, r35.w
              dp4 r31.y, r44.xyzw, r15.xyzw
              div r18.xy, r31.xyxx, r17.xxxx
              lt r17.x, r41.w, l(0.00048828)
              if_nz r17.x
                mov r42.y, r43.x
                mad_sat r31.xy, |r18.xyxx|, r42.zwzz, r42.xyxx
                mul r31.zw, r31.xxxy, r31.xxxy
                mad r31.xy, r31.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
                mul r31.xy, r31.xyxx, r31.zwzz
                mul r17.x, r31.y, r31.x
              else 
                mov r41.w, r42.y
                mul_sat r31.xyzw, |r18.yyxx|, r41.xyzw
                log r31.xyzw, r31.xyzw
                mul r31.xyzw, r31.xyzw, r42.xxxx
                exp r31.xyzw, r31.xyzw
                add r31.xy, r31.zwzz, r31.xyxx
                log r31.xy, r31.xyxx
                mul r31.xy, r31.xyxx, r43.xxxx
                exp r31.xy, r31.xyxx
                mul r23.w, r31.x, r42.z
                mad r24.w, r42.w, r31.y, l(-1.000000)
                mad r23.w, r42.w, r31.y, -r23.w
                div_sat r23.w, r24.w, r23.w
                mul r24.w, r23.w, r23.w
                mad r23.w, r23.w, l(-2.000000), l(3.000000)
                mul r17.x, r23.w, r24.w
              endif 
              mul r17.z, r17.x, r22.w
              and r17.x, r18.w, l(255)
              if_nz r17.x
                ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyz, r13.z, l(220), t12.xyzx
                dp3 r18.w, r43.yzwy, r18.xyzx
                dp3 r18.x, r31.xyzx, r18.xyzx
                frc r31.xy, r18.wxww
                iadd r17.x, r17.x, l(-1)
                utof r31.z, r17.x
                sample_l_indexable(texture2darray)(float,float,float,float) r40.xyz, r31.xyzx, t20.xyzw, s2, l(0.000000)
              else 
                mov r40.xyz, l(1.000000,1.000000,1.000000,0)
              endif 
            endif 
            mov r29.yz, r30.yyzy
            mul r18.xyw, r40.xyxz, r29.xyxz
            lt r17.x, l(0.000000), r17.z
            if_nz r17.x
              ubfe r17.x, l(3), l(27), r30.w
              ine r17.x, r17.x, l(1)
              if_nz r17.x
                mad r17.x, |r16.x|, l(-0.200000), l(0.400000)
                mad r19.xyz, r1.xyzx, r17.xxxx, v6.xyzx
                mov r37.xyz, r35.xyzx
                dp4 r17.x, r37.xyzw, r19.xyzw
                dp4 r22.w, r39.xyzw, r19.xyzw
                ge r23.w, r22.w, r17.x
                if_nz r23.w
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r38.y, r13.z, l(144), t12.xxxx
                  mov r33.w, r34.x
                  dp4 r29.x, r33.xyzw, r19.xyzw
                  mov r35.xyz, r34.yzwy
                  dp4 r29.y, r35.xyzw, r19.xyzw
                  div r19.xy, r29.xyxx, r22.wwww
                  mad_sat r19.xy, r19.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                  mad r19.xy, r19.xyxx, r38.zwzz, r38.xyxx
                  div r13.z, r17.x, r22.w
                  max r13.z, r13.z, l(0.00006104)
                  and r17.x, r30.w, l(0x0000ffff)
                  if_nz r6.w
                    utof r29.z, r17.x
                    mov r22.w, l(0)
                    mov r23.w, l(0)
                    loop 
                      ige r24.w, r23.w, l(8)
                      breakc_nz r24.w
                      dp2 r31.x, icb[r23.w + 0].xyxx, r22.xyxx
                      dp2 r31.y, icb[r23.w + 0].yxyy, r22.xzxx
                      mad r29.xy, r31.xyxx, r32.yyyy, r19.xyxx
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r24.w, r29.xyzx, t9.xxxx, s13, r13.z
                      mad r22.w, r24.w, l(0.125000), r22.w
                      iadd r23.w, r23.w, l(1)
                    endloop 
                  else 
                    utof r19.z, r17.x
                    sample_c_lz_indexable(texture2darray)(float,float,float,float) r22.w, r19.xyzx, t9.xxxx, s13, r13.z
                  endif 
                  mul r13.z, r22.w, r22.w
                  mul r13.z, r22.w, r13.z
                else 
                  mov r13.z, l(1.000000)
                endif 
              else 
                mov r13.z, l(1.000000)
              endif 
              mul r13.z, r13.z, r17.z
              lt r17.x, l(0.000000), r13.z
              if_nz r17.x
                mul r17.x, r30.x, l(0.00004026)
                ubfe r17.z, l(4), l(16), r30.w
                ult r19.x, l(0), r17.z
                and r19.x, r2.z, r19.x
                if_nz r19.x
                  iadd r17.z, r17.z, cb2[0].x
                  iadd r17.z, r17.z, l(-1)
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r17.z, l(52), t12.xxxx
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r17.z, l(68), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(84), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(100), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(116), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(132), t12.xyzw
                  ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r35.xyzw, r17.z, l(148), t12.xyzw
                  mad r19.y, |r16.x|, l(-0.200000), l(0.400000)
                  mad r20.xyz, r1.xyzx, r19.yyyy, v6.xyzx
                  dp4 r29.x, r29.xyzw, r20.xyzw
                  dp4 r29.y, r31.xyzw, r20.xyzw
                  dp4 r19.y, r32.xyzw, r20.xyzw
                  dp4 r19.z, r33.xyzw, r20.xyzw
                  lt r20.x, r19.z, r19.y
                  div r20.yz, r29.xxyx, r19.zzzz
                  mad r20.yz, r20.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
                  add r20.yz, r35.zzwz, r20.yyzy
                  mul r20.yz, r35.xxyx, r20.yyzy
                  div r29.xy, r19.xxxx, r34.xzxx
                  add r29.zw, -r29.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
                  ge r29.zw, r20.yyyz, r29.zzzw
                  ge r29.xy, r29.xyxx, r20.yzyy
                  or r29.xy, r29.xyxx, r29.zwzz
                  or r23.w, r29.y, r29.x
                  or r20.x, r20.x, r23.w
                  if_z r20.x
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r20.x, r17.z, l(28), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xy, r17.z, l(164), t12.xyxx
                    mov_sat r20.yz, r20.yyzy
                    mad r30.xy, r20.yzyy, r34.xzxx, r34.ywyy
                    mul r17.z, r19.z, r29.y
                    mad r19.y, r29.x, r19.z, r19.y
                    div r17.z, r19.y, r17.z
                    max r17.z, r17.z, l(0.00006104)
                    and r19.y, r20.x, l(0x0000ffff)
                    if_nz r6.w
                      utof r20.z, r19.y
                      mov r19.z, l(0)
                      mov r23.w, l(0)
                      loop 
                        ige r24.w, r23.w, l(8)
                        breakc_nz r24.w
                        dp2 r29.x, icb[r23.w + 0].xyxx, r23.xyxx
                        dp2 r29.y, icb[r23.w + 0].yxyy, r23.xzxx
                        mad r20.xy, r29.xyxx, r19.xxxx, r30.xyxx
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r17.z
                        mad r19.z, r20.x, l(0.125000), r19.z
                        iadd r23.w, r23.w, l(1)
                      endloop 
                    else 
                      utof r30.z, r19.y
                      sample_c_lz_indexable(texture2darray)(float,float,float,float) r19.z, r30.xyzx, t9.xxxx, s13, r17.z
                    endif 
                    mul r17.z, r19.z, r19.z
                    mul r17.z, r19.z, r17.z
                  else 
                    mov r17.z, l(1.000000)
                  endif 
                  mul r13.z, r13.z, r17.z
                else 
                  ubfe r17.z, l(4), l(20), r30.w
                  ult r19.x, l(0), r17.z
                  and r19.x, r0.z, r19.x
                  if_nz r19.x
                    iadd r17.z, r17.z, cb2[0].x
                    iadd r17.z, r17.z, l(-1)
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r19.x, r17.z, l(52), t12.xxxx
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r29.xyzw, r17.z, l(68), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r30.xyzw, r17.z, l(84), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r31.xyzw, r17.z, l(100), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r32.xyzw, r17.z, l(116), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r33.xyzw, r17.z, l(132), t12.xyzw
                    ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r34.xyzw, r17.z, l(148), t12.xyzw
                    mad r19.y, |r16.x|, l(-0.200000), l(0.400000)
                    mad r21.xyz, r1.xyzx, r19.yyyy, v6.xyzx
                    dp4 r20.x, r29.xyzw, r21.xyzw
                    dp4 r20.y, r30.xyzw, r21.xyzw
                    dp4 r19.y, r31.xyzw, r21.xyzw
                    dp4 r20.z, r32.xyzw, r21.xyzw
                    lt r21.x, r20.z, r19.y
                    div r20.xy, r20.xyxx, r20.zzzz
                    mad r20.xy, r20.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r20.xy, r34.zwzz, r20.xyxx
                    mul r20.xy, r34.xyxx, r20.xyxx
                    div r21.yz, r19.xxxx, r33.xxzx
                    add r29.xy, -r21.yzyy, l(1.000000, 1.000000, 0.000000, 0.000000)
                    ge r29.xy, r20.xyxx, r29.xyxx
                    ge r21.yz, r21.yyzy, r20.xxyx
                    or r21.yz, r21.yyzy, r29.xxyx
                    or r21.y, r21.z, r21.y
                    or r21.x, r21.x, r21.y
                    if_z r21.x
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.x, r17.z, l(28), t12.xxxx
                      ld_structured_indexable(structured_buffer, stride=240)(mixed,mixed,mixed,mixed) r21.yz, r17.z, l(164), t12.xxyx
                      mov_sat r20.xy, r20.xyxx
                      mad r29.xy, r20.xyxx, r33.xzxx, r33.ywyy
                      mul r17.z, r20.z, r21.z
                      mad r19.y, r21.y, r20.z, r19.y
                      div r17.z, r19.y, r17.z
                      max r17.z, r17.z, l(0.00006104)
                      and r19.y, r21.x, l(0x0000ffff)
                      if_nz r6.w
                        utof r20.z, r19.y
                        mov r21.xy, l(0,0,0,0)
                        loop 
                          ige r21.z, r21.y, l(8)
                          breakc_nz r21.z
                          dp2 r30.x, icb[r21.y + 0].xyxx, r24.xyxx
                          dp2 r30.y, icb[r21.y + 0].yxyy, r24.xzxx
                          mad r20.xy, r30.xyxx, r19.xxxx, r29.xyxx
                          sample_c_lz_indexable(texture2darray)(float,float,float,float) r20.x, r20.xyzx, t9.xxxx, s13, r17.z
                          mad r21.x, r20.x, l(0.125000), r21.x
                          iadd r21.y, r21.y, l(1)
                        endloop 
                      else 
                        utof r29.z, r19.y
                        sample_c_lz_indexable(texture2darray)(float,float,float,float) r21.x, r29.xyzx, t9.xxxx, s13, r17.z
                      endif 
                      mul r17.z, r21.x, r21.x
                      mul r17.z, r21.x, r17.z
                    else 
                      mov r17.z, l(1.000000)
                    endif 
                    mul r13.z, r13.z, r17.z
                  endif 
                endif 
                mad r17.z, -r16.y, r0.w, l(1.000000)
                mul r17.z, r17.z, r17.z
                mad r17.z, -r17.z, l(0.620000), l(0.620000)
                add r17.z, -r16.y, r17.z
                mad r17.z, r17.z, l(0.01269042), r16.y
                mul r17.z, r13.z, r17.z
                lt r16.x, l(0.000000), r16.x
                mad r20.xyz, r17.zzzz, r18.xywx, r14.xyzx
                mad r29.xyz, r36.xyzx, r13.wwww, r3.xyzx
                dp3 r13.w, r29.xyzx, r29.xyzx
                rsq r13.w, r13.w
                mul r29.xyz, r13.wwww, r29.xyzx
                dp3 r13.w, r29.xyzx, r3.xyzx
                dp3 r17.z, r1.xyzx, r29.xyzx
                mul r17.z, |r17.z|, |r17.z|
                mad r17.z, r17.z, l(-0.99983895), l(1.000000)
                mad r19.x, r16.y, r5.z, r5.w
                mul r17.z, r17.z, r17.z
                mul r17.z, r19.x, r17.z
                rcp r17.z, r17.z
                mul r16.y, r16.y, r17.x
                mul r16.y, r16.y, r17.z
                mul r13.z, r13.z, r16.y
                mad r29.xyz, r13.zzzz, r18.xywx, r28.xyzx
                add_sat r13.w, -r13.w, l(1.000000)
                mul r16.y, r13.w, r13.w
                mul r16.y, r16.y, r16.y
                mul r13.w, r13.w, r16.y
                mul r13.z, r13.w, r13.z
                mad r18.xyw, r13.zzzz, r18.xyxw, r27.xyxz
                movc r14.xyz, r16.xxxx, r20.xyzx, r14.xyzx
                movc r27.xyz, r16.xxxx, r18.xywx, r27.xyzx
                movc r28.xyz, r16.xxxx, r29.xyzx, r28.xyzx
              endif 
            endif 
          endif 
          break 
          default 
          break 
        endswitch 
      endif 
    endif 
  endloop 
  mov r7.yzw, r14.xxyz
  mov r25.xyz, r27.xyzx
  mov r26.xyz, r28.xyzx
  iadd r3.w, r3.w, l(32)
endloop 
max r0.z, r4.z, r4.y
max r0.z, r0.z, l(1.268160)
iadd r0.w, cb2[0].y, -cb2[58].x
and r2.x, r0.w, l(-32)
iadd r2.y, r0.w, -r2.x
and r2.z, cb2[0].y, l(-32)
iadd r3.x, -r2.z, cb2[0].y
mov r4.xy, l(0,0,0,0)
mov r5.w, l(0)
mov r6.yz, l(0,0,1.000000,0)
mov r9.xy, l(0,0,0,0)
mov r10.xw, l(1.000000,0,0,0.787500)
mov r12.xy, l(0,0,0,0)
mov r13.xy, l(0,0,0,0)
mov r14.xyzw, l(0,0,0,0)
mov r15.yzw, l(0,0,0,0)
mov r3.y, r2.x
loop 
  uge r3.z, r3.y, cb2[0].y
  breakc_nz r3.z
  ushr r4.z, r3.y, l(5)
  iadd r5.xyz, r4.xyzx, r11.xyzx
  ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r5.xyzw, t7.yzxw
  ieq r3.w, r2.x, r3.y
  bfi r4.z, r2.y, l(0), l(0), r3.z
  movc r3.z, r3.w, r4.z, r3.z
  ieq r3.w, r2.z, r3.y
  ubfe r4.z, r3.x, l(0), r3.z
  movc r3.z, r3.w, r4.z, r3.z
  iadd r3.w, r3.y, cb2[0].x
  mov r16.xyzw, r14.xyzw
  mov r17.xyz, r15.yzwy
  mov r4.z, r3.z
  loop 
    breakc_z r4.z
    firstbit_lo r4.w, r4.z
    ishl r5.x, l(1), r4.w
    and r5.y, r4.z, r5.x
    if_nz r5.y
      xor r4.z, r4.z, r5.x
      iadd r5.x, r3.w, r4.w
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r18.xyzw, r5.x, l(0), t11.xyzw
      ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r5.xy, r5.x, l(16), t11.xyxx
      add r18.xyz, r18.xyzx, -v6.xyzx
      mov r5.z, r18.w
      lt r5.xyz, |r18.xyzx|, r5.zxyz
      and r5.x, r5.y, r5.x
      and r5.x, r5.z, r5.x
      if_nz r5.x
        iadd r4.w, r3.y, r4.w
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r18.xyzw, r4.w, l(0), t15.wxyz
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r5.xy, r4.w, l(96), t15.xyxx
        ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r19.xyzw, r4.w, l(116), t15.zwxy
        add r20.xyz, -r18.yzwy, v6.xyzx
        and r5.z, r19.w, l(0x0000ffff)
        ubfe r6.w, l(6), l(25), r19.w
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r21.xyzw, r5.z, l(0), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r22.xyzw, r5.z, l(16), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r5.z, l(32), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r5.z, l(48), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r5.z, l(64), t16.xyzw
        ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r5.z, l(80), t16.xyzw
        dp3 r7.x, r21.xyzx, r20.xyzx
        add_sat r7.x, r21.w, r7.x
        dp3 r9.w, r22.xyzx, r20.xyzx
        add_sat r9.w, r22.w, r9.w
        mul r7.x, r7.x, r9.w
        dp3 r9.w, r23.xyzx, r20.xyzx
        add_sat r9.w, r23.w, r9.w
        mul r7.x, r7.x, r9.w
        dp3 r9.w, r24.xyzx, r20.xyzx
        add_sat r9.w, r24.w, r9.w
        mul r7.x, r7.x, r9.w
        dp3 r9.w, r27.xyzx, r20.xyzx
        add_sat r9.w, r27.w, r9.w
        mul r7.x, r7.x, r9.w
        dp3 r9.w, r28.xyzx, r20.xyzx
        add_sat r9.w, r28.w, r9.w
        mul r6.x, r7.x, r9.w
        and r7.x, r5.x, l(1)
        movc r21.xy, r7.xxxx, r6.xyxx, r6.zxzz
        mov r6.x, r5.x
        mov r22.xy, r21.xyxx
        mov r7.x, l(1)
        loop 
          ige r9.w, r7.x, r6.w
          breakc_nz r9.w
          iadd r9.w, r5.z, r7.x
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r9.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r9.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r9.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r9.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r9.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r9.w, l(80), t16.xyzw
          dp3 r9.w, r23.xyzx, r20.xyzx
          add_sat r9.w, r23.w, r9.w
          mul r9.w, r9.w, r22.x
          dp3 r11.w, r24.xyzx, r20.xyzx
          add_sat r11.w, r24.w, r11.w
          mul r9.w, r9.w, r11.w
          dp3 r11.w, r27.xyzx, r20.xyzx
          add_sat r11.w, r27.w, r11.w
          mul r9.w, r9.w, r11.w
          dp3 r11.w, r28.xyzx, r20.xyzx
          add_sat r11.w, r28.w, r11.w
          mul r9.w, r9.w, r11.w
          dp3 r11.w, r29.xyzx, r20.xyzx
          add_sat r11.w, r29.w, r11.w
          mul r9.w, r9.w, r11.w
          dp3 r11.w, r30.xyzx, r20.xyzx
          add_sat r11.w, r30.w, r11.w
          mul r22.x, r9.w, r11.w
          ushr r12.w, r6.x, l(2)
          ubfe r13.w, l(1), l(2), r6.x
          and r18.w, r12.w, l(2)
          max r20.w, r22.x, r22.y
          mad r9.w, -r9.w, r11.w, l(1.000000)
          mul r9.w, r9.w, r22.y
          movc r10.y, r18.w, r9.w, r20.w
          movc r22.xy, r13.wwww, r22.xyxx, r10.xyxx
          iadd r7.x, r7.x, l(1)
          mov r6.x, r12.w
        endloop 
        mov_sat r22.y, r22.y
        mul r5.x, r5.y, r22.y
        lt r5.z, l(0.000000), r5.x
        if_nz r5.z
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r4.w, l(16), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r23.xyzw, r4.w, l(32), t15.yxwz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r4.w, l(48), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r4.w, l(64), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r4.w, l(80), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r4.w, l(132), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r4.w, l(148), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r4.w, l(164), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r4.w, l(180), t15.zwxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r4.w, l(196), t15.xyzw
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xy, r4.w, l(212), t15.xyxx
          mad r17.z, r22.y, r5.y, r17.z
          mul r4.w, r19.z, r5.x
          mov r19.z, r29.z
          dp3 r5.x, r8.xyzx, r19.xyzx
          dp3 r5.y, r20.xyzx, r19.xyzx
          add r5.y, -r29.w, r5.y
          ge r5.z, r5.y, l(0.000000)
          movc r5.y, r5.z, |r5.y|, -|r5.y|
          max r5.x, -r5.x, l(0.00000010)
          div r5.x, r5.y, r5.x
          min r5.x, |r5.x|, l(131072.000000)
          mov r29.z, r30.z
          dp3 r5.y, r8.xyzx, r29.xyzx
          dp3 r5.z, r20.xyzx, r29.xyzx
          add r5.z, -r30.w, r5.z
          ge r6.x, r5.z, l(0.000000)
          movc r5.z, r6.x, |r5.z|, -|r5.z|
          max r5.y, -r5.y, l(0.00000010)
          div r5.y, r5.z, r5.y
          min r5.x, |r5.y|, r5.x
          mov r30.z, r31.z
          dp3 r5.y, r8.xyzx, r30.xyzx
          dp3 r5.z, r20.xyzx, r30.xyzx
          add r5.z, -r31.w, r5.z
          ge r6.x, r5.z, l(0.000000)
          movc r5.z, r6.x, |r5.z|, -|r5.z|
          max r5.y, -r5.y, l(0.00000010)
          div r5.y, r5.z, r5.y
          min r5.x, |r5.y|, r5.x
          mov r31.z, r32.z
          dp3 r5.y, r8.xyzx, r31.xyzx
          dp3 r5.z, r20.xyzx, r31.xyzx
          add r5.z, -r32.w, r5.z
          ge r6.x, r5.z, l(0.000000)
          movc r5.z, r6.x, |r5.z|, -|r5.z|
          max r5.y, -r5.y, l(0.00000010)
          div r5.y, r5.z, r5.y
          min r5.x, |r5.y|, r5.x
          mov r32.z, r33.x
          dp3 r5.y, r8.xyzx, r32.xyzx
          dp3 r5.z, r20.xyzx, r32.xyzx
          add r5.z, -r33.y, r5.z
          ge r6.x, r5.z, l(0.000000)
          movc r5.z, r6.x, |r5.z|, -|r5.z|
          max r5.y, -r5.y, l(0.00000010)
          div r5.y, r5.z, r5.y
          min r5.x, |r5.y|, r5.x
          mov r34.zw, r33.zzzw
          dp3 r5.y, r8.zxyz, r34.xzwx
          dp3 r5.z, r20.zxyz, r34.xzwx
          add r5.z, -r34.y, r5.z
          ge r6.x, r5.z, l(0.000000)
          movc r5.z, r6.x, |r5.z|, -|r5.z|
          max r5.y, -r5.y, l(0.00000010)
          div r5.y, r5.z, r5.y
          min r5.x, |r5.y|, r5.x
          mov r19.x, r24.w
          mov r19.yz, r27.zzwz
          add r19.xyz, r20.xyzx, r19.xyzx
          mad r19.xyz, r8.xyzx, r5.xxxx, r19.xyzx
          dp3 r5.y, r19.xyzx, r19.xyzx
          sqrt r5.y, r5.y
          div r5.x, r5.x, r5.y
          add r5.x, r5.x, r5.x
          sqrt r5.x, r5.x
          add r5.x, r5.x, l(0.15519994)
          mov r18.y, r21.z
          mov r18.z, r23.x
          dp3 r29.x, r19.xyzx, r18.xyzx
          mov r30.xy, r21.xwxx
          mov r30.z, r23.w
          dp3 r29.y, r19.xyzx, r30.xyzx
          mov r23.x, r21.y
          dp3 r29.z, r19.xyzx, r23.xyzx
          ubfe r5.y, l(9), l(16), r19.w
          utof r29.w, r5.y
          sample_l_indexable(texturecubearray)(float,float,float,float) r5.xyz, r29.xyzw, t8.xyzw, s2, r5.x
          dp3 r19.x, r20.xyzx, r18.xyzx
          dp3 r19.y, r20.xyzx, r30.xyzx
          dp3 r19.z, r20.xyzx, r23.xyzx
          mad_sat r19.xyz, r19.xyzx, r24.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
          mov r27.z, r28.x
          mad r19.xyz, r19.xyzx, r27.xyzx, r28.yzwy
          dp3 r29.x, r1.xyzx, r18.xyzx
          dp3 r29.y, r1.xyzx, r30.xyzx
          dp3 r29.z, r1.xyzx, r23.xyzx
          lt r18.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r29.xyzx
          movc r9.z, r18.x, l(0), l(0.500000)
          add r20.xyz, r9.xyzx, r19.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r20.xyz, r20.xyzx, t17.xyzw, s4, l(0.000000)
          mul r21.xyz, r29.xyzx, r29.xyzx
          mul r21.xyz, r4.wwww, r21.xyzx
          movc r12.z, r18.y, l(0), l(0.500000)
          add r18.xyw, r12.xyxz, r19.xyxz
          sample_l_indexable(texture3d)(float,float,float,float) r18.xyw, r18.xywx, t18.xywz, s4, l(0.000000)
          mul r18.xyw, r21.yyyy, r18.xyxw
          mad r18.xyw, r20.xyxz, r21.xxxx, r18.xyxw
          movc r13.z, r18.z, l(0), l(0.500000)
          add r19.xyz, r13.xyzx, r19.xyzx
          sample_l_indexable(texture3d)(float,float,float,float) r19.xyz, r19.xyzx, t19.xyzw, s4, l(0.000000)
          mad r18.xyz, r19.xyzx, r21.zzzz, r18.xywx
          sample_l_indexable(texturecubearray)(float,float,float,float) r19.xyz, r29.xyzw, t8.xyzw, s2, l(6.000000)
          mul r20.xyz, r18.xyzx, r19.xyzx
          dp3 r6.x, r20.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r16.xyz, r18.xyzx, r19.xyzx, r16.xyzx
          mul r6.w, r0.z, r6.x
          mul r5.xyz, r4.wwww, r5.xyzx
          dp3 r4.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
          mad r4.w, r0.z, r6.x, r4.w
          div r4.w, r6.w, r4.w
          mov r18.x, r16.w
          mov r18.yz, r17.xxyx
          mad r17.xyw, r5.yzyx, r4.wwww, r18.yzyx
          mov r16.w, r17.w
        endif 
      endif 
    endif 
  endloop 
  mov r14.xyzw, r16.xyzw
  mov r15.yzw, r17.xxyz
  iadd r3.y, r3.y, l(32)
endloop 
lt r2.z, r15.w, l(1.000000)
if_nz r2.z
  mov r3.xy, l(0,0,0,0)
  mov r4.w, l(0)
  mov r5.yz, l(0,0,1.000000,0)
  mov r6.xy, l(0,0,0,0)
  mov r9.x, l(1.000000)
  mov r12.xy, l(0,0,0,0)
  mov r13.xy, l(0,0,0,0)
  mov r16.x, r14.w
  mov r16.yzw, r15.yyzw
  mov r17.xyz, r14.xyzx
  mov r2.z, r15.w
  mov r3.w, l(0)
  loop 
    uge r5.w, r3.w, r0.w
    breakc_nz r5.w
    ushr r3.z, r3.w, l(5)
    iadd r4.xyz, r3.xyzx, r11.xyzx
    ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r4.xyzw, t7.yzxw
    ieq r4.x, r2.x, r3.w
    ubfe r4.y, r2.y, l(0), r3.z
    movc r3.z, r4.x, r4.y, r3.z
    iadd r4.x, r3.w, cb2[0].x
    mov r18.xyzw, r16.xyzw
    mov r19.xyz, r17.xyzx
    mov r4.y, r2.z
    mov r4.z, r3.z
    loop 
      breakc_z r4.z
      firstbit_lo r5.w, r4.z
      ishl r6.w, l(1), r5.w
      and r7.x, r4.z, r6.w
      if_nz r7.x
        xor r4.z, r4.z, r6.w
        iadd r6.w, r4.x, r5.w
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r20.xyzw, r6.w, l(0), t11.xyzw
        ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r21.xy, r6.w, l(16), t11.xyxx
        add r20.xyz, r20.xyzx, -v6.xyzx
        mov r21.z, r20.w
        lt r20.xyz, |r20.xyzx|, r21.zxyz
        and r6.w, r20.y, r20.x
        and r6.w, r20.z, r6.w
        if_nz r6.w
          iadd r5.w, r3.w, r5.w
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r20.xyzw, r5.w, l(0), t15.wxyz
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r9.zw, r5.w, l(96), t15.xxxy
          ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r21.xyzw, r5.w, l(116), t15.zwxy
          add r22.xyz, -r20.yzwy, v6.xyzx
          and r6.w, r21.w, l(0x0000ffff)
          ubfe r7.x, l(6), l(25), r21.w
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r23.xyzw, r6.w, l(0), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r6.w, l(16), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r6.w, l(32), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r6.w, l(48), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r6.w, l(64), t16.xyzw
          ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r6.w, l(80), t16.xyzw
          dp3 r10.x, r23.xyzx, r22.xyzx
          add_sat r10.x, r23.w, r10.x
          dp3 r10.y, r24.xyzx, r22.xyzx
          add_sat r10.y, r24.w, r10.y
          mul r10.x, r10.y, r10.x
          dp3 r10.y, r27.xyzx, r22.xyzx
          add_sat r10.y, r27.w, r10.y
          mul r10.x, r10.y, r10.x
          dp3 r10.y, r28.xyzx, r22.xyzx
          add_sat r10.y, r28.w, r10.y
          mul r10.x, r10.y, r10.x
          dp3 r10.y, r29.xyzx, r22.xyzx
          add_sat r10.y, r29.w, r10.y
          mul r10.x, r10.y, r10.x
          dp3 r10.y, r30.xyzx, r22.xyzx
          add_sat r10.y, r30.w, r10.y
          mul r5.x, r10.y, r10.x
          and r10.x, r9.z, l(1)
          movc r10.xy, r10.xxxx, r5.xyxx, r5.zxzz
          mov r5.x, r9.z
          mov r23.xy, r10.xyxx
          mov r11.w, l(1)
          loop 
            ige r12.w, r11.w, r7.x
            breakc_nz r12.w
            iadd r12.w, r6.w, r11.w
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r24.xyzw, r12.w, l(0), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r27.xyzw, r12.w, l(16), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r28.xyzw, r12.w, l(32), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r29.xyzw, r12.w, l(48), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r30.xyzw, r12.w, l(64), t16.xyzw
            ld_structured_indexable(structured_buffer, stride=96)(mixed,mixed,mixed,mixed) r31.xyzw, r12.w, l(80), t16.xyzw
            dp3 r12.w, r24.xyzx, r22.xyzx
            add_sat r12.w, r24.w, r12.w
            mul r12.w, r12.w, r23.x
            dp3 r13.w, r27.xyzx, r22.xyzx
            add_sat r13.w, r27.w, r13.w
            mul r12.w, r12.w, r13.w
            dp3 r13.w, r28.xyzx, r22.xyzx
            add_sat r13.w, r28.w, r13.w
            mul r12.w, r12.w, r13.w
            dp3 r13.w, r29.xyzx, r22.xyzx
            add_sat r13.w, r29.w, r13.w
            mul r12.w, r12.w, r13.w
            dp3 r13.w, r30.xyzx, r22.xyzx
            add_sat r13.w, r30.w, r13.w
            mul r12.w, r12.w, r13.w
            dp3 r13.w, r31.xyzx, r22.xyzx
            add_sat r13.w, r31.w, r13.w
            mul r23.x, r12.w, r13.w
            ushr r17.w, r5.x, l(2)
            ubfe r19.w, l(1), l(2), r5.x
            and r20.w, r17.w, l(2)
            max r22.w, r23.x, r23.y
            mad r12.w, -r12.w, r13.w, l(1.000000)
            mul r12.w, r12.w, r23.y
            movc r9.y, r20.w, r12.w, r22.w
            movc r23.xy, r19.wwww, r23.xyxx, r9.xyxx
            iadd r11.w, r11.w, l(1)
            mov r5.x, r17.w
          endloop 
          add_sat r5.x, -r4.y, r23.y
          mul r6.w, r9.w, r5.x
          lt r7.x, l(0.000000), r6.w
          if_nz r7.x
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r24.xyzw, r5.w, l(16), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r27.xyzw, r5.w, l(32), t15.yxwz
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r28.xyzw, r5.w, l(48), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r29.xyzw, r5.w, l(64), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r30.xyzw, r5.w, l(80), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r31.xyzw, r5.w, l(132), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r32.xyzw, r5.w, l(148), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r33.xyzw, r5.w, l(164), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r34.xyzw, r5.w, l(180), t15.zwxy
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r35.xyzw, r5.w, l(196), t15.xyzw
            ld_structured_indexable(structured_buffer, stride=224)(mixed,mixed,mixed,mixed) r36.xy, r5.w, l(212), t15.xyxx
            mad r18.w, r5.x, r9.w, r18.w
            mul r5.x, r21.z, r6.w
            mov r21.z, r31.z
            dp3 r5.w, r8.xyzx, r21.xyzx
            dp3 r6.w, r22.xyzx, r21.xyzx
            add r6.w, -r31.w, r6.w
            ge r7.x, r6.w, l(0.000000)
            movc r6.w, r7.x, |r6.w|, -|r6.w|
            max r5.w, -r5.w, l(0.00000010)
            div r5.w, r6.w, r5.w
            min r5.w, |r5.w|, l(131072.000000)
            mov r31.z, r32.z
            dp3 r6.w, r8.xyzx, r31.xyzx
            dp3 r7.x, r22.xyzx, r31.xyzx
            add r7.x, -r32.w, r7.x
            ge r9.y, r7.x, l(0.000000)
            movc r7.x, r9.y, |r7.x|, -|r7.x|
            max r6.w, -r6.w, l(0.00000010)
            div r6.w, r7.x, r6.w
            min r5.w, r5.w, |r6.w|
            mov r32.z, r33.z
            dp3 r6.w, r8.xyzx, r32.xyzx
            dp3 r7.x, r22.xyzx, r32.xyzx
            add r7.x, -r33.w, r7.x
            ge r9.y, r7.x, l(0.000000)
            movc r7.x, r9.y, |r7.x|, -|r7.x|
            max r6.w, -r6.w, l(0.00000010)
            div r6.w, r7.x, r6.w
            min r5.w, r5.w, |r6.w|
            mov r33.z, r34.z
            dp3 r6.w, r8.xyzx, r33.xyzx
            dp3 r7.x, r22.xyzx, r33.xyzx
            add r7.x, -r34.w, r7.x
            ge r9.y, r7.x, l(0.000000)
            movc r7.x, r9.y, |r7.x|, -|r7.x|
            max r6.w, -r6.w, l(0.00000010)
            div r6.w, r7.x, r6.w
            min r5.w, r5.w, |r6.w|
            mov r34.z, r35.x
            dp3 r6.w, r8.xyzx, r34.xyzx
            dp3 r7.x, r22.xyzx, r34.xyzx
            add r7.x, -r35.y, r7.x
            ge r9.y, r7.x, l(0.000000)
            movc r7.x, r9.y, |r7.x|, -|r7.x|
            max r6.w, -r6.w, l(0.00000010)
            div r6.w, r7.x, r6.w
            min r5.w, r5.w, |r6.w|
            mov r36.zw, r35.zzzw
            dp3 r6.w, r8.zxyz, r36.xzwx
            dp3 r7.x, r22.zxyz, r36.xzwx
            add r7.x, -r36.y, r7.x
            ge r9.y, r7.x, l(0.000000)
            movc r7.x, r9.y, |r7.x|, -|r7.x|
            max r6.w, -r6.w, l(0.00000010)
            div r6.w, r7.x, r6.w
            min r5.w, r5.w, |r6.w|
            mov r21.x, r28.w
            mov r21.yz, r29.zzwz
            add r9.yzw, r22.xxyz, r21.xxyz
            mad r9.yzw, r8.xxyz, r5.wwww, r9.yyzw
            dp3 r6.w, r9.yzwy, r9.yzwy
            sqrt r6.w, r6.w
            div r5.w, r5.w, r6.w
            add r5.w, r5.w, r5.w
            sqrt r5.w, r5.w
            add r5.w, r5.w, l(0.15519994)
            mov r20.y, r24.z
            mov r20.z, r27.x
            dp3 r31.x, r9.yzwy, r20.xyzx
            mov r21.xy, r24.xwxx
            mov r21.z, r27.w
            dp3 r31.y, r9.yzwy, r21.xyzx
            mov r27.x, r24.y
            dp3 r31.z, r9.yzwy, r27.xyzx
            ubfe r6.w, l(9), l(16), r21.w
            utof r31.w, r6.w
            sample_l_indexable(texturecubearray)(float,float,float,float) r9.yzw, r31.xyzw, t8.wxyz, s2, r5.w
            dp3 r24.x, r22.xyzx, r20.xyzx
            dp3 r24.y, r22.xyzx, r21.xyzx
            dp3 r24.z, r22.xyzx, r27.xyzx
            mad_sat r22.xyz, r24.xyzx, r28.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
            mov r29.z, r30.x
            mad r22.xyz, r22.xyzx, r29.xyzx, r30.yzwy
            dp3 r31.x, r1.xyzx, r20.xyzx
            dp3 r31.y, r1.xyzx, r21.xyzx
            dp3 r31.z, r1.xyzx, r27.xyzx
            lt r20.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r31.xyzx
            movc r6.z, r20.x, l(0), l(0.500000)
            add r21.xyz, r6.xyzx, r22.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t17.xyzw, s4, l(0.000000)
            mul r23.xzw, r31.xxyz, r31.xxyz
            mul r23.xzw, r5.xxxx, r23.xxzw
            movc r12.z, r20.y, l(0), l(0.500000)
            add r20.xyw, r12.xyxz, r22.xyxz
            sample_l_indexable(texture3d)(float,float,float,float) r20.xyw, r20.xywx, t18.xywz, s4, l(0.000000)
            mul r20.xyw, r23.zzzz, r20.xyxw
            mad r20.xyw, r21.xyxz, r23.xxxx, r20.xyxw
            movc r13.z, r20.z, l(0), l(0.500000)
            add r21.xyz, r13.xyzx, r22.xyzx
            sample_l_indexable(texture3d)(float,float,float,float) r21.xyz, r21.xyzx, t19.xyzw, s4, l(0.000000)
            mad r20.xyz, r21.xyzx, r23.wwww, r20.xywx
            sample_l_indexable(texturecubearray)(float,float,float,float) r21.xyz, r31.xyzw, t8.xyzw, s2, l(6.000000)
            mul r22.xyz, r20.xyzx, r21.xyzx
            dp3 r5.w, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r19.xyz, r20.xyzx, r21.xyzx, r19.xyzx
            mul r6.z, r0.z, r5.w
            mul r9.yzw, r5.xxxx, r9.yyzw
            dp3 r5.x, r9.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
            mad r5.x, r0.z, r5.w, r5.x
            div r5.x, r6.z, r5.x
            mad r18.xyz, r9.yzwy, r5.xxxx, r18.xyzx
          endif 
        endif 
      endif 
    endloop 
    mov r16.xyzw, r18.xyzw
    mov r17.xyz, r19.xyzx
    iadd r3.w, r3.w, l(32)
  endloop 
  mov r15.xyzw, r16.zxyw
  mov r14.xyz, r17.xyzx
  mov r15.xyzw, r15.yzxw
else 
  mov r15.x, r14.w
endif 
max r0.z, r15.w, l(1.000000)
rcp r0.z, r0.z
mov_sat r15.w, r15.w
mul r2.xyz, r0.zzzz, r14.xyzx
mul r3.xyz, r0.zzzz, r15.xyzx
lt r0.w, r15.w, l(0.990000)
if_nz r0.w
  add r0.w, -r15.w, l(1.000000)
  mul r3.w, r0.w, cb2[19].x
  add r4.xyz, v6.xyzx, -cb2[35].xyzx
  mul r5.x, r4.x, cb2[35].w
  mul r5.yz, r4.yyzy, cb2[36].xxyx
  add_sat r4.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r5.xy, r4.xyxx, cb2[36].zwzz
  mul r5.z, r4.z, cb2[37].x
  add r4.xyz, r5.xyzx, cb2[37].yzwy
  lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  movc r5.xyz, r5.xyzx, l(0,0,0,0), l(0.500000,0.500000,0.500000,0)
  mov r5.w, l(0)
  add r6.xyz, r4.xyzx, r5.wwxw
  sample_l_indexable(texture3d)(float,float,float,float) r6.xyz, r6.xyzx, t17.xyzw, s4, l(0.000000)
  mul r9.xyz, r1.xyzx, r1.xyzx
  mul r9.xyz, r3.wwww, r9.xyzx
  add r11.xyz, r4.xyzx, r5.wwyw
  sample_l_indexable(texture3d)(float,float,float,float) r11.xyz, r11.xyzx, t18.xyzw, s4, l(0.000000)
  mul r11.xyz, r9.yyyy, r11.xyzx
  mad r6.xyz, r6.xyzx, r9.xxxx, r11.xyzx
  add r4.xyz, r4.xyzx, r5.wwzw
  sample_l_indexable(texture3d)(float,float,float,float) r4.xyz, r4.xyzx, t19.xyzw, s4, l(0.000000)
  mad r4.xyz, r4.xyzx, r9.zzzz, r6.xyzx
  mov r1.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r1.xyz, r1.xyzw, t8.xyzw, s2, l(6.000000)
  mul r1.xyz, r1.xyzx, r4.xyzx
  dp3 r1.w, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  mad r2.xyz, r14.xyzx, r0.zzzz, r1.xyzx
  mov r8.w, l(0)
  sample_l_indexable(texturecubearray)(float,float,float,float) r1.xyz, r8.xyzw, t8.xyzw, s2, l(0.99999994)
  mad r0.z, cb2[19].x, r0.w, -r1.w
  mad r0.z, r0.z, l(0.800000), r1.w
  mad r3.xyz, r1.xyzx, r0.zzzz, r3.xyzx
endif 
add r1.xyz, r2.xyzx, r7.yzwy
mul r10.z, r2.w, l(0.984375)
add r0.zw, r10.zzzw, l(0.000000, 0.000000, 0.00781250, 0.00781250)
sample_l_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t5.zwxy, s2, l(0.000000)
mad r2.xyz, r3.xyzx, r0.zzzz, r25.xyzx
mad r3.xyz, r3.xyzx, r0.wwww, r26.xyzx
mul r2.xyz, r2.xyzx, l(0.960000, 0.960000, 0.960000, 0.000000)
mad r2.xyz, r3.xyzx, l(0.040000, 0.040000, 0.040000, 0.000000), r2.xyzx
mad r1.xyz, r1.xyzx, cb0[12].xyzx, r2.xyzx
dp3 r0.z, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.z, r0.z, l(0.000100)
max r0.z, r0.z, cb1[85].x
mad r0.xzw, r0.xxxx, r0.zzzz, r1.xxyz
add o0.w, -r0.y, l(1.000000)
lt r0.y, l(0.000000), cb2[9].z
if_nz r0.y
  dp3 r0.y, v6.xyzx, v6.xyzx
  rsq r1.x, r0.y
  mul r1.xyz, r1.xxxx, v6.xyzx
  sqrt r0.y, r0.y
  lt r1.w, l(0.000000), cb2[13].w
  if_nz r1.w
    mad r2.xy, r0.yyyy, cb2[15].xyxx, cb2[14].zwzz
    mul r2.xy, r2.xyxx, cb2[16].xyxx
    lt r1.w, l(0.010000), |v6.z|
    mul r2.zw, v6.zzzz, cb2[15].zzzw
    mul r3.xy, r2.zwzz, l(-1.442695, -1.442695, 0.000000, 0.000000)
    exp r3.xy, r3.xyxx
    add r3.xy, -r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
    div r2.zw, r3.xxxy, r2.zzzw
    mul r2.zw, r2.zzzw, r2.xxxy
    movc r2.xy, r1.wwww, r2.zwzz, r2.xyxx
    mul r2.xzw, r2.xxxx, cb2[12].xxyz
    exp r2.xzw, r2.xxzw
    mul r3.xyz, r2.yyyy, cb2[12].xyzx
    exp r3.xyz, r3.xyzx
    add r3.xyz, -r2.xzwx, r3.xyzx
    mad r2.xyz, cb2[13].wwww, r3.xyzx, r2.xzwx
  else 
    mad r1.w, r0.y, cb2[15].x, cb2[14].z
    mul r1.w, r1.w, cb2[16].x
    lt r2.w, l(0.010000), |v6.z|
    mul r3.x, v6.z, cb2[15].z
    mul r3.y, r3.x, l(-1.442695)
    exp r3.y, r3.y
    add r3.y, -r3.y, l(1.000000)
    div r3.x, r3.y, r3.x
    mul r3.x, r1.w, r3.x
    movc r1.w, r2.w, r3.x, r1.w
    mul r3.xyz, r1.wwww, cb2[12].xyzx
    exp r2.xyz, r3.xyzx
  endif 
  mad r2.xyz, r2.xyzx, cb2[9].zzzz, l(1.000000, 1.000000, 1.000000, 0.000000)
  add_sat r2.xyz, r2.xyzx, -cb2[9].zzzz
  dp3 r1.x, cb2[7].yzwy, -r1.xyzx
  mad r1.y, -cb2[8].w, cb2[8].w, l(1.000000)
  mad r1.z, cb2[8].w, -r1.x, l(1.000000)
  mul r1.z, r1.z, r1.z
  mul r1.z, r1.z, l(12.566371)
  div r1.y, r1.y, r1.z
  add r0.y, r0.y, -cb2[10].w
  mul_sat r0.y, r0.y, cb2[11].w
  mul r0.y, r0.y, r1.y
  mov_sat r1.x, r1.x
  mad r1.x, r1.x, r1.x, l(1.000000)
  mad r1.x, r1.x, l(0.05968310), l(-1.000000)
  mad r1.x, cb2[8].z, r1.x, l(1.000000)
  mul r1.yzw, r0.yyyy, cb2[11].xxyz
  mad r1.xyz, r1.xxxx, cb2[10].xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, cb2[9].wwww
  add r3.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r1.xyz, r1.xyzx, r3.xyzx
  mad r1.xyz, r0.xzwx, r2.xyzx, r1.xyzx
else 
  mul r0.y, v6.z, cb2[6].x
  mad r1.w, cb2[6].x, v6.z, cb2[5].x
  lt r2.x, |r0.y|, l(0.000100)
  min r2.y, r1.w, l(64.000000)
  mul r2.y, r2.y, l(1.442695)
  exp r2.y, r2.y
  mov_sat r2.z, cb2[6].z
  lt r2.w, r1.w, l(0.000000)
  add r1.w, r1.w, l(1.000000)
  movc r1.w, r2.w, r2.y, r1.w
  add r1.w, r1.w, -cb2[6].z
  movc r0.y, r2.x, l(1.000000), r0.y
  div r0.y, r1.w, r0.y
  movc r0.y, r2.x, r2.z, r0.y
  mul r0.y, r0.y, cb2[5].z
  dp3 r1.w, v6.xyzx, v6.xyzx
  sqrt r2.x, r1.w
  mad r0.y, r0.y, r2.x, cb2[5].w
  exp r0.y, r0.y
  min r0.y, r0.y, l(1.000000)
  add r0.y, -r0.y, l(1.000000)
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, v6.xyzx
  dp3 r1.w, cb2[7].yzwy, r2.xyzx
  mad_sat r1.w, cb2[8].y, r1.w, cb2[8].x
  add r2.xyzw, cb2[3].xyzw, -cb2[4].xyzw
  mad r2.xyzw, r1.wwww, r2.xyzw, cb2[4].xyzw
  mul r0.y, r0.y, r2.w
  add r2.xyz, -r0.xzwx, r2.xyzx
  mad r1.xyz, r0.yyyy, r2.xyzx, r0.xzwx
endif 
mul r0.xyz, r1.xyzx, cb1[85].yyyy
ge r1.xyz, r0.xyzx, l(0.00006104, 0.00006104, 0.00006104, 0.000000)
and r0.xyz, r0.xyzx, r1.xyzx
min o0.xyz, r0.xyzx, l(65024.000000, 65024.000000, 64512.000000, 0.000000)
ret 
// Approximately 1821 instruction slots used
