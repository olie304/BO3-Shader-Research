//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//   using 3Dmigoto v1.2.45 on Thu Jul 15 15:40:01 2021
//
//
// Buffer Definitions: 
//
// cbuffer PerSceneConsts
// {
//
//   row_major float4x4 projectionMatrix;// Offset:    0 Size:    64 [unused]
//   row_major float4x4 viewMatrix;     // Offset:   64 Size:    64 [unused]
//   row_major float4x4 viewProjectionMatrix;// Offset:  128 Size:    64 [unused]
//   row_major float4x4 inverseProjectionMatrix;// Offset:  192 Size:    64 [unused]
//   row_major float4x4 inverseViewMatrix;// Offset:  256 Size:    64 [unused]
//   row_major float4x4 inverseViewProjectionMatrix;// Offset:  320 Size:    64 [unused]
//   float4 eyeOffset;                  // Offset:  384 Size:    16 [unused]
//   float4 adsZScale;                  // Offset:  400 Size:    16 [unused]
//   float4 hdrControl0;                // Offset:  416 Size:    16 [unused]
//   float4 hdrControl1;                // Offset:  432 Size:    16 [unused]
//   float4 fogColor;                   // Offset:  448 Size:    16 [unused]
//   float4 fogConsts;                  // Offset:  464 Size:    16 [unused]
//   float4 fogConsts2;                 // Offset:  480 Size:    16 [unused]
//   float4 fogConsts3;                 // Offset:  496 Size:    16 [unused]
//   float4 fogConsts4;                 // Offset:  512 Size:    16 [unused]
//   float4 fogConsts5;                 // Offset:  528 Size:    16 [unused]
//   float4 fogConsts6;                 // Offset:  544 Size:    16 [unused]
//   float4 fogConsts7;                 // Offset:  560 Size:    16 [unused]
//   float4 fogConsts8;                 // Offset:  576 Size:    16 [unused]
//   float4 fogConsts9;                 // Offset:  592 Size:    16 [unused]
//   float3 sunFogDir;                  // Offset:  608 Size:    12 [unused]
//   float4 sunFogColor;                // Offset:  624 Size:    16 [unused]
//   float2 sunFog;                     // Offset:  640 Size:     8 [unused]
//   float4 zNear;                      // Offset:  656 Size:    16 [unused]
//   float3 clothPrimaryTint;           // Offset:  672 Size:    12 [unused]
//   float3 clothSecondaryTint;         // Offset:  688 Size:    12 [unused]
//   float4 renderTargetSize;           // Offset:  704 Size:    16
//   float4 upscaledTargetSize;         // Offset:  720 Size:    16 [unused]
//   float4 materialColor;              // Offset:  736 Size:    16 [unused]
//   float4 cameraUp;                   // Offset:  752 Size:    16 [unused]
//   float4 cameraLook;                 // Offset:  768 Size:    16 [unused]
//   float4 cameraSide;                 // Offset:  784 Size:    16 [unused]
//   float4 cameraVelocity;             // Offset:  800 Size:    16 [unused]
//   float4 skyMxR;                     // Offset:  816 Size:    16 [unused]
//   float4 skyMxG;                     // Offset:  832 Size:    16 [unused]
//   float4 skyMxB;                     // Offset:  848 Size:    16 [unused]
//   float4 sunMxR;                     // Offset:  864 Size:    16 [unused]
//   float4 sunMxG;                     // Offset:  880 Size:    16 [unused]
//   float4 sunMxB;                     // Offset:  896 Size:    16 [unused]
//   float4 skyRotationTransition;      // Offset:  912 Size:    16 [unused]
//   float4 debugColorOverride;         // Offset:  928 Size:    16 [unused]
//   float4 debugAlphaOverride;         // Offset:  944 Size:    16 [unused]
//   float4 debugNormalOverride;        // Offset:  960 Size:    16 [unused]
//   float4 debugSpecularOverride;      // Offset:  976 Size:    16 [unused]
//   float4 debugGlossOverride;         // Offset:  992 Size:    16 [unused]
//   float4 debugOcclusionOverride;     // Offset: 1008 Size:    16 [unused]
//   float4 debugStreamerControl;       // Offset: 1024 Size:    16 [unused]
//   float4 emblemLUTSelector;          // Offset: 1040 Size:    16 [unused]
//   float4 colorMatrixR;               // Offset: 1056 Size:    16 [unused]
//   float4 colorMatrixG;               // Offset: 1072 Size:    16 [unused]
//   float4 colorMatrixB;               // Offset: 1088 Size:    16 [unused]
//   float4 gameTime;                   // Offset: 1104 Size:    16 [unused]
//   float4 gameTick;                   // Offset: 1120 Size:    16 [unused]
//   float4 subpixelOffset;             // Offset: 1136 Size:    16 [unused]
//   float4 viewportDimensions;         // Offset: 1152 Size:    16 [unused]
//   float4 viewSpaceScaleBias;         // Offset: 1168 Size:    16 [unused]
//   float4 ui3dUVSetup0;               // Offset: 1184 Size:    16 [unused]
//   float4 ui3dUVSetup1;               // Offset: 1200 Size:    16 [unused]
//   float4 ui3dUVSetup2;               // Offset: 1216 Size:    16 [unused]
//   float4 ui3dUVSetup3;               // Offset: 1232 Size:    16 [unused]
//   float4 ui3dUVSetup4;               // Offset: 1248 Size:    16 [unused]
//   float4 ui3dUVSetup5;               // Offset: 1264 Size:    16 [unused]
//   float4 clipSpaceLookupScale;       // Offset: 1280 Size:    16 [unused]
//   float4 clipSpaceLookupOffset;      // Offset: 1296 Size:    16 [unused]
//   uint4 computeSpriteControl;        // Offset: 1312 Size:    16
//   float4 invBcTexSizes;              // Offset: 1328 Size:    16
//   float4 invMaskTexSizes;            // Offset: 1344 Size:    16
//   float4 relHDRExposure;             // Offset: 1360 Size:    16
//   uint4 triDensityFlags;             // Offset: 1376 Size:    16 [unused]
//   float4 triDensityParams;           // Offset: 1392 Size:    16 [unused]
//   float4 voldecalRevealTextureInfo;  // Offset: 1408 Size:    16 [unused]
//   float4 extraClipPlane0;            // Offset: 1424 Size:    16 [unused]
//   float4 extraClipPlane1;            // Offset: 1440 Size:    16 [unused]
//   float4 shaderDebug;                // Offset: 1456 Size:    16 [unused]
//   uint isDepthHack;                  // Offset: 1472 Size:     4 [unused]
//
// }
//
// cbuffer LightingGlobals
// {
//
//   uint numLights;                    // Offset:    0 Size:     4 [unused]
//   uint numRefProbes;                 // Offset:    4 Size:     4 [unused]
//   uint numRefProbeBlends;            // Offset:    8 Size:     4 [unused]
//   uint numDedicatedLights;           // Offset:   12 Size:     4 [unused]
//   float4 clearColor;                 // Offset:   16 Size:    16 [unused]
//   float4 sssParams;                  // Offset:   32 Size:    16 [unused]
//   
//   struct CoreFogConstants
//   {
//       
//       float4 fogColor;               // Offset:   48
//       float4 sunFogColor;            // Offset:   64
//       float K0;                      // Offset:   80
//       float skyK0;                   // Offset:   84
//       float expMul;                  // Offset:   88
//       float expAdd;                  // Offset:   92
//       float heightFalloff;           // Offset:   96
//       float skyHeightFalloff;        // Offset:  100
//       float K0b;                     // Offset:  104
//       float padding0;                // Offset:  108
//       float skyK0b;                  // Offset:  112
//       float3 wldSunFogDir;           // Offset:  116
//       float2 sunFogAngles;           // Offset:  128
//       float atmospheresunstrength;   // Offset:  136
//       float atmosphereMieSchlickK;   // Offset:  140
//       float2 atmosphereskyfogdensityatcamera;// Offset:  144
//       float atmosphereExtinctionIntensity;// Offset:  152
//       float atmosphereInScatterIntensity;// Offset:  156
//       float3 atmosphereRayleighDensity;// Offset:  160
//       float atmospherehazebasedist;  // Offset:  172
//       float3 atmosphereMieDensity;   // Offset:  176
//       float atmospherehazefadedist;  // Offset:  188
//       float3 atmosphereTotalDensity; // Offset:  192
//       float worldfogskysize;         // Offset:  204
//       float3 atmosphereInScatterIntensityOverTotalDensity;// Offset:  208
//       float blendAmount;             // Offset:  220
//       float2 atmosphereskyfogheightdensityscale;// Offset:  224
//       float2 atmospherefogdistanceoffset;// Offset:  232
//       float2 atmospherefogdistancedensityscale;// Offset:  240
//       float2 atmospherefogheightdensityscale;// Offset:  248
//       float2 atmospherefogdensityatcamera;// Offset:  256
//       float2 padding1;               // Offset:  264
//
//   } fogConstants;                    // Offset:   48 Size:   224 [unused]
//   
//   struct CoreSunConstants
//   {
//       
//       float3 wldDir;                 // Offset:  272
//       float splitDepthOffset;        // Offset:  284
//       float3 color;                  // Offset:  288
//       float specScale;               // Offset:  300
//       float globalProbeExposure;     // Offset:  304
//       float3 avgGlobalProbeColor;    // Offset:  308
//       float4 splitPinTransform[3];   // Offset:  320
//       uint sunCookieIndex;           // Offset:  368
//       float sunCookieIntensity;      // Offset:  372
//       float sunVolumetricCookieIntensity;// Offset:  376
//       uint toolsGfxDisableSunShadow; // Offset:  380
//       float4 sunCookieTransform[2];  // Offset:  384
//       float intensity;               // Offset:  416
//       int splitArrayOffset;          // Offset:  420
//       float2 pad0;                   // Offset:  424
//       
//       struct SSTLightingConstants
//       {
//           
//           struct SSTConstants
//           {
//               
//               float2 dimensionInTiles;// Offset:  432
//               float inchesPerTexel;  // Offset:  440
//               float spanInInches;    // Offset:  444
//
//           } constants;               // Offset:  432
//           row_major float4x4 offToPinTransform;// Offset:  448
//           float coordScale;          // Offset:  512
//           uint rootOffset;           // Offset:  516
//           uint2 pad0;                // Offset:  520
//
//       } sstLightingConstants;        // Offset:  432
//
//   } sunConstants;                    // Offset:  272 Size:   256 [unused]
//   
//   struct SSTMinMaxConstants
//   {
//       
//       float2 sstToMinMaxScale;       // Offset:  528
//       float2 pad0;                   // Offset:  536
//       float2 halfMinTexelSize;       // Offset:  544
//       float rcpInchesDimLevel0;      // Offset:  552
//       float shadowBiasInches;        // Offset:  556
//
//   } minMaxConstants;                 // Offset:  528 Size:    32 [unused]
//   
//   struct CoreGlobalProbePack
//   {
//       
//       uint4 data[3];                 // Offset:  560
//
//   } globalProbeConstants;            // Offset:  560 Size:    48 [unused]
//   
//   struct CoreWeatherConsts
//   {
//       
//       float rain;                    // Offset:  608
//       float windSpeed;               // Offset:  612
//       float windDirSin;              // Offset:  616
//       float windDirCos;              // Offset:  620
//       float weatherTile;             // Offset:  624
//       float3 weatherVector;          // Offset:  628
//       float3 weatherVector2;         // Offset:  640
//       float padding0;                // Offset:  652
//       float3 weatherTint;            // Offset:  656
//       float padding1;                // Offset:  668
//       float3 weatherTint2;           // Offset:  672
//       float padding2;                // Offset:  684
//
//   } weather;                         // Offset:  608 Size:    80 [unused]
//   
//   struct SSTLightingConstants
//   {
//       
//       struct SSTConstants
//       {
//           
//           float2 dimensionInTiles;   // Offset:  688
//           float inchesPerTexel;      // Offset:  696
//           float spanInInches;        // Offset:  700
//
//       } constants;                   // Offset:  688
//       row_major float4x4 offToPinTransform;// Offset:  704
//       float coordScale;              // Offset:  768
//       uint rootOffset;               // Offset:  772
//       uint2 pad0;                    // Offset:  776
//
//   } outdoorSSTConstants;             // Offset:  688 Size:    96 [unused]
//   float4 pinToWorldZ;                // Offset:  784 Size:    16 [unused]
//   
//   struct CoreVolumetricConstants
//   {
//       
//       uint firstSpotLight;           // Offset:  800
//       uint lastSpotLight;            // Offset:  804
//       uint firstOmniLight;           // Offset:  808
//       uint lastOmniLight;            // Offset:  812
//       uint firstProbe;               // Offset:  816
//       uint lastProbe;                // Offset:  820
//       uint padding0;                 // Offset:  824
//       uint padding1;                 // Offset:  828
//
//   } volumetric;                      // Offset:  800 Size:    32 [unused]
//   uint viewID;                       // Offset:  832 Size:     4 [unused]
//   uint enableCountDebug;             // Offset:  836 Size:     4 [unused]
//   uint centerGroupIDx;               // Offset:  840 Size:     4 [unused]
//   uint centerGroupIDy;               // Offset:  844 Size:     4 [unused]
//   uint viewmodelSunShadowRaw;        // Offset:  848 Size:     4 [unused]
//   uint debugDrawOverlayType;         // Offset:  852 Size:     4 [unused]
//   float drawNumLighstScale;          // Offset:  856 Size:     4 [unused]
//   float drawNumLightsAlpha;          // Offset:  860 Size:     4 [unused]
//   uint probeDebug;                   // Offset:  864 Size:     4 [unused]
//   float probeDebugRadius;            // Offset:  868 Size:     4 [unused]
//   uint showSunVis;                   // Offset:  872 Size:     4 [unused]
//   uint enableAO;                     // Offset:  876 Size:     4 [unused]
//   uint showAO;                       // Offset:  880 Size:     4 [unused]
//   uint numGpuCullTilesWidth;         // Offset:  884 Size:     4 [unused]
//   uint numGpuCullTilesHeight;        // Offset:  888 Size:     4 [unused]
//   int permuteHighlight;              // Offset:  892 Size:     4 [unused]
//   uint overdrawOverlayMaxValue;      // Offset:  896 Size:     4 [unused]
//   float overdrawOverlayAlpha;        // Offset:  900 Size:     4 [unused]
//   uint overdrawDecals;               // Offset:  904 Size:     4 [unused]
//   uint overdrawDecalsLayers;         // Offset:  908 Size:     4 [unused]
//   uint permuteStride;                // Offset:  912 Size:     4 [unused]
//   uint numDecals;                    // Offset:  916 Size:     4 [unused]
//   uint numStaticDecals;              // Offset:  920 Size:     4 [unused]
//   uint numDynamicDecals;             // Offset:  924 Size:     4 [unused]
//   uint numOverrideProbes;            // Offset:  928 Size:     4 [unused]
//   uint enableDitheredShadow;         // Offset:  932 Size:     4 [unused]
//   uint oitMaxEntries;                // Offset:  936 Size:     4
//   uint numAttenuationVolumes;        // Offset:  940 Size:     4 [unused]
//
// }
//
// Resource bind info for spritePos
// {
//
//   struct FxComputeSprite_PosPack
//   {
//       
//       uint4 data[2];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    32
//
// }
//
// Resource bind info for spriteData
// {
//
//   struct FxComputeSprite_DataPack
//   {
//       
//       uint4 data[4];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    64
//
// }
//
// Resource bind info for spriteExtra
// {
//
//   struct FxComputeSprite_ExtraPack
//   {
//       
//       uint4 data[3];                 // Offset:    0
//
//   } $Element;                        // Offset:    0 Size:    48
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// computeSpritesSampler             sampler      NA          NA             s0      1 
// floatZSampler                     texture  float4          2d             t0      1 
// spritePos                         texture  struct         r/o             t1      1 
// spriteData                        texture  struct         r/o             t2      1 
// spriteExtra                       texture  struct         r/o             t3      1 
// frameBuffer                       texture  float4          2d            t21      1 
// oitFallbackBuffer                 texture  float4          2d            t22      1 
// oit_Nodes                         texture   uint2     2darray            t24      1 
// spriteCullRough                   texture    uint     2darray            t25      1 
// spriteCullRoughRough              texture    uint     2darray            t26      1 
// lmapTex                           texture  float4     2darray            t29      1 
// materialTexBC7                    texture  float4     2darray            t42      1 
// materialTexBC3                    texture  float4     2darray            t43      1 
// materialTexMask                   texture  float4     2darray            t45      1 
// frameAdaptiveTransparencyDepth        UAV  float4          2d             u2      1 
// frameAdaptiveTransparencyTrans        UAV  float4          2d             u3      1 
// frameAlphaResult                      UAV   float          2d             u4      1 
// frameBufferW                          UAV  float4          2d             u5      1 
// gOit_Pixels                           UAV    uint          2d             u6      1 
// frameDepthW                           UAV   float          2d             u7      1 
// PerSceneConsts                    cbuffer      NA          NA            cb1      1 
// LightingGlobals                   cbuffer      NA          NA            cb2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB1[86], immediateIndexed
dcl_constantbuffer CB2[59], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_structured t1, 32
dcl_resource_structured t2, 64
dcl_resource_structured t3, 48
dcl_resource_texture2d (float,float,float,float) t21
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2darray (uint,uint,uint,uint) t24
dcl_resource_texture2darray (uint,uint,uint,uint) t25
dcl_resource_texture2darray (uint,uint,uint,uint) t26
dcl_resource_texture2darray (float,float,float,float) t29
dcl_resource_texture2darray (float,float,float,float) t42
dcl_resource_texture2darray (float,float,float,float) t43
dcl_resource_texture2darray (float,float,float,float) t45
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_uav_typed_texture2d (float,float,float,float) u3
dcl_uav_typed_texture2d (float,float,float,float) u4
dcl_uav_typed_texture2d (float,float,float,float) u5
dcl_uav_typed_texture2d (uint,uint,uint,uint) u6
dcl_uav_typed_texture2d (float,float,float,float) u7
dcl_input vThreadIDInGroupFlattened
dcl_input vThreadGroupID.xy
dcl_input vThreadID.xy
dcl_temps 26
dcl_indexableTemp x0[4], 4
dcl_indexableTemp x1[4], 4
dcl_indexableTemp x2[4], 4
dcl_indexableTemp x3[4], 4
dcl_indexableTemp x4[4], 4
dcl_indexableTemp x5[4], 4
dcl_indexableTemp x6[4], 4
dcl_indexableTemp x7[4], 4
dcl_indexableTemp x8[4], 4
dcl_indexableTemp x9[4], 4
dcl_indexableTemp x10[4], 4
dcl_indexableTemp x11[4], 4
dcl_indexableTemp x12[4], 4
dcl_indexableTemp x13[4], 4
dcl_indexableTemp x14[4], 4
dcl_indexableTemp x15[4], 4
dcl_indexableTemp x16[4], 4
dcl_indexableTemp x17[4], 4
dcl_tgsm_structured g0, 20, 64
dcl_tgsm_structured g1, 20, 64
dcl_thread_group 8, 8, 1
ftou r0.xy, cb1[44].xyxx
ult r0.xy, r0.xyxx, vThreadID.xyxx
or r0.x, r0.y, r0.x
if_nz r0.x
  ret 
endif 
ld_uav_typed_indexable(texture2d)(uint,uint,uint,uint) r0.x, vThreadID.xyyy, u6.xyzw
ieq r0.y, r0.x, l(0)
ieq r0.z, cb1[82].x, l(0)
and r0.y, r0.z, r0.y
if_nz r0.y
  store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
  mov r1.xy, vThreadID.xyxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t0.yxzw
  store_uav_typed u7.xyzw, vThreadID.xyyy, r0.yyyy
  ret 
endif 
and r0.y, r0.x, l(0x0000ffff)
umin r0.y, r0.y, cb2[58].z
store_structured g0.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000,1000000015047466219876688855040.000000)
store_structured g1.xyzw, vThreadIDInGroupFlattened.x, l(0), l(1.000000,1.000000,1.000000,1.000000)
if_nz r0.y
  ult r1.xyz, l(1, 2, 3, 0), r0.yyyy
  if_nz r0.y
    mov r2.xy, vThreadID.xyxx
    mov r2.zw, l(0,0,0,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.z, r2.xyzw, t24.xzyw
    and r2.xyz, r0.zzzz, l(-2048, 1, 2046, 0)
    movc r3.x, r2.y, r0.z, l(0)
    utof r0.w, r2.z
    mad r1.w, -r0.w, l(0.00048876), l(1.000000)
    lt r0.w, l(409.200012), r0.w
    if_nz r0.w
      ushr r0.w, r0.z, l(2)
      and r0.w, r0.w, l(0x3ffffe00)
      ge r2.y, r0.w, l(0.00049219)
      if_nz r2.y
        add r0.w, -r0.w, l(1.000000)
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        mov r2.y, l(3)
        loop 
          ilt r2.z, r2.y, l(0)
          breakc_nz r2.z
          ige r2.z, r2.y, l(0)
          if_nz r2.z
            ishl r2.z, r2.y, l(2)
            iadd r2.w, r2.z, l(4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.z, g1.xxxx
            mul r2.z, r1.w, r2.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.z
          endif 
          iadd r2.y, r2.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(0), r0.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(0), r1.w
        ld_structured r0.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r0.w, r0.w, l(1000000015047466219876688855040.000000)
        if_nz r0.w
          mov r0.w, l(2)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ishl r2.y, r0.w, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x0[r0.w + 0].x, r2.y
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, x0[2].x
          mov r2.y, x0[3].x
          lt r0.w, r2.y, r0.w
          movc r2.yz, r0.wwww, l(0,3,2,0), l(0,2,1,0)
          mov r0.w, l(2)
          loop 
            ige r2.w, r0.w, l(4)
            breakc_nz r2.w
            ige r2.w, r0.w, r2.y
            if_nz r2.w
              ishl r2.w, r0.w, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
          mov r0.w, l(1)
          loop 
            ige r2.y, r0.w, l(4)
            breakc_nz r2.y
            ige r2.y, r0.w, r2.z
            if_nz r2.y
              ishl r2.y, r0.w, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r0.w, r0.w, l(1)
          endloop 
        endif 
      endif 
    else 
      mov r0.z, l(0)
    endif 
  else 
    mov r2.x, l(-2048)
    mov r1.w, l(1.000000)
    mov r3.x, l(0)
    mov r0.z, l(0)
  endif 
  if_nz r1.x
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,1,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r0.w, r4.xyzw, t24.xzwy
    and r2.yz, r0.wwww, l(0, 1, 2046, 0)
    umax r4.x, r0.w, r3.x
    umin r4.y, r3.x, r0.w
    mov r3.y, l(0)
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.x, r2.z
    mad r2.y, -r1.x, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.x, l(409.200012), r1.x
    if_nz r1.x
      umax r0.z, r0.w, r0.z
      ushr r1.x, r0.w, l(2)
      and r1.x, r1.x, l(0x3ffffe00)
      ge r2.z, r1.x, l(0.00049219)
      if_nz r2.z
        add r1.x, -r1.x, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.x
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        mul r1.x, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.x
        ld_structured r1.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.x, r1.x, l(1000000015047466219876688855040.000000)
        if_nz r1.x
          mov r1.x, l(2)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.x, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x1[r1.x + 0].x, r2.y
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, x1[2].x
          mov r2.y, x1[3].x
          lt r1.x, r2.y, r1.x
          movc r2.yz, r1.xxxx, l(0,3,2,0), l(0,2,1,0)
          mov r1.x, l(2)
          loop 
            ige r2.w, r1.x, l(4)
            breakc_nz r2.w
            ige r2.w, r1.x, r2.y
            if_nz r2.w
              ishl r2.w, r1.x, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
          mov r1.x, l(1)
          loop 
            ige r2.y, r1.x, l(4)
            breakc_nz r2.y
            ige r2.y, r1.x, r2.z
            if_nz r2.y
              ishl r2.y, r1.x, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.x, r1.x, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r0.w, l(11), l(0), l(1), r0.w
  else 
    mov r0.w, l(-2047)
    mov r3.y, l(0)
  endif 
  if_nz r1.y
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,2,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r4.xyzw, t24.yxzw
    and r2.yz, r1.xxxx, l(0, 1, 2046, 0)
    umax r1.y, r1.x, r3.y
    umax r4.x, r1.y, r3.x
    umin r4.y, r3.x, r1.y
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.y, r2.z
    mad r2.y, -r1.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.y, l(409.200012), r1.y
    if_nz r1.y
      umax r0.z, r0.z, r1.x
      ushr r1.y, r1.x, l(2)
      and r1.y, r1.y, l(0x3ffffe00)
      ge r2.z, r1.y, l(0.00049219)
      if_nz r2.z
        add r1.y, -r1.y, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.y
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        mul r1.y, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.y
        ld_structured r1.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.y, r1.y, l(1000000015047466219876688855040.000000)
        if_nz r1.y
          mov r1.y, l(2)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.y, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x2[r1.y + 0].x, r2.y
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, x2[2].x
          mov r2.y, x2[3].x
          lt r1.y, r2.y, r1.y
          movc r2.yz, r1.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r1.y, l(2)
          loop 
            ige r2.w, r1.y, l(4)
            breakc_nz r2.w
            ige r2.w, r1.y, r2.y
            if_nz r2.w
              ishl r2.w, r1.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
          mov r1.y, l(1)
          loop 
            ige r2.y, r1.y, l(4)
            breakc_nz r2.y
            ige r2.y, r1.y, r2.z
            if_nz r2.y
              ishl r2.y, r1.y, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.y, r1.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.x, l(11), l(0), l(2), r1.x
  else 
    mov r1.x, l(-2046)
  endif 
  if_nz r1.z
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,3,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r4.xyzw, t24.xyzw
    and r2.yz, r1.yyyy, l(0, 1, 2046, 0)
    umax r1.z, r1.y, r3.y
    umax r4.x, r1.z, r3.x
    umin r4.y, r3.x, r1.z
    movc r3.xy, r2.yyyy, r4.xyxx, r3.xyxx
    utof r1.z, r2.z
    mad r2.y, -r1.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.y
    lt r1.z, l(409.200012), r1.z
    if_nz r1.z
      umax r0.z, r0.z, r1.y
      ushr r1.z, r1.y, l(2)
      and r1.z, r1.z, l(0x3ffffe00)
      ge r2.z, r1.z, l(0.00049219)
      if_nz r2.z
        add r1.z, -r1.z, l(1.000000)
        mov r4.y, l(4)
        mov r2.zw, l(0,0,4,0)
        loop 
          ige r3.z, r2.w, l(4)
          breakc_nz r3.z
          ishl r3.z, r2.w, l(2)
          ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
          ge r3.z, r3.z, r1.z
          if_nz r3.z
            mov r2.z, r2.w
            break 
          endif 
          iadd r4.x, r2.w, l(1)
          mov r2.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r2.z, l(2)
        iadd r3.z, r2.w, l(-4)
        ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
        movc r3.z, r2.z, r3.z, l(1.000000)
        mov r3.w, l(3)
        loop 
          ilt r4.x, r3.w, l(0)
          breakc_nz r4.x
          ige r4.x, r3.w, r2.z
          if_nz r4.x
            ishl r4.x, r3.w, l(2)
            iadd r4.y, r4.x, l(4)
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
            mul r4.x, r2.y, r4.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r4.y, r4.x
          endif 
          iadd r3.w, r3.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        mul r1.z, r2.y, r3.z
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r1.z
        ld_structured r1.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r1.z, r1.z, l(1000000015047466219876688855040.000000)
        if_nz r1.z
          mov r1.z, l(2)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ishl r2.y, r1.z, l(2)
            ld_structured r2.z, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            iadd r2.y, r2.y, l(-4)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.y, g0.xxxx
            add r2.z, -r2.w, r2.z
            ld_structured r2.yw, vThreadIDInGroupFlattened.x, r2.y, g1.xxxy
            add r2.y, -r2.w, r2.y
            mul r2.y, r2.y, r2.z
            mov x3[r1.z + 0].x, r2.y
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, x3[2].x
          mov r2.y, x3[3].x
          lt r1.z, r2.y, r1.z
          movc r2.yz, r1.zzzz, l(0,3,2,0), l(0,2,1,0)
          mov r1.z, l(2)
          loop 
            ige r2.w, r1.z, l(4)
            breakc_nz r2.w
            ige r2.w, r1.z, r2.y
            if_nz r2.w
              ishl r2.w, r1.z, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
          mov r1.z, l(1)
          loop 
            ige r2.y, r1.z, l(4)
            breakc_nz r2.y
            ige r2.y, r1.z, r2.z
            if_nz r2.y
              ishl r2.y, r1.z, l(2)
              iadd r2.w, r2.y, l(4)
              ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.y, r2.w
            endif 
            iadd r1.z, r1.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.y, l(11), l(0), l(3), r1.y
  else 
    mov r1.y, l(-2045)
  endif 
  ult r4.xyzw, l(4, 5, 6, 7), r0.yyyy
  if_nz r4.x
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,4,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r1.z, r5.xyzw, t24.xzyw
    and r2.yz, r1.zzzz, l(0, 1, 2046, 0)
    umax r2.w, r1.z, r3.y
    umax r5.x, r2.w, r3.x
    umin r5.y, r3.x, r2.w
    movc r3.xy, r2.yyyy, r5.xyxx, r3.xyxx
    utof r2.y, r2.z
    mad r2.z, -r2.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.z
    lt r2.y, l(409.200012), r2.y
    if_nz r2.y
      umax r0.z, r0.z, r1.z
      ushr r2.y, r1.z, l(2)
      and r2.y, r2.y, l(0x3ffffe00)
      ge r2.w, r2.y, l(0.00049219)
      if_nz r2.w
        add r2.y, -r2.y, l(1.000000)
        mov r5.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r2.w, r3.w, l(4)
          breakc_nz r2.w
          ishl r2.w, r3.w, l(2)
          ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
          ge r2.w, r2.w, r2.y
          if_nz r2.w
            mov r3.z, r3.w
            break 
          endif 
          iadd r5.x, r3.w, l(1)
          mov r3.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r2.w, r3.z, l(2)
        iadd r3.w, r2.w, l(-4)
        ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
        movc r3.w, r3.z, r3.w, l(1.000000)
        mov r4.x, l(3)
        loop 
          ilt r5.x, r4.x, l(0)
          breakc_nz r5.x
          ige r5.x, r4.x, r3.z
          if_nz r5.x
            ishl r5.x, r4.x, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.z, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.x, r4.x, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        mul r2.y, r2.z, r3.w
        store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r2.y
        ld_structured r2.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.y, r2.y, l(1000000015047466219876688855040.000000)
        if_nz r2.y
          mov r2.y, l(2)
          loop 
            ige r2.z, r2.y, l(4)
            breakc_nz r2.z
            ishl r2.z, r2.y, l(2)
            ld_structured r2.w, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            iadd r2.z, r2.z, l(-4)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.z, g0.xxxx
            add r2.w, r2.w, -r3.z
            ld_structured r3.zw, vThreadIDInGroupFlattened.x, r2.z, g1.xxxy
            add r2.z, -r3.w, r3.z
            mul r2.z, r2.z, r2.w
            mov x4[r2.y + 0].x, r2.z
            iadd r2.y, r2.y, l(1)
          endloop 
          mov r2.y, x4[2].x
          mov r2.z, x4[3].x
          lt r2.y, r2.z, r2.y
          movc r2.yz, r2.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r2.y
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.y, l(1)
          loop 
            ige r2.w, r2.y, l(4)
            breakc_nz r2.w
            ige r2.w, r2.y, r2.z
            if_nz r2.w
              ishl r2.w, r2.y, l(2)
              iadd r3.z, r2.w, l(4)
              ld_structured r3.z, vThreadIDInGroupFlattened.x, r3.z, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r2.w, r3.z
            endif 
            iadd r2.y, r2.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r1.z, l(11), l(0), l(4), r1.z
  else 
    mov r1.z, l(-2044)
  endif 
  if_nz r4.y
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,5,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.y, r5.xyzw, t24.xyzw
    and r2.zw, r2.yyyy, l(0, 0, 1, 2046)
    umax r3.z, r2.y, r3.y
    umax r4.x, r3.z, r3.x
    umin r4.y, r3.x, r3.z
    movc r3.xy, r2.zzzz, r4.xyxx, r3.xyxx
    utof r2.z, r2.w
    mad r2.w, -r2.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r2.w
    lt r2.z, l(409.200012), r2.z
    if_nz r2.z
      umax r0.z, r0.z, r2.y
      ushr r2.z, r2.y, l(2)
      and r2.z, r2.z, l(0x3ffffe00)
      ge r3.z, r2.z, l(0.00049219)
      if_nz r3.z
        add r2.z, -r2.z, l(1.000000)
        mov r4.y, l(4)
        mov r3.zw, l(0,0,4,0)
        loop 
          ige r5.x, r3.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r3.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r2.z
          if_nz r5.x
            mov r3.z, r3.w
            break 
          endif 
          iadd r4.x, r3.w, l(1)
          mov r3.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r3.z, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r3.z, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r5.x, r4.y, l(0)
          breakc_nz r5.x
          ige r5.x, r4.y, r3.z
          if_nz r5.x
            ishl r5.x, r4.y, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r2.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        mul r2.z, r2.w, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.z
        ld_structured r2.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.z, r2.z, l(1000000015047466219876688855040.000000)
        if_nz r2.z
          mov r2.z, l(2)
          loop 
            ige r2.w, r2.z, l(4)
            breakc_nz r2.w
            ishl r2.w, r2.z, l(2)
            ld_structured r3.z, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            iadd r2.w, r2.w, l(-4)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r2.w, g0.xxxx
            add r3.z, -r3.w, r3.z
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r2.w, g1.xyxx
            add r2.w, -r4.y, r4.x
            mul r2.w, r2.w, r3.z
            mov x5[r2.z + 0].x, r2.w
            iadd r2.z, r2.z, l(1)
          endloop 
          mov r2.z, x5[2].x
          mov r2.w, x5[3].x
          lt r2.z, r2.w, r2.z
          movc r2.zw, r2.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ige r3.w, r3.z, r2.z
            if_nz r3.w
              ishl r3.w, r3.z, l(2)
              iadd r4.x, r3.w, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r4.x
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r2.z, l(1)
          loop 
            ige r3.z, r2.z, l(4)
            breakc_nz r3.z
            ige r3.z, r2.z, r2.w
            if_nz r3.z
              ishl r3.z, r2.z, l(2)
              iadd r3.w, r3.z, l(4)
              ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r3.w
            endif 
            iadd r2.z, r2.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.y, l(11), l(0), l(5), r2.y
  else 
    mov r2.y, l(-2043)
  endif 
  if_nz r4.z
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,6,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.z, r5.xyzw, t24.xzyw
    and r3.zw, r2.zzzz, l(0, 0, 1, 2046)
    umax r2.w, r2.z, r3.y
    umax r4.x, r2.w, r3.x
    umin r4.y, r3.x, r2.w
    movc r3.xy, r3.zzzz, r4.xyxx, r3.xyxx
    utof r2.w, r3.w
    mad r3.z, -r2.w, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.z
    lt r2.w, l(409.200012), r2.w
    if_nz r2.w
      umax r0.z, r0.z, r2.z
      ushr r2.w, r2.z, l(2)
      and r2.w, r2.w, l(0x3ffffe00)
      ge r3.w, r2.w, l(0.00049219)
      if_nz r3.w
        add r2.w, -r2.w, l(1.000000)
        mov r4.y, l(4)
        mov r5.xy, l(4,0,0,0)
        loop 
          ige r3.w, r5.y, l(4)
          breakc_nz r3.w
          ishl r3.w, r5.y, l(2)
          ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
          ge r3.w, r3.w, r2.w
          if_nz r3.w
            mov r5.x, r5.y
            break 
          endif 
          iadd r4.x, r5.y, l(1)
          mov r5.xy, r4.yxyy
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r3.w, r5.x, l(2)
        iadd r4.x, r3.w, l(-4)
        ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
        movc r4.x, r5.x, r4.x, l(1.000000)
        mov r4.y, l(3)
        loop 
          ilt r4.z, r4.y, l(0)
          breakc_nz r4.z
          ige r4.z, r4.y, r5.x
          if_nz r4.z
            ishl r4.z, r4.y, l(2)
            iadd r5.y, r4.z, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g1.xxxx
            mul r4.z, r3.z, r4.z
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r4.z
          endif 
          iadd r4.y, r4.y, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        mul r2.w, r3.z, r4.x
        store_structured g1.x, vThreadIDInGroupFlattened.x, r3.w, r2.w
        ld_structured r2.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r2.w, r2.w, l(1000000015047466219876688855040.000000)
        if_nz r2.w
          mov r2.w, l(2)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ishl r3.z, r2.w, l(2)
            ld_structured r3.w, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            iadd r3.z, r3.z, l(-4)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.z, g0.xxxx
            add r3.w, r3.w, -r4.x
            ld_structured r4.xy, vThreadIDInGroupFlattened.x, r3.z, g1.xyxx
            add r3.z, -r4.y, r4.x
            mul r3.z, r3.z, r3.w
            mov x6[r2.w + 0].x, r3.z
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, x6[2].x
          mov r3.z, x6[3].x
          lt r2.w, r3.z, r2.w
          movc r3.zw, r2.wwww, l(0,0,3,2), l(0,0,2,1)
          mov r2.w, l(2)
          loop 
            ige r4.x, r2.w, l(4)
            breakc_nz r4.x
            ige r4.x, r2.w, r3.z
            if_nz r4.x
              ishl r4.x, r2.w, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
          mov r2.w, l(1)
          loop 
            ige r3.z, r2.w, l(4)
            breakc_nz r3.z
            ige r3.z, r2.w, r3.w
            if_nz r3.z
              ishl r3.z, r2.w, l(2)
              iadd r4.x, r3.z, l(4)
              ld_structured r4.x, vThreadIDInGroupFlattened.x, r4.x, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r3.z, r4.x
            endif 
            iadd r2.w, r2.w, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.z, l(11), l(0), l(6), r2.z
  else 
    mov r2.z, l(-2042)
  endif 
  if_nz r4.w
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,7,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r2.w, r4.xyzw, t24.xzwy
    and r3.zw, r2.wwww, l(0, 0, 1, 2046)
    umax r4.x, r2.w, r3.y
    umax r5.x, r3.x, r4.x
    umin r5.y, r3.x, r4.x
    movc r3.xy, r3.zzzz, r5.xyxx, r3.xyxx
    utof r3.z, r3.w
    mad r3.w, -r3.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r3.w
    lt r3.z, l(409.200012), r3.z
    if_nz r3.z
      umax r0.z, r0.z, r2.w
      ushr r3.z, r2.w, l(2)
      and r3.z, r3.z, l(0x3ffffe00)
      ge r4.x, r3.z, l(0.00049219)
      if_nz r4.x
        add r3.z, -r3.z, l(1.000000)
        mov r4.y, l(4)
        mov r4.zw, l(0,0,4,0)
        loop 
          ige r5.x, r4.w, l(4)
          breakc_nz r5.x
          ishl r5.x, r4.w, l(2)
          ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
          ge r5.x, r5.x, r3.z
          if_nz r5.x
            mov r4.z, r4.w
            break 
          endif 
          iadd r4.x, r4.w, l(1)
          mov r4.zw, r4.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r4.x, r4.z, l(2)
        iadd r4.y, r4.x, l(-4)
        ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
        movc r4.y, r4.z, r4.y, l(1.000000)
        mov r4.w, l(3)
        loop 
          ilt r5.x, r4.w, l(0)
          breakc_nz r5.x
          ige r5.x, r4.w, r4.z
          if_nz r5.x
            ishl r5.x, r4.w, l(2)
            iadd r5.y, r5.x, l(4)
            ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
            mul r5.x, r3.w, r5.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r5.y, r5.x
          endif 
          iadd r4.w, r4.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        mul r3.z, r3.w, r4.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r3.z
        ld_structured r3.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r3.z, r3.z, l(1000000015047466219876688855040.000000)
        if_nz r3.z
          mov r3.z, l(2)
          loop 
            ige r3.w, r3.z, l(4)
            breakc_nz r3.w
            ishl r3.w, r3.z, l(2)
            ld_structured r4.x, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            iadd r3.w, r3.w, l(-4)
            ld_structured r4.y, vThreadIDInGroupFlattened.x, r3.w, g0.xxxx
            add r4.x, -r4.y, r4.x
            ld_structured r4.yz, vThreadIDInGroupFlattened.x, r3.w, g1.xxyx
            add r3.w, -r4.z, r4.y
            mul r3.w, r3.w, r4.x
            mov x7[r3.z + 0].x, r3.w
            iadd r3.z, r3.z, l(1)
          endloop 
          mov r3.z, x7[2].x
          mov r3.w, x7[3].x
          lt r3.z, r3.w, r3.z
          movc r3.zw, r3.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r4.x, l(2)
          loop 
            ige r4.y, r4.x, l(4)
            breakc_nz r4.y
            ige r4.y, r4.x, r3.z
            if_nz r4.y
              ishl r4.y, r4.x, l(2)
              iadd r4.z, r4.y, l(4)
              ld_structured r4.z, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.y, r4.z
            endif 
            iadd r4.x, r4.x, l(1)
          endloop 
          mov r3.z, l(1)
          loop 
            ige r4.x, r3.z, l(4)
            breakc_nz r4.x
            ige r4.x, r3.z, r3.w
            if_nz r4.x
              ishl r4.x, r3.z, l(2)
              iadd r4.y, r4.x, l(4)
              ld_structured r4.y, vThreadIDInGroupFlattened.x, r4.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r4.y
            endif 
            iadd r3.z, r3.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r2.w, l(11), l(0), l(7), r2.w
  else 
    mov r2.w, l(-2041)
  endif 
  ult r4.xyzw, l(8, 9, 10, 11), r0.yyyy
  if_nz r4.x
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,8,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r3.z, r5.xyzw, t24.xzyw
    and r5.xy, r3.zzzz, l(1, 2046, 0, 0)
    umax r3.w, r3.z, r3.y
    umax r6.x, r3.w, r3.x
    umin r6.y, r3.x, r3.w
    movc r3.xy, r5.xxxx, r6.xyxx, r3.xyxx
    utof r3.w, r5.y
    mad r4.x, -r3.w, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r4.x
    lt r3.w, l(409.200012), r3.w
    if_nz r3.w
      umax r0.z, r0.z, r3.z
      ushr r3.w, r3.z, l(2)
      and r3.w, r3.w, l(0x3ffffe00)
      ge r5.x, r3.w, l(0.00049219)
      if_nz r5.x
        add r3.w, -r3.w, l(1.000000)
        mov r5.y, l(4)
        mov r5.zw, l(0,0,4,0)
        loop 
          ige r6.x, r5.w, l(4)
          breakc_nz r6.x
          ishl r6.x, r5.w, l(2)
          ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
          ge r6.x, r6.x, r3.w
          if_nz r6.x
            mov r5.z, r5.w
            break 
          endif 
          iadd r5.x, r5.w, l(1)
          mov r5.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r5.x, r5.z, l(2)
        iadd r5.y, r5.x, l(-4)
        ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
        movc r5.y, r5.z, r5.y, l(1.000000)
        mov r5.w, l(3)
        loop 
          ilt r6.x, r5.w, l(0)
          breakc_nz r6.x
          ige r6.x, r5.w, r5.z
          if_nz r6.x
            ishl r6.x, r5.w, l(2)
            iadd r6.y, r6.x, l(4)
            ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g1.xxxx
            mul r6.x, r4.x, r6.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r6.y, r6.x
          endif 
          iadd r5.w, r5.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r5.x, r3.w
        mul r3.w, r4.x, r5.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r3.w
        ld_structured r3.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r3.w, r3.w, l(1000000015047466219876688855040.000000)
        if_nz r3.w
          mov r3.w, l(2)
          loop 
            ige r4.x, r3.w, l(4)
            breakc_nz r4.x
            ishl r4.x, r3.w, l(2)
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            iadd r4.x, r4.x, l(-4)
            ld_structured r5.y, vThreadIDInGroupFlattened.x, r4.x, g0.xxxx
            add r5.x, -r5.y, r5.x
            ld_structured r5.yz, vThreadIDInGroupFlattened.x, r4.x, g1.xxyx
            add r4.x, -r5.z, r5.y
            mul r4.x, r4.x, r5.x
            mov x8[r3.w + 0].x, r4.x
            iadd r3.w, r3.w, l(1)
          endloop 
          mov r3.w, x8[2].x
          mov r4.x, x8[3].x
          lt r3.w, r4.x, r3.w
          movc r5.xy, r3.wwww, l(3,2,0,0), l(2,1,0,0)
          mov r3.w, l(2)
          loop 
            ige r4.x, r3.w, l(4)
            breakc_nz r4.x
            ige r4.x, r3.w, r5.x
            if_nz r4.x
              ishl r4.x, r3.w, l(2)
              iadd r5.z, r4.x, l(4)
              ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r4.x, r5.z
            endif 
            iadd r3.w, r3.w, l(1)
          endloop 
          mov r3.w, l(1)
          loop 
            ige r4.x, r3.w, l(4)
            breakc_nz r4.x
            ige r4.x, r3.w, r5.y
            if_nz r4.x
              ishl r4.x, r3.w, l(2)
              iadd r5.x, r4.x, l(4)
              ld_structured r5.x, vThreadIDInGroupFlattened.x, r5.x, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r4.x, r5.x
            endif 
            iadd r3.w, r3.w, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r3.z, l(11), l(0), l(8), r3.z
  else 
    mov r3.z, l(-2040)
  endif 
  if_nz r4.y
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,9,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r3.w, r5.xyzw, t24.xzwy
    and r4.xy, r3.wwww, l(1, 2046, 0, 0)
    umax r5.x, r3.w, r3.y
    umax r6.x, r3.x, r5.x
    umin r6.y, r3.x, r5.x
    movc r3.xy, r4.xxxx, r6.xyxx, r3.xyxx
    utof r4.x, r4.y
    mad r4.y, -r4.x, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r4.y
    lt r4.x, l(409.200012), r4.x
    if_nz r4.x
      umax r0.z, r0.z, r3.w
      ushr r4.x, r3.w, l(2)
      and r4.x, r4.x, l(0x3ffffe00)
      ge r5.x, r4.x, l(0.00049219)
      if_nz r5.x
        add r4.x, -r4.x, l(1.000000)
        mov r5.y, l(4)
        mov r5.zw, l(0,0,4,0)
        loop 
          ige r6.x, r5.w, l(4)
          breakc_nz r6.x
          ishl r6.x, r5.w, l(2)
          ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
          ge r6.x, r6.x, r4.x
          if_nz r6.x
            mov r5.z, r5.w
            break 
          endif 
          iadd r5.x, r5.w, l(1)
          mov r5.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r5.x, r5.z, l(2)
        iadd r5.y, r5.x, l(-4)
        ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
        movc r5.y, r5.z, r5.y, l(1.000000)
        mov r5.w, l(3)
        loop 
          ilt r6.x, r5.w, l(0)
          breakc_nz r6.x
          ige r6.x, r5.w, r5.z
          if_nz r6.x
            ishl r6.x, r5.w, l(2)
            iadd r6.y, r6.x, l(4)
            ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g1.xxxx
            mul r6.x, r4.y, r6.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r6.y, r6.x
          endif 
          iadd r5.w, r5.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r5.x, r4.x
        mul r4.x, r4.y, r5.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r4.x
        ld_structured r4.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r4.x, r4.x, l(1000000015047466219876688855040.000000)
        if_nz r4.x
          mov r4.x, l(2)
          loop 
            ige r4.y, r4.x, l(4)
            breakc_nz r4.y
            ishl r4.y, r4.x, l(2)
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r4.y, g0.xxxx
            iadd r4.y, r4.y, l(-4)
            ld_structured r5.y, vThreadIDInGroupFlattened.x, r4.y, g0.xxxx
            add r5.x, -r5.y, r5.x
            ld_structured r5.yz, vThreadIDInGroupFlattened.x, r4.y, g1.xxyx
            add r4.y, -r5.z, r5.y
            mul r4.y, r4.y, r5.x
            mov x9[r4.x + 0].x, r4.y
            iadd r4.x, r4.x, l(1)
          endloop 
          mov r4.x, x9[2].x
          mov r4.y, x9[3].x
          lt r4.x, r4.y, r4.x
          movc r4.xy, r4.xxxx, l(3,2,0,0), l(2,1,0,0)
          mov r5.x, l(2)
          loop 
            ige r5.y, r5.x, l(4)
            breakc_nz r5.y
            ige r5.y, r5.x, r4.x
            if_nz r5.y
              ishl r5.y, r5.x, l(2)
              iadd r5.z, r5.y, l(4)
              ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            endif 
            iadd r5.x, r5.x, l(1)
          endloop 
          mov r4.x, l(1)
          loop 
            ige r5.x, r4.x, l(4)
            breakc_nz r5.x
            ige r5.x, r4.x, r4.y
            if_nz r5.x
              ishl r5.x, r4.x, l(2)
              iadd r5.y, r5.x, l(4)
              ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r5.y
            endif 
            iadd r4.x, r4.x, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r3.w, l(11), l(0), l(9), r3.w
  else 
    mov r3.w, l(-2039)
  endif 
  if_nz r4.z
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,10,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r4.x, r5.xyzw, t24.yxzw
    and r4.yz, r4.xxxx, l(0, 1, 2046, 0)
    umax r5.x, r3.y, r4.x
    umax r6.x, r3.x, r5.x
    umin r6.y, r3.x, r5.x
    movc r3.xy, r4.yyyy, r6.xyxx, r3.xyxx
    utof r4.y, r4.z
    mad r4.z, -r4.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r4.z
    lt r4.y, l(409.200012), r4.y
    if_nz r4.y
      umax r0.z, r0.z, r4.x
      ushr r4.y, r4.x, l(2)
      and r4.y, r4.y, l(0x3ffffe00)
      ge r5.x, r4.y, l(0.00049219)
      if_nz r5.x
        add r4.y, -r4.y, l(1.000000)
        mov r5.y, l(4)
        mov r5.zw, l(0,0,4,0)
        loop 
          ige r6.x, r5.w, l(4)
          breakc_nz r6.x
          ishl r6.x, r5.w, l(2)
          ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
          ge r6.x, r6.x, r4.y
          if_nz r6.x
            mov r5.z, r5.w
            break 
          endif 
          iadd r5.x, r5.w, l(1)
          mov r5.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r5.x, r5.z, l(2)
        iadd r5.y, r5.x, l(-4)
        ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
        movc r5.y, r5.z, r5.y, l(1.000000)
        mov r5.w, l(3)
        loop 
          ilt r6.x, r5.w, l(0)
          breakc_nz r6.x
          ige r6.x, r5.w, r5.z
          if_nz r6.x
            ishl r6.x, r5.w, l(2)
            iadd r6.y, r6.x, l(4)
            ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g1.xxxx
            mul r6.x, r4.z, r6.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r6.y, r6.x
          endif 
          iadd r5.w, r5.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r5.x, r4.y
        mul r4.y, r4.z, r5.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r4.y
        ld_structured r4.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r4.y, r4.y, l(1000000015047466219876688855040.000000)
        if_nz r4.y
          mov r4.y, l(2)
          loop 
            ige r4.z, r4.y, l(4)
            breakc_nz r4.z
            ishl r4.z, r4.y, l(2)
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
            iadd r4.z, r4.z, l(-4)
            ld_structured r5.y, vThreadIDInGroupFlattened.x, r4.z, g0.xxxx
            add r5.x, -r5.y, r5.x
            ld_structured r5.yz, vThreadIDInGroupFlattened.x, r4.z, g1.xxyx
            add r4.z, -r5.z, r5.y
            mul r4.z, r4.z, r5.x
            mov x10[r4.y + 0].x, r4.z
            iadd r4.y, r4.y, l(1)
          endloop 
          mov r4.y, x10[2].x
          mov r4.z, x10[3].x
          lt r4.y, r4.z, r4.y
          movc r4.yz, r4.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r5.x, l(2)
          loop 
            ige r5.y, r5.x, l(4)
            breakc_nz r5.y
            ige r5.y, r5.x, r4.y
            if_nz r5.y
              ishl r5.y, r5.x, l(2)
              iadd r5.z, r5.y, l(4)
              ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            endif 
            iadd r5.x, r5.x, l(1)
          endloop 
          mov r4.y, l(1)
          loop 
            ige r5.x, r4.y, l(4)
            breakc_nz r5.x
            ige r5.x, r4.y, r4.z
            if_nz r5.x
              ishl r5.x, r4.y, l(2)
              iadd r5.y, r5.x, l(4)
              ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r5.y
            endif 
            iadd r4.y, r4.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r4.x, l(11), l(0), l(10), r4.x
  else 
    mov r4.x, l(-2038)
  endif 
  if_nz r4.w
    mov r5.xy, vThreadID.xyxx
    mov r5.zw, l(0,0,11,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r4.y, r5.xyzw, t24.xyzw
    and r4.zw, r4.yyyy, l(0, 0, 1, 2046)
    umax r5.x, r3.y, r4.y
    umax r6.x, r3.x, r5.x
    umin r6.y, r3.x, r5.x
    movc r3.xy, r4.zzzz, r6.xyxx, r3.xyxx
    utof r4.z, r4.w
    mad r4.w, -r4.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r4.w
    lt r4.z, l(409.200012), r4.z
    if_nz r4.z
      umax r0.z, r0.z, r4.y
      ushr r4.z, r4.y, l(2)
      and r4.z, r4.z, l(0x3ffffe00)
      ge r5.x, r4.z, l(0.00049219)
      if_nz r5.x
        add r4.z, -r4.z, l(1.000000)
        mov r5.y, l(4)
        mov r5.zw, l(0,0,4,0)
        loop 
          ige r6.x, r5.w, l(4)
          breakc_nz r6.x
          ishl r6.x, r5.w, l(2)
          ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
          ge r6.x, r6.x, r4.z
          if_nz r6.x
            mov r5.z, r5.w
            break 
          endif 
          iadd r5.x, r5.w, l(1)
          mov r5.zw, r5.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r5.x, r5.z, l(2)
        iadd r5.y, r5.x, l(-4)
        ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
        movc r5.y, r5.z, r5.y, l(1.000000)
        mov r5.w, l(3)
        loop 
          ilt r6.x, r5.w, l(0)
          breakc_nz r6.x
          ige r6.x, r5.w, r5.z
          if_nz r6.x
            ishl r6.x, r5.w, l(2)
            iadd r6.y, r6.x, l(4)
            ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g1.xxxx
            mul r6.x, r4.w, r6.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r6.y, r6.x
          endif 
          iadd r5.w, r5.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r5.x, r4.z
        mul r4.z, r4.w, r5.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r4.z
        ld_structured r4.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r4.z, r4.z, l(1000000015047466219876688855040.000000)
        if_nz r4.z
          mov r4.z, l(2)
          loop 
            ige r4.w, r4.z, l(4)
            breakc_nz r4.w
            ishl r4.w, r4.z, l(2)
            ld_structured r5.x, vThreadIDInGroupFlattened.x, r4.w, g0.xxxx
            iadd r4.w, r4.w, l(-4)
            ld_structured r5.y, vThreadIDInGroupFlattened.x, r4.w, g0.xxxx
            add r5.x, -r5.y, r5.x
            ld_structured r5.yz, vThreadIDInGroupFlattened.x, r4.w, g1.xxyx
            add r4.w, -r5.z, r5.y
            mul r4.w, r4.w, r5.x
            mov x11[r4.z + 0].x, r4.w
            iadd r4.z, r4.z, l(1)
          endloop 
          mov r4.z, x11[2].x
          mov r4.w, x11[3].x
          lt r4.z, r4.w, r4.z
          movc r4.zw, r4.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r5.x, l(2)
          loop 
            ige r5.y, r5.x, l(4)
            breakc_nz r5.y
            ige r5.y, r5.x, r4.z
            if_nz r5.y
              ishl r5.y, r5.x, l(2)
              iadd r5.z, r5.y, l(4)
              ld_structured r5.z, vThreadIDInGroupFlattened.x, r5.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r5.y, r5.z
            endif 
            iadd r5.x, r5.x, l(1)
          endloop 
          mov r4.z, l(1)
          loop 
            ige r5.x, r4.z, l(4)
            breakc_nz r5.x
            ige r5.x, r4.z, r4.w
            if_nz r5.x
              ishl r5.x, r4.z, l(2)
              iadd r5.y, r5.x, l(4)
              ld_structured r5.y, vThreadIDInGroupFlattened.x, r5.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r5.y
            endif 
            iadd r4.z, r4.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r4.y, l(11), l(0), l(11), r4.y
  else 
    mov r4.y, l(-2037)
  endif 
  ult r5.xyzw, l(12, 13, 14, 15), r0.yyyy
  if_nz r5.x
    mov r6.xy, vThreadID.xyxx
    mov r6.zw, l(0,0,12,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r6.xyzw, t24.xzyw
    and r6.xy, r4.zzzz, l(1, 2046, 0, 0)
    umax r4.w, r3.y, r4.z
    umax r7.x, r3.x, r4.w
    umin r7.y, r3.x, r4.w
    movc r3.xy, r6.xxxx, r7.xyxx, r3.xyxx
    utof r4.w, r6.y
    mad r5.x, -r4.w, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r5.x
    lt r4.w, l(409.200012), r4.w
    if_nz r4.w
      umax r0.z, r0.z, r4.z
      ushr r4.w, r4.z, l(2)
      and r4.w, r4.w, l(0x3ffffe00)
      ge r6.x, r4.w, l(0.00049219)
      if_nz r6.x
        add r4.w, -r4.w, l(1.000000)
        mov r6.y, l(4)
        mov r6.zw, l(0,0,4,0)
        loop 
          ige r7.x, r6.w, l(4)
          breakc_nz r7.x
          ishl r7.x, r6.w, l(2)
          ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
          ge r7.x, r7.x, r4.w
          if_nz r7.x
            mov r6.z, r6.w
            break 
          endif 
          iadd r6.x, r6.w, l(1)
          mov r6.zw, r6.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r6.x, r6.z, l(2)
        iadd r6.y, r6.x, l(-4)
        ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
        movc r6.y, r6.z, r6.y, l(1.000000)
        mov r6.w, l(3)
        loop 
          ilt r7.x, r6.w, l(0)
          breakc_nz r7.x
          ige r7.x, r6.w, r6.z
          if_nz r7.x
            ishl r7.x, r6.w, l(2)
            iadd r7.y, r7.x, l(4)
            ld_structured r7.z, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r7.y, r7.z
            ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g1.xxxx
            mul r7.x, r5.x, r7.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r7.y, r7.x
          endif 
          iadd r6.w, r6.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r6.x, r4.w
        mul r4.w, r5.x, r6.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r4.w
        ld_structured r4.w, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r4.w, r4.w, l(1000000015047466219876688855040.000000)
        if_nz r4.w
          mov r4.w, l(2)
          loop 
            ige r5.x, r4.w, l(4)
            breakc_nz r5.x
            ishl r5.x, r4.w, l(2)
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            iadd r5.x, r5.x, l(-4)
            ld_structured r6.y, vThreadIDInGroupFlattened.x, r5.x, g0.xxxx
            add r6.x, -r6.y, r6.x
            ld_structured r6.yz, vThreadIDInGroupFlattened.x, r5.x, g1.xxyx
            add r5.x, -r6.z, r6.y
            mul r5.x, r5.x, r6.x
            mov x12[r4.w + 0].x, r5.x
            iadd r4.w, r4.w, l(1)
          endloop 
          mov r4.w, x12[2].x
          mov r5.x, x12[3].x
          lt r4.w, r5.x, r4.w
          movc r6.xy, r4.wwww, l(3,2,0,0), l(2,1,0,0)
          mov r4.w, l(2)
          loop 
            ige r5.x, r4.w, l(4)
            breakc_nz r5.x
            ige r5.x, r4.w, r6.x
            if_nz r5.x
              ishl r5.x, r4.w, l(2)
              iadd r6.z, r5.x, l(4)
              ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r5.x, r6.z
            endif 
            iadd r4.w, r4.w, l(1)
          endloop 
          mov r4.w, l(1)
          loop 
            ige r5.x, r4.w, l(4)
            breakc_nz r5.x
            ige r5.x, r4.w, r6.y
            if_nz r5.x
              ishl r5.x, r4.w, l(2)
              iadd r6.x, r5.x, l(4)
              ld_structured r6.x, vThreadIDInGroupFlattened.x, r6.x, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r5.x, r6.x
            endif 
            iadd r4.w, r4.w, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r4.z, l(11), l(0), l(12), r4.z
  else 
    mov r4.z, l(-2036)
  endif 
  if_nz r5.y
    mov r6.xy, vThreadID.xyxx
    mov r6.zw, l(0,0,13,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r4.w, r6.xyzw, t24.xzwy
    and r5.xy, r4.wwww, l(1, 2046, 0, 0)
    umax r6.x, r3.y, r4.w
    umax r7.x, r3.x, r6.x
    umin r7.y, r3.x, r6.x
    movc r3.xy, r5.xxxx, r7.xyxx, r3.xyxx
    utof r5.x, r5.y
    mad r5.y, -r5.x, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r5.y
    lt r5.x, l(409.200012), r5.x
    if_nz r5.x
      umax r0.z, r0.z, r4.w
      ushr r5.x, r4.w, l(2)
      and r5.x, r5.x, l(0x3ffffe00)
      ge r6.x, r5.x, l(0.00049219)
      if_nz r6.x
        add r5.x, -r5.x, l(1.000000)
        mov r6.y, l(4)
        mov r6.zw, l(0,0,4,0)
        loop 
          ige r7.x, r6.w, l(4)
          breakc_nz r7.x
          ishl r7.x, r6.w, l(2)
          ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
          ge r7.x, r7.x, r5.x
          if_nz r7.x
            mov r6.z, r6.w
            break 
          endif 
          iadd r6.x, r6.w, l(1)
          mov r6.zw, r6.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r6.x, r6.z, l(2)
        iadd r6.y, r6.x, l(-4)
        ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
        movc r6.y, r6.z, r6.y, l(1.000000)
        mov r6.w, l(3)
        loop 
          ilt r7.x, r6.w, l(0)
          breakc_nz r7.x
          ige r7.x, r6.w, r6.z
          if_nz r7.x
            ishl r7.x, r6.w, l(2)
            iadd r7.y, r7.x, l(4)
            ld_structured r7.z, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r7.y, r7.z
            ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g1.xxxx
            mul r7.x, r5.y, r7.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r7.y, r7.x
          endif 
          iadd r6.w, r6.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r6.x, r5.x
        mul r5.x, r5.y, r6.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r5.x
        ld_structured r5.x, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r5.x, r5.x, l(1000000015047466219876688855040.000000)
        if_nz r5.x
          mov r5.x, l(2)
          loop 
            ige r5.y, r5.x, l(4)
            breakc_nz r5.y
            ishl r5.y, r5.x, l(2)
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r5.y, g0.xxxx
            iadd r5.y, r5.y, l(-4)
            ld_structured r6.y, vThreadIDInGroupFlattened.x, r5.y, g0.xxxx
            add r6.x, -r6.y, r6.x
            ld_structured r6.yz, vThreadIDInGroupFlattened.x, r5.y, g1.xxyx
            add r5.y, -r6.z, r6.y
            mul r5.y, r5.y, r6.x
            mov x13[r5.x + 0].x, r5.y
            iadd r5.x, r5.x, l(1)
          endloop 
          mov r5.x, x13[2].x
          mov r5.y, x13[3].x
          lt r5.x, r5.y, r5.x
          movc r5.xy, r5.xxxx, l(3,2,0,0), l(2,1,0,0)
          mov r6.x, l(2)
          loop 
            ige r6.y, r6.x, l(4)
            breakc_nz r6.y
            ige r6.y, r6.x, r5.x
            if_nz r6.y
              ishl r6.y, r6.x, l(2)
              iadd r6.z, r6.y, l(4)
              ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            endif 
            iadd r6.x, r6.x, l(1)
          endloop 
          mov r5.x, l(1)
          loop 
            ige r6.x, r5.x, l(4)
            breakc_nz r6.x
            ige r6.x, r5.x, r5.y
            if_nz r6.x
              ishl r6.x, r5.x, l(2)
              iadd r6.y, r6.x, l(4)
              ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r6.y
            endif 
            iadd r5.x, r5.x, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r4.w, l(11), l(0), l(13), r4.w
  else 
    mov r4.w, l(-2035)
  endif 
  if_nz r5.z
    mov r6.xy, vThreadID.xyxx
    mov r6.zw, l(0,0,14,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r5.x, r6.xyzw, t24.yxzw
    and r5.yz, r5.xxxx, l(0, 1, 2046, 0)
    umax r6.x, r3.y, r5.x
    umax r7.x, r3.x, r6.x
    umin r7.y, r3.x, r6.x
    movc r3.xy, r5.yyyy, r7.xyxx, r3.xyxx
    utof r5.y, r5.z
    mad r5.z, -r5.y, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r5.z
    lt r5.y, l(409.200012), r5.y
    if_nz r5.y
      umax r0.z, r0.z, r5.x
      ushr r5.y, r5.x, l(2)
      and r5.y, r5.y, l(0x3ffffe00)
      ge r6.x, r5.y, l(0.00049219)
      if_nz r6.x
        add r5.y, -r5.y, l(1.000000)
        mov r6.y, l(4)
        mov r6.zw, l(0,0,4,0)
        loop 
          ige r7.x, r6.w, l(4)
          breakc_nz r7.x
          ishl r7.x, r6.w, l(2)
          ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
          ge r7.x, r7.x, r5.y
          if_nz r7.x
            mov r6.z, r6.w
            break 
          endif 
          iadd r6.x, r6.w, l(1)
          mov r6.zw, r6.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r6.x, r6.z, l(2)
        iadd r6.y, r6.x, l(-4)
        ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
        movc r6.y, r6.z, r6.y, l(1.000000)
        mov r6.w, l(3)
        loop 
          ilt r7.x, r6.w, l(0)
          breakc_nz r7.x
          ige r7.x, r6.w, r6.z
          if_nz r7.x
            ishl r7.x, r6.w, l(2)
            iadd r7.y, r7.x, l(4)
            ld_structured r7.z, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r7.y, r7.z
            ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g1.xxxx
            mul r7.x, r5.z, r7.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r7.y, r7.x
          endif 
          iadd r6.w, r6.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r6.x, r5.y
        mul r5.y, r5.z, r6.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r5.y
        ld_structured r5.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r5.y, r5.y, l(1000000015047466219876688855040.000000)
        if_nz r5.y
          mov r5.y, l(2)
          loop 
            ige r5.z, r5.y, l(4)
            breakc_nz r5.z
            ishl r5.z, r5.y, l(2)
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r5.z, g0.xxxx
            iadd r5.z, r5.z, l(-4)
            ld_structured r6.y, vThreadIDInGroupFlattened.x, r5.z, g0.xxxx
            add r6.x, -r6.y, r6.x
            ld_structured r6.yz, vThreadIDInGroupFlattened.x, r5.z, g1.xxyx
            add r5.z, -r6.z, r6.y
            mul r5.z, r5.z, r6.x
            mov x14[r5.y + 0].x, r5.z
            iadd r5.y, r5.y, l(1)
          endloop 
          mov r5.y, x14[2].x
          mov r5.z, x14[3].x
          lt r5.y, r5.z, r5.y
          movc r5.yz, r5.yyyy, l(0,3,2,0), l(0,2,1,0)
          mov r6.x, l(2)
          loop 
            ige r6.y, r6.x, l(4)
            breakc_nz r6.y
            ige r6.y, r6.x, r5.y
            if_nz r6.y
              ishl r6.y, r6.x, l(2)
              iadd r6.z, r6.y, l(4)
              ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            endif 
            iadd r6.x, r6.x, l(1)
          endloop 
          mov r5.y, l(1)
          loop 
            ige r6.x, r5.y, l(4)
            breakc_nz r6.x
            ige r6.x, r5.y, r5.z
            if_nz r6.x
              ishl r6.x, r5.y, l(2)
              iadd r6.y, r6.x, l(4)
              ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r6.y
            endif 
            iadd r5.y, r5.y, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r5.x, l(11), l(0), l(14), r5.x
  else 
    mov r5.x, l(-2034)
  endif 
  if_nz r5.w
    mov r6.xy, vThreadID.xyxx
    mov r6.zw, l(0,0,15,0)
    ld_indexable(texture2darray)(uint,uint,uint,uint) r5.y, r6.xyzw, t24.xyzw
    and r5.zw, r5.yyyy, l(0, 0, 1, 2046)
    umax r6.x, r3.y, r5.y
    umax r7.x, r3.x, r6.x
    umin r7.y, r3.x, r6.x
    movc r3.xy, r5.zzzz, r7.xyxx, r3.xyxx
    utof r5.z, r5.w
    mad r5.w, -r5.z, l(0.00048876), l(1.000000)
    mul r1.w, r1.w, r5.w
    lt r5.z, l(409.200012), r5.z
    if_nz r5.z
      umax r0.z, r0.z, r5.y
      ushr r5.z, r5.y, l(2)
      and r5.z, r5.z, l(0x3ffffe00)
      ge r6.x, r5.z, l(0.00049219)
      if_nz r6.x
        add r5.z, -r5.z, l(1.000000)
        mov r6.y, l(4)
        mov r6.zw, l(0,0,4,0)
        loop 
          ige r7.x, r6.w, l(4)
          breakc_nz r7.x
          ishl r7.x, r6.w, l(2)
          ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
          ge r7.x, r7.x, r5.z
          if_nz r7.x
            mov r6.z, r6.w
            break 
          endif 
          iadd r6.x, r6.w, l(1)
          mov r6.zw, r6.yyyx
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
        ishl r6.x, r6.z, l(2)
        iadd r6.y, r6.x, l(-4)
        ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
        movc r6.y, r6.z, r6.y, l(1.000000)
        mov r6.w, l(3)
        loop 
          ilt r7.x, r6.w, l(0)
          breakc_nz r7.x
          ige r7.x, r6.w, r6.z
          if_nz r7.x
            ishl r7.x, r6.w, l(2)
            iadd r7.y, r7.x, l(4)
            ld_structured r7.z, vThreadIDInGroupFlattened.x, r7.x, g0.xxxx
            store_structured g0.x, vThreadIDInGroupFlattened.x, r7.y, r7.z
            ld_structured r7.x, vThreadIDInGroupFlattened.x, r7.x, g1.xxxx
            mul r7.x, r5.w, r7.x
            store_structured g1.x, vThreadIDInGroupFlattened.x, r7.y, r7.x
          endif 
          iadd r6.w, r6.w, l(-1)
        endloop 
        store_structured g0.x, vThreadIDInGroupFlattened.x, r6.x, r5.z
        mul r5.z, r5.w, r6.y
        store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r5.z
        ld_structured r5.z, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
        ne r5.z, r5.z, l(1000000015047466219876688855040.000000)
        if_nz r5.z
          mov r5.z, l(2)
          loop 
            ige r5.w, r5.z, l(4)
            breakc_nz r5.w
            ishl r5.w, r5.z, l(2)
            ld_structured r6.x, vThreadIDInGroupFlattened.x, r5.w, g0.xxxx
            iadd r5.w, r5.w, l(-4)
            ld_structured r6.y, vThreadIDInGroupFlattened.x, r5.w, g0.xxxx
            add r6.x, -r6.y, r6.x
            ld_structured r6.yz, vThreadIDInGroupFlattened.x, r5.w, g1.xxyx
            add r5.w, -r6.z, r6.y
            mul r5.w, r5.w, r6.x
            mov x15[r5.z + 0].x, r5.w
            iadd r5.z, r5.z, l(1)
          endloop 
          mov r5.z, x15[2].x
          mov r5.w, x15[3].x
          lt r5.z, r5.w, r5.z
          movc r5.zw, r5.zzzz, l(0,0,3,2), l(0,0,2,1)
          mov r6.x, l(2)
          loop 
            ige r6.y, r6.x, l(4)
            breakc_nz r6.y
            ige r6.y, r6.x, r5.z
            if_nz r6.y
              ishl r6.y, r6.x, l(2)
              iadd r6.z, r6.y, l(4)
              ld_structured r6.z, vThreadIDInGroupFlattened.x, r6.z, g0.xxxx
              store_structured g0.x, vThreadIDInGroupFlattened.x, r6.y, r6.z
            endif 
            iadd r6.x, r6.x, l(1)
          endloop 
          mov r5.z, l(1)
          loop 
            ige r6.x, r5.z, l(4)
            breakc_nz r6.x
            ige r6.x, r5.z, r5.w
            if_nz r6.x
              ishl r6.x, r5.z, l(2)
              iadd r6.y, r6.x, l(4)
              ld_structured r6.y, vThreadIDInGroupFlattened.x, r6.y, g1.xxxx
              store_structured g1.x, vThreadIDInGroupFlattened.x, r6.x, r6.y
            endif 
            iadd r5.z, r5.z, l(1)
          endloop 
        endif 
      endif 
    endif 
    bfi r5.y, l(11), l(0), l(15), r5.y
  else 
    mov r5.y, l(-2033)
  endif 
  ushr r0.z, r0.z, l(2)
  and r0.z, r0.z, l(0x3ffffe00)
  add r5.z, -r1.w, l(0.800000)
  max r5.z, r5.z, l(0.000000)
  mad r5.z, -r5.z, l(1.250000), l(1.000000)
  umin r5.w, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.y, r1.x
  umax r1.x, r1.y, r1.x
  umin r1.y, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r2.w, r2.z
  umax r2.z, r2.w, r2.z
  umin r2.w, r3.w, r3.z
  umax r3.z, r3.w, r3.z
  umin r3.w, r4.y, r4.x
  umax r4.x, r4.y, r4.x
  umin r4.y, r4.w, r4.z
  umax r4.z, r4.w, r4.z
  umin r4.w, r5.y, r5.x
  umax r5.x, r5.y, r5.x
  umin r5.y, r1.x, r5.w
  umax r1.x, r1.x, r5.w
  umin r5.w, r1.y, r2.z
  umax r1.y, r1.y, r2.z
  umin r2.z, r2.w, r4.x
  umax r2.w, r2.w, r4.x
  umin r4.x, r4.y, r5.x
  umax r4.y, r4.y, r5.x
  umin r5.x, r0.w, r2.x
  umax r0.w, r0.w, r2.x
  umin r2.x, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r3.w, r3.z
  umax r3.z, r3.w, r3.z
  umin r3.w, r4.w, r4.z
  umax r4.z, r4.w, r4.z
  umin r4.w, r5.x, r5.y
  umax r5.x, r5.x, r5.y
  umin r5.y, r1.x, r0.w
  umax r0.w, r1.x, r0.w
  umin r1.x, r2.x, r5.w
  umax r2.x, r2.x, r5.w
  umin r5.w, r1.y, r1.z
  umax r1.y, r1.y, r1.z
  umin r1.z, r2.y, r2.z
  umax r2.y, r2.y, r2.z
  umin r2.z, r2.w, r3.z
  umax r2.w, r2.w, r3.z
  umin r3.z, r3.w, r4.x
  umax r3.w, r3.w, r4.x
  umin r4.x, r4.y, r4.z
  umax r4.y, r4.y, r4.z
  umin r4.z, r1.y, r4.w
  umax r1.y, r1.y, r4.w
  umin r4.w, r1.z, r4.y
  umax r1.z, r1.z, r4.y
  umin r4.y, r5.w, r5.x
  umax r5.x, r5.w, r5.x
  umin r5.w, r2.y, r4.x
  umax r2.y, r2.y, r4.x
  umin r4.x, r2.x, r5.y
  umax r2.x, r2.x, r5.y
  umin r5.y, r2.z, r3.w
  umax r2.z, r2.z, r3.w
  umin r3.w, r0.w, r1.x
  umax r0.w, r0.w, r1.x
  umin r1.x, r4.x, r4.z
  umax r4.x, r4.x, r4.z
  umin r4.z, r2.w, r3.z
  umax r2.w, r2.w, r3.z
  umin r3.z, r4.w, r5.y
  umax r4.w, r4.w, r5.y
  umin r5.y, r3.w, r4.y
  umax r3.w, r3.w, r4.y
  umin r4.y, r5.x, r0.w
  umax r0.w, r5.x, r0.w
  umin r5.x, r4.z, r5.w
  umax r4.z, r4.z, r5.w
  umin r5.w, r2.y, r2.w
  umax r2.y, r2.y, r2.w
  umin r2.w, r1.y, r2.x
  umax r1.y, r1.y, r2.x
  umin r2.x, r1.x, r5.y
  umax r1.x, r1.x, r5.y
  umin r5.y, r3.w, r4.x
  umax r3.w, r3.w, r4.x
  umin r4.x, r1.z, r2.z
  umax r1.z, r1.z, r2.z
  umin r2.z, r3.z, r5.x
  umax r3.z, r3.z, r5.x
  umin r5.x, r4.z, r4.w
  umax r4.z, r4.z, r4.w
  umin r4.w, r2.w, r4.y
  umax r2.w, r2.w, r4.y
  umin r4.y, r0.w, r1.y
  umax r0.w, r0.w, r1.y
  umin r1.y, r4.x, r5.w
  umax r4.x, r4.x, r5.w
  umin r5.w, r1.z, r2.y
  umax r1.z, r1.z, r2.y
  umin r2.y, r1.z, r2.x
  umax r1.z, r1.z, r2.x
  umin r2.x, r1.x, r5.w
  umax r1.x, r1.x, r5.w
  umin r5.w, r4.x, r5.y
  umax r4.x, r4.x, r5.y
  umin r5.y, r1.y, r3.w
  umax r1.y, r1.y, r3.w
  umin r3.w, r4.z, r4.w
  umax r4.z, r4.z, r4.w
  umin r4.w, r5.x, r2.w
  umax r2.w, r5.x, r2.w
  umin r5.x, r2.y, r3.w
  umax r2.y, r2.y, r3.w
  umin r3.w, r3.z, r4.y
  umax r3.z, r3.z, r4.y
  umin r4.y, r2.x, r4.w
  umax r2.x, r2.x, r4.w
  umin r4.w, r2.z, r0.w
  umax r0.w, r2.z, r0.w
  umin r2.z, r3.w, r5.w
  umax r3.w, r3.w, r5.w
  umin r5.w, r4.w, r5.y
  umax r4.w, r4.w, r5.y
  umin r5.y, r1.y, r0.w
  umax r0.w, r1.y, r0.w
  umin r1.y, r2.z, r5.x
  umax r2.z, r2.z, r5.x
  umin r5.x, r4.x, r3.z
  umax r3.z, r4.x, r3.z
  umin r4.x, r4.y, r5.w
  umax r4.y, r4.y, r5.w
  umin r5.w, r2.y, r3.w
  umax r2.y, r2.y, r3.w
  umin r3.w, r1.x, r2.w
  umax r1.x, r1.x, r2.w
  umin r2.w, r2.x, r4.w
  umax r2.x, r2.x, r4.w
  umin r4.w, r1.y, r4.x
  umax r1.y, r1.y, r4.x
  umin r4.x, r2.z, r4.y
  umax r2.z, r2.z, r4.y
  umin r4.y, r1.z, r4.z
  umax r1.z, r1.z, r4.z
  umin r4.z, r3.w, r5.y
  umax r3.w, r3.w, r5.y
  umin r5.y, r2.w, r5.w
  umax r2.w, r2.w, r5.w
  umin r5.w, r2.x, r2.y
  umax r2.x, r2.x, r2.y
  umin r2.y, r4.y, r5.x
  umax r4.y, r4.y, r5.x
  umin r5.x, r0.w, r1.x
  umax r0.w, r0.w, r1.x
  umin r1.x, r1.z, r3.z
  umax r1.z, r1.z, r3.z
  umin r3.z, r2.y, r4.z
  umax r2.y, r2.y, r4.z
  umin r4.z, r3.w, r4.y
  umax r3.w, r3.w, r4.y
  umin r4.y, r1.x, r5.x
  umax r1.x, r1.x, r5.x
  umin r5.x, r0.w, r1.z
  umax r0.w, r0.w, r1.z
  bfi r1.z, l(11), l(4), r1.y, l(0)
  bfi r1.z, l(4), l(0), r4.w, r1.z
  bfi r6.x, l(11), l(8), r4.x, l(0)
  iadd r1.z, r1.z, r6.x
  bfi r6.x, l(11), l(12), r2.z, l(0)
  iadd r1.z, r1.z, r6.x
  bfi r6.x, l(11), l(16), r5.y, l(0)
  iadd r1.z, r1.z, r6.x
  bfi r6.x, l(11), l(20), r2.w, l(0)
  iadd r1.z, r1.z, r6.x
  bfi r1.z, l(8), l(24), r5.w, r1.z
  bfi r6.z, l(4), l(28), r2.x, r1.z
  bfi r1.z, l(11), l(4), r2.y, l(0)
  bfi r1.z, l(4), l(0), r3.z, r1.z
  bfi r7.x, l(11), l(8), r4.z, l(0)
  iadd r1.z, r1.z, r7.x
  bfi r7.x, l(11), l(12), r3.w, l(0)
  iadd r1.z, r1.z, r7.x
  bfi r7.x, l(11), l(16), r4.y, l(0)
  iadd r1.z, r1.z, r7.x
  bfi r7.x, l(11), l(20), r1.x, l(0)
  iadd r1.z, r1.z, r7.x
  bfi r1.z, l(8), l(24), r5.x, r1.z
  bfi r6.w, l(4), l(28), r0.w, r1.z
  ult r1.z, cb2[58].z, r0.x
  if_nz r1.z
    store_uav_typed u5.xyzw, vThreadID.xyyy, l(1.000000,0.500000,0.500000,1.000000)
  endif 
  if_z r1.z
    iadd r1.z, r0.y, l(-1)
    if_nz r1.z
      and r4.w, r4.w, l(-2048)
      and r7.x, r1.y, l(-2048)
      ieq r4.w, r4.w, r7.x
      if_nz r4.w
        store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
      endif 
      not r7.x, r4.w
      if_z r4.w
        mov r8.xy, vThreadID.xyxx
        mov r8.zw, l(0,0,0,0)
        ld_indexable(texture2darray)(uint,uint,uint,uint) r7.y, r8.xyzw, t24.yxzw
        ushr r8.xyz, r7.yyyy, l(1, 8, 16, 0)
        and r7.z, r8.x, l(0x7f800000)
        bfi r7.y, l(8), l(15), r7.y, l(0)
        bfi r7.y, l(23), l(0), r7.y, r8.x
        add r9.x, -r7.z, r7.y
        bfi r7.yw, l(0, 8, 0, 8), l(0, 15, 0, 15), r8.yyyz, l(0, 0, 0, 0)
        bfi r7.yw, l(0, 23, 0, 23), l(0, 0, 0, 0), r7.yyyw, r8.xxxx
        add r9.yz, -r7.zzzz, r7.yywy
        and r7.yzw, r9.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
        ine r8.xyz, r7.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
        mov r8.w, l(-1)
        and r7.yz, r8.zzwz, r8.xxyx
        and r7.y, r7.z, r7.y
        not r8.y, r7.y
        if_z r7.y
          store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
        endif 
        mov r8.x, r8.y
      else 
        mov r8.xy, l(-1,-1,0,0)
      endif 
      and r7.xy, r7.xxxx, r8.yxyy
      or r7.xy, r4.wwww, r7.yxyy
    else 
      mov r7.xy, l(0,0,0,0)
    endif 
    not r7.yz, r7.yyxy
    and r4.w, r7.y, r7.z
    if_nz r4.w
      ult r7.y, l(1), r1.z
      if_nz r7.y
        and r1.y, r1.y, l(-2048)
        and r7.y, r4.x, l(-2048)
        ieq r1.y, r1.y, r7.y
        if_nz r1.y
          store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
        endif 
        not r7.y, r1.y
        if_z r1.y
          mov r8.xy, vThreadID.xyxx
          mov r8.zw, l(0,0,1,0)
          ld_indexable(texture2darray)(uint,uint,uint,uint) r7.z, r8.xyzw, t24.yzxw
          ushr r8.xyz, r7.zzzz, l(1, 8, 16, 0)
          and r7.w, r8.x, l(0x7f800000)
          bfi r7.z, l(8), l(15), r7.z, l(0)
          bfi r7.z, l(23), l(0), r7.z, r8.x
          add r9.x, -r7.w, r7.z
          bfi r8.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r8.yyzy, l(0, 0, 0, 0)
          bfi r8.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r8.yzyy, r8.xxxx
          add r9.yz, -r7.wwww, r8.xxyx
          and r8.xyz, r9.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
          ine r8.xyz, r8.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
          mov r8.w, l(-1)
          and r7.zw, r8.zzzw, r8.xxxy
          and r7.z, r7.w, r7.z
          not r8.y, r7.z
          if_z r7.z
            store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
          endif 
          mov r8.x, r8.y
        else 
          mov r8.xy, l(-1,-1,0,0)
        endif 
        and r7.yz, r7.yyyy, r8.yyxy
        or r7.yz, r1.yyyy, r7.zzyz
      else 
        mov r7.yz, l(0,0,0,0)
      endif 
      not r7.zw, r7.zzzy
      and r1.y, r7.z, r7.w
      if_nz r1.y
        ult r7.z, l(2), r1.z
        if_nz r7.z
          and r4.x, r4.x, l(-2048)
          and r7.z, r2.z, l(-2048)
          ieq r4.x, r4.x, r7.z
          if_nz r4.x
            store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
          endif 
          not r7.z, r4.x
          if_z r4.x
            mov r8.xy, vThreadID.xyxx
            mov r8.zw, l(0,0,2,0)
            ld_indexable(texture2darray)(uint,uint,uint,uint) r7.w, r8.xyzw, t24.yzwx
            ushr r8.xyz, r7.wwww, l(1, 8, 16, 0)
            and r8.w, r8.x, l(0x7f800000)
            bfi r7.w, l(8), l(15), r7.w, l(0)
            bfi r7.w, l(23), l(0), r7.w, r8.x
            add r9.x, -r8.w, r7.w
            bfi r8.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r8.yyzy, l(0, 0, 0, 0)
            bfi r8.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r8.yzyy, r8.xxxx
            add r9.yz, -r8.wwww, r8.xxyx
            and r8.xyz, r9.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            ine r8.xyz, r8.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
            mov r8.w, l(-1)
            and r8.xy, r8.zwzz, r8.xyxx
            and r7.w, r8.y, r8.x
            not r8.y, r7.w
            if_z r7.w
              store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
            endif 
            mov r8.x, r8.y
          else 
            mov r8.xy, l(-1,-1,0,0)
          endif 
          and r7.zw, r7.zzzz, r8.yyyx
          or r7.zw, r4.xxxx, r7.wwwz
        else 
          mov r7.zw, l(0,0,0,0)
        endif 
        not r8.xy, r7.wzww
        and r4.x, r8.x, r8.y
        if_nz r4.x
          ult r7.w, l(3), r1.z
          if_nz r7.w
            and r2.z, r2.z, l(-2048)
            and r7.w, r5.y, l(-2048)
            ieq r2.z, r2.z, r7.w
            if_nz r2.z
              store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
            endif 
            not r7.w, r2.z
            if_z r2.z
              mov r8.xy, vThreadID.xyxx
              mov r8.zw, l(0,0,3,0)
              ld_indexable(texture2darray)(uint,uint,uint,uint) r8.x, r8.xyzw, t24.xyzw
              ushr r8.yzw, r8.xxxx, l(0, 1, 8, 16)
              and r9.x, r8.y, l(0x7f800000)
              bfi r8.x, l(8), l(15), r8.x, l(0)
              bfi r8.x, l(23), l(0), r8.x, r8.y
              add r10.x, -r9.x, r8.x
              bfi r8.xz, l(8, 0, 8, 0), l(15, 0, 15, 0), r8.zzwz, l(0, 0, 0, 0)
              bfi r8.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r8.xzxx, r8.yyyy
              add r10.yz, -r9.xxxx, r8.xxyx
              and r8.xyz, r10.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              ine r8.xyz, r8.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
              mov r8.w, l(-1)
              and r8.xy, r8.zwzz, r8.xyxx
              and r8.x, r8.y, r8.x
              not r9.y, r8.x
              if_z r8.x
                store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
              endif 
              mov r9.x, r9.y
            else 
              mov r9.xy, l(-1,-1,0,0)
            endif 
            and r8.xy, r7.wwww, r9.yxyy
            or r8.xy, r2.zzzz, r8.yxyy
          else 
            mov r8.xy, l(0,0,0,0)
          endif 
          not r8.yz, r8.yyxy
          and r2.z, r8.y, r8.z
          if_nz r2.z
            ult r7.w, l(4), r1.z
            if_nz r7.w
              and r5.y, r5.y, l(-2048)
              and r7.w, r2.w, l(-2048)
              ieq r5.y, r5.y, r7.w
              if_nz r5.y
                store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
              endif 
              not r7.w, r5.y
              if_z r5.y
                mov r9.xy, vThreadID.xyxx
                mov r9.zw, l(0,0,4,0)
                ld_indexable(texture2darray)(uint,uint,uint,uint) r8.y, r9.xyzw, t24.yxzw
                ushr r9.xyz, r8.yyyy, l(1, 8, 16, 0)
                and r8.z, r9.x, l(0x7f800000)
                bfi r8.y, l(8), l(15), r8.y, l(0)
                bfi r8.y, l(23), l(0), r8.y, r9.x
                add r10.x, -r8.z, r8.y
                bfi r8.yw, l(0, 8, 0, 8), l(0, 15, 0, 15), r9.yyyz, l(0, 0, 0, 0)
                bfi r8.yw, l(0, 23, 0, 23), l(0, 0, 0, 0), r8.yyyw, r9.xxxx
                add r10.yz, -r8.zzzz, r8.yywy
                and r8.yzw, r10.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
                ine r9.xyz, r8.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                mov r9.w, l(-1)
                and r8.yz, r9.zzwz, r9.xxyx
                and r8.y, r8.z, r8.y
                not r9.y, r8.y
                if_z r8.y
                  store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                endif 
                mov r9.x, r9.y
              else 
                mov r9.xy, l(-1,-1,0,0)
              endif 
              and r8.yz, r7.wwww, r9.yyxy
              or r8.yz, r5.yyyy, r8.zzyz
            else 
              mov r8.yz, l(0,0,0,0)
            endif 
            not r8.zw, r8.zzzy
            and r5.y, r8.z, r8.w
            if_nz r5.y
              ult r7.w, l(5), r1.z
              if_nz r7.w
                and r2.w, r2.w, l(-2048)
                and r7.w, r5.w, l(-2048)
                ieq r2.w, r2.w, r7.w
                if_nz r2.w
                  store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                endif 
                not r7.w, r2.w
                if_z r2.w
                  mov r9.xy, vThreadID.xyxx
                  mov r9.zw, l(0,0,5,0)
                  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.z, r9.xyzw, t24.yzxw
                  ushr r9.xyz, r8.zzzz, l(1, 8, 16, 0)
                  and r8.w, r9.x, l(0x7f800000)
                  bfi r8.z, l(8), l(15), r8.z, l(0)
                  bfi r8.z, l(23), l(0), r8.z, r9.x
                  add r10.x, -r8.w, r8.z
                  bfi r9.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r9.yyzy, l(0, 0, 0, 0)
                  bfi r9.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r9.yzyy, r9.xxxx
                  add r10.yz, -r8.wwww, r9.xxyx
                  and r9.xyz, r10.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                  ine r9.xyz, r9.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                  mov r9.w, l(-1)
                  and r8.zw, r9.zzzw, r9.xxxy
                  and r8.z, r8.w, r8.z
                  not r9.y, r8.z
                  if_z r8.z
                    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                  endif 
                  mov r9.x, r9.y
                else 
                  mov r9.xy, l(-1,-1,0,0)
                endif 
                and r8.zw, r7.wwww, r9.yyyx
                or r8.zw, r2.wwww, r8.wwwz
              else 
                mov r8.zw, l(0,0,0,0)
              endif 
              not r9.xy, r8.wzww
              and r2.w, r9.x, r9.y
              if_nz r2.w
                ult r7.w, l(6), r1.z
                if_nz r7.w
                  and r5.w, r5.w, l(-2048)
                  and r7.w, r2.x, l(-2048)
                  ieq r5.w, r5.w, r7.w
                  if_nz r5.w
                    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                  endif 
                  not r7.w, r5.w
                  if_z r5.w
                    mov r9.xy, vThreadID.xyxx
                    mov r9.zw, l(0,0,6,0)
                    ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r9.xyzw, t24.yzwx
                    ushr r9.xyz, r8.wwww, l(1, 8, 16, 0)
                    and r9.w, r9.x, l(0x7f800000)
                    bfi r8.w, l(8), l(15), r8.w, l(0)
                    bfi r8.w, l(23), l(0), r8.w, r9.x
                    add r10.x, -r9.w, r8.w
                    bfi r9.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r9.yyzy, l(0, 0, 0, 0)
                    bfi r9.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r9.yzyy, r9.xxxx
                    add r10.yz, -r9.wwww, r9.xxyx
                    and r9.xyz, r10.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                    ine r9.xyz, r9.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                    mov r9.w, l(-1)
                    and r9.xy, r9.zwzz, r9.xyxx
                    and r8.w, r9.y, r9.x
                    not r9.y, r8.w
                    if_z r8.w
                      store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                    endif 
                    mov r9.x, r9.y
                  else 
                    mov r9.xy, l(-1,-1,0,0)
                  endif 
                  and r9.xy, r7.wwww, r9.yxyy
                  or r9.xy, r5.wwww, r9.yxyy
                else 
                  mov r9.xy, l(0,0,0,0)
                endif 
                not r9.yz, r9.yyxy
                and r5.w, r9.y, r9.z
                if_nz r5.w
                  ult r7.w, l(7), r1.z
                  if_nz r7.w
                    and r2.x, r2.x, l(-2048)
                    and r7.w, r3.z, l(-2048)
                    ieq r2.x, r2.x, r7.w
                    if_nz r2.x
                      store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                    endif 
                    not r7.w, r2.x
                    if_z r2.x
                      mov r10.xy, vThreadID.xyxx
                      mov r10.zw, l(0,0,7,0)
                      ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r10.xyzw, t24.yzwx
                      ushr r9.yzw, r8.wwww, l(0, 1, 8, 16)
                      and r10.x, r9.y, l(0x7f800000)
                      bfi r8.w, l(8), l(15), r8.w, l(0)
                      bfi r8.w, l(23), l(0), r8.w, r9.y
                      add r11.x, -r10.x, r8.w
                      bfi r9.zw, l(0, 0, 8, 8), l(0, 0, 15, 15), r9.zzzw, l(0, 0, 0, 0)
                      bfi r9.yz, l(0, 23, 23, 0), l(0, 0, 0, 0), r9.zzwz, r9.yyyy
                      add r11.yz, -r10.xxxx, r9.yyzy
                      and r9.yzw, r11.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
                      ine r10.xyz, r9.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                      mov r10.w, l(-1)
                      and r9.yz, r10.zzwz, r10.xxyx
                      and r8.w, r9.z, r9.y
                      not r10.y, r8.w
                      if_z r8.w
                        store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                      endif 
                      mov r10.x, r10.y
                    else 
                      mov r10.xy, l(-1,-1,0,0)
                    endif 
                    and r9.yz, r7.wwww, r10.yyxy
                    or r9.yz, r2.xxxx, r9.zzyz
                  else 
                    mov r9.yz, l(0,0,0,0)
                  endif 
                  not r9.zw, r9.zzzy
                  and r2.x, r9.z, r9.w
                  if_nz r2.x
                    ult r7.w, l(8), r1.z
                    if_nz r7.w
                      and r3.z, r3.z, l(-2048)
                      and r7.w, r2.y, l(-2048)
                      ieq r3.z, r3.z, r7.w
                      if_nz r3.z
                        store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                      endif 
                      not r7.w, r3.z
                      if_z r3.z
                        mov r10.xy, vThreadID.xyxx
                        mov r10.zw, l(0,0,8,0)
                        ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r10.xyzw, t24.yzwx
                        ushr r10.xyz, r8.wwww, l(1, 8, 16, 0)
                        and r9.z, r10.x, l(0x7f800000)
                        bfi r8.w, l(8), l(15), r8.w, l(0)
                        bfi r8.w, l(23), l(0), r8.w, r10.x
                        add r11.x, -r9.z, r8.w
                        bfi r10.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r10.yyzy, l(0, 0, 0, 0)
                        bfi r10.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r10.yzyy, r10.xxxx
                        add r11.yz, -r9.zzzz, r10.xxyx
                        and r10.xyz, r11.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                        ine r10.xyz, r10.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                        mov r10.w, l(-1)
                        and r9.zw, r10.zzzw, r10.xxxy
                        and r8.w, r9.w, r9.z
                        not r10.y, r8.w
                        if_z r8.w
                          store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                        endif 
                        mov r10.x, r10.y
                      else 
                        mov r10.xy, l(-1,-1,0,0)
                      endif 
                      and r9.zw, r7.wwww, r10.yyyx
                      or r9.zw, r3.zzzz, r9.wwwz
                    else 
                      mov r9.zw, l(0,0,0,0)
                    endif 
                    not r10.xy, r9.wzww
                    and r3.z, r10.x, r10.y
                    if_nz r3.z
                      ult r7.w, l(9), r1.z
                      if_nz r7.w
                        and r2.y, r2.y, l(-2048)
                        and r7.w, r4.z, l(-2048)
                        ieq r2.y, r2.y, r7.w
                        if_nz r2.y
                          store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                        endif 
                        not r7.w, r2.y
                        if_z r2.y
                          mov r10.xy, vThreadID.xyxx
                          mov r10.zw, l(0,0,9,0)
                          ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r10.xyzw, t24.yzwx
                          ushr r10.xyz, r8.wwww, l(1, 8, 16, 0)
                          and r9.w, r10.x, l(0x7f800000)
                          bfi r8.w, l(8), l(15), r8.w, l(0)
                          bfi r8.w, l(23), l(0), r8.w, r10.x
                          add r11.x, -r9.w, r8.w
                          bfi r10.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r10.yyzy, l(0, 0, 0, 0)
                          bfi r10.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r10.yzyy, r10.xxxx
                          add r11.yz, -r9.wwww, r10.xxyx
                          and r10.xyz, r11.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                          ine r10.xyz, r10.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                          mov r10.w, l(-1)
                          and r10.xy, r10.zwzz, r10.xyxx
                          and r8.w, r10.y, r10.x
                          not r10.y, r8.w
                          if_z r8.w
                            store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                          endif 
                          mov r10.x, r10.y
                        else 
                          mov r10.xy, l(-1,-1,0,0)
                        endif 
                        and r10.xy, r7.wwww, r10.yxyy
                        or r10.xy, r2.yyyy, r10.yxyy
                      else 
                        mov r10.xy, l(0,0,0,0)
                      endif 
                      not r10.yz, r10.yyxy
                      and r2.y, r10.y, r10.z
                      if_nz r2.y
                        ult r7.w, l(10), r1.z
                        if_nz r7.w
                          and r4.z, r4.z, l(-2048)
                          and r7.w, r3.w, l(-2048)
                          ieq r4.z, r4.z, r7.w
                          if_nz r4.z
                            store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                          endif 
                          not r7.w, r4.z
                          if_z r4.z
                            mov r11.xy, vThreadID.xyxx
                            mov r11.zw, l(0,0,10,0)
                            ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r11.xyzw, t24.yzwx
                            ushr r10.yzw, r8.wwww, l(0, 1, 8, 16)
                            and r9.w, r10.y, l(0x7f800000)
                            bfi r8.w, l(8), l(15), r8.w, l(0)
                            bfi r8.w, l(23), l(0), r8.w, r10.y
                            add r11.x, -r9.w, r8.w
                            bfi r10.zw, l(0, 0, 8, 8), l(0, 0, 15, 15), r10.zzzw, l(0, 0, 0, 0)
                            bfi r10.yz, l(0, 23, 23, 0), l(0, 0, 0, 0), r10.zzwz, r10.yyyy
                            add r11.yz, -r9.wwww, r10.yyzy
                            and r10.yzw, r11.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
                            ine r11.xyz, r10.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                            mov r11.w, l(-1)
                            and r10.yz, r11.zzwz, r11.xxyx
                            and r8.w, r10.z, r10.y
                            not r11.y, r8.w
                            if_z r8.w
                              store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                            endif 
                            mov r11.x, r11.y
                          else 
                            mov r11.xy, l(-1,-1,0,0)
                          endif 
                          and r10.yz, r7.wwww, r11.yyxy
                          or r10.yz, r4.zzzz, r10.zzyz
                        else 
                          mov r10.yz, l(0,0,0,0)
                        endif 
                        not r10.zw, r10.zzzy
                        and r4.z, r10.z, r10.w
                        if_nz r4.z
                          ult r7.w, l(11), r1.z
                          if_nz r7.w
                            and r3.w, r3.w, l(-2048)
                            and r7.w, r4.y, l(-2048)
                            ieq r3.w, r3.w, r7.w
                            if_nz r3.w
                              store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                            endif 
                            not r7.w, r3.w
                            if_z r3.w
                              mov r11.xy, vThreadID.xyxx
                              mov r11.zw, l(0,0,11,0)
                              ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r11.xyzw, t24.yzwx
                              ushr r11.xyz, r8.wwww, l(1, 8, 16, 0)
                              and r9.w, r11.x, l(0x7f800000)
                              bfi r8.w, l(8), l(15), r8.w, l(0)
                              bfi r8.w, l(23), l(0), r8.w, r11.x
                              add r12.x, -r9.w, r8.w
                              bfi r10.zw, l(0, 0, 8, 8), l(0, 0, 15, 15), r11.yyyz, l(0, 0, 0, 0)
                              bfi r10.zw, l(0, 0, 23, 23), l(0, 0, 0, 0), r10.zzzw, r11.xxxx
                              add r12.yz, -r9.wwww, r10.zzwz
                              and r11.xyz, r12.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                              ine r11.xyz, r11.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                              mov r11.w, l(-1)
                              and r10.zw, r11.zzzw, r11.xxxy
                              and r8.w, r10.w, r10.z
                              not r11.y, r8.w
                              if_z r8.w
                                store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                              endif 
                              mov r11.x, r11.y
                            else 
                              mov r11.xy, l(-1,-1,0,0)
                            endif 
                            and r10.zw, r7.wwww, r11.yyyx
                            or r10.zw, r3.wwww, r10.wwwz
                          else 
                            mov r10.zw, l(0,0,0,0)
                          endif 
                          not r11.xy, r10.wzww
                          and r3.w, r11.x, r11.y
                          if_nz r3.w
                            ult r7.w, l(12), r1.z
                            if_nz r7.w
                              and r4.y, r4.y, l(-2048)
                              and r7.w, r1.x, l(-2048)
                              ieq r4.y, r4.y, r7.w
                              if_nz r4.y
                                store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                              endif 
                              not r7.w, r4.y
                              if_z r4.y
                                mov r11.xy, vThreadID.xyxx
                                mov r11.zw, l(0,0,12,0)
                                ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r11.xyzw, t24.yzwx
                                ushr r11.xyz, r8.wwww, l(1, 8, 16, 0)
                                and r9.w, r11.x, l(0x7f800000)
                                bfi r8.w, l(8), l(15), r8.w, l(0)
                                bfi r8.w, l(23), l(0), r8.w, r11.x
                                add r12.x, -r9.w, r8.w
                                bfi r11.yz, l(0, 8, 8, 0), l(0, 15, 15, 0), r11.yyzy, l(0, 0, 0, 0)
                                bfi r11.xy, l(23, 23, 0, 0), l(0, 0, 0, 0), r11.yzyy, r11.xxxx
                                add r12.yz, -r9.wwww, r11.xxyx
                                and r11.xyz, r12.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                                ine r11.xyz, r11.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                                mov r11.w, l(-1)
                                and r11.xy, r11.zwzz, r11.xyxx
                                and r8.w, r11.y, r11.x
                                not r11.y, r8.w
                                if_z r8.w
                                  store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                                endif 
                                mov r11.x, r11.y
                              else 
                                mov r11.xy, l(-1,-1,0,0)
                              endif 
                              and r11.xy, r7.wwww, r11.yxyy
                              or r11.xy, r4.yyyy, r11.yxyy
                            else 
                              mov r11.xy, l(0,0,0,0)
                            endif 
                            not r11.yz, r11.yyxy
                            and r4.y, r11.y, r11.z
                            if_nz r4.y
                              ult r7.w, l(13), r1.z
                              if_nz r7.w
                                and r1.x, r1.x, l(-2048)
                                and r7.w, r5.x, l(-2048)
                                ieq r1.x, r1.x, r7.w
                                if_nz r1.x
                                  store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                                endif 
                                not r7.w, r1.x
                                if_z r1.x
                                  mov r12.xy, vThreadID.xyxx
                                  mov r12.zw, l(0,0,13,0)
                                  ld_indexable(texture2darray)(uint,uint,uint,uint) r8.w, r12.xyzw, t24.yzwx
                                  ushr r11.yzw, r8.wwww, l(0, 1, 8, 16)
                                  and r9.w, r11.y, l(0x7f800000)
                                  bfi r8.w, l(8), l(15), r8.w, l(0)
                                  bfi r8.w, l(23), l(0), r8.w, r11.y
                                  add r12.x, -r9.w, r8.w
                                  bfi r11.zw, l(0, 0, 8, 8), l(0, 0, 15, 15), r11.zzzw, l(0, 0, 0, 0)
                                  bfi r11.yz, l(0, 23, 23, 0), l(0, 0, 0, 0), r11.zzwz, r11.yyyy
                                  add r12.yz, -r9.wwww, r11.yyzy
                                  and r11.yzw, r12.xxyz, l(0, 0x7f800000, 0x7f800000, 0x7f800000)
                                  ine r12.xyz, r11.yzwy, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                                  mov r12.w, l(-1)
                                  and r11.yz, r12.zzwz, r12.xxyx
                                  and r8.w, r11.z, r11.y
                                  not r12.y, r8.w
                                  if_z r8.w
                                    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                                  endif 
                                  mov r12.x, r12.y
                                else 
                                  mov r12.xy, l(-1,-1,0,0)
                                endif 
                                and r11.yz, r7.wwww, r12.yyxy
                                or r11.yz, r1.xxxx, r11.zzyz
                              else 
                                mov r11.yz, l(0,0,0,0)
                              endif 
                              not r11.zw, r11.zzzy
                              and r1.x, r11.z, r11.w
                              if_nz r1.x
                                ult r1.z, l(14), r1.z
                                if_nz r1.z
                                  and r1.z, r5.x, l(-2048)
                                  and r0.w, r0.w, l(-2048)
                                  ieq r0.w, r0.w, r1.z
                                  if_nz r0.w
                                    store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,0.500000,1.000000,1.000000)
                                  endif 
                                  not r1.z, r0.w
                                  if_z r0.w
                                    mov r12.xy, vThreadID.xyxx
                                    mov r12.zw, l(0,0,14,0)
                                    ld_indexable(texture2darray)(uint,uint,uint,uint) r5.x, r12.xyzw, t24.xyzw
                                    ushr r12.xyz, r5.xxxx, l(1, 8, 16, 0)
                                    and r7.w, r12.x, l(0x7f800000)
                                    bfi r5.x, l(8), l(15), r5.x, l(0)
                                    bfi r5.x, l(23), l(0), r5.x, r12.x
                                    add r13.x, -r7.w, r5.x
                                    bfi r11.zw, l(0, 0, 8, 8), l(0, 0, 15, 15), r12.yyyz, l(0, 0, 0, 0)
                                    bfi r11.zw, l(0, 0, 23, 23), l(0, 0, 0, 0), r11.zzzw, r12.xxxx
                                    add r13.yz, -r7.wwww, r11.zzwz
                                    and r12.xyz, r13.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                                    ine r12.xyz, r12.xyzx, l(0x7f800000, 0x7f800000, 0x7f800000, 0)
                                    mov r12.w, l(-1)
                                    and r11.zw, r12.zzzw, r12.xxxy
                                    and r5.x, r11.w, r11.z
                                    not r7.w, r5.x
                                    if_z r5.x
                                      store_uav_typed u5.xyzw, vThreadID.xyyy, l(0.500000,1.000000,0.500000,1.000000)
                                    endif 
                                  else 
                                    mov r7.w, l(-1)
                                  endif 
                                  and r1.z, r1.z, r7.w
                                  or r0.w, r0.w, r1.z
                                else 
                                  mov r0.w, l(0)
                                endif 
                              else 
                                mov r0.w, l(-1)
                              endif 
                              and r0.w, r0.w, r1.x
                              or r0.w, r11.y, r0.w
                            else 
                              mov r0.w, l(-1)
                            endif 
                            and r0.w, r0.w, r4.y
                            or r0.w, r11.x, r0.w
                          else 
                            mov r0.w, l(-1)
                          endif 
                          and r0.w, r0.w, r3.w
                          or r0.w, r10.z, r0.w
                        else 
                          mov r0.w, l(-1)
                        endif 
                        and r0.w, r0.w, r4.z
                        or r0.w, r10.y, r0.w
                      else 
                        mov r0.w, l(-1)
                      endif 
                      and r0.w, r0.w, r2.y
                      or r0.w, r10.x, r0.w
                    else 
                      mov r0.w, l(-1)
                    endif 
                    and r0.w, r0.w, r3.z
                    or r0.w, r9.z, r0.w
                  else 
                    mov r0.w, l(-1)
                  endif 
                  and r0.w, r0.w, r2.x
                  or r0.w, r9.y, r0.w
                else 
                  mov r0.w, l(-1)
                endif 
                and r0.w, r0.w, r5.w
                or r0.w, r9.x, r0.w
              else 
                mov r0.w, l(-1)
              endif 
              and r0.w, r0.w, r2.w
              or r0.w, r8.z, r0.w
            else 
              mov r0.w, l(-1)
            endif 
            and r0.w, r0.w, r5.y
            or r0.w, r8.y, r0.w
          else 
            mov r0.w, l(-1)
          endif 
          and r0.w, r0.w, r2.z
          or r0.w, r8.x, r0.w
        else 
          mov r0.w, l(-1)
        endif 
        and r0.w, r0.w, r4.x
        or r0.w, r7.z, r0.w
      else 
        mov r0.w, l(-1)
      endif 
      and r0.w, r0.w, r1.y
      or r0.w, r7.y, r0.w
    else 
      mov r0.w, l(-1)
    endif 
    and r0.w, r0.w, r4.w
    or r0.w, r7.x, r0.w
    if_z r0.w
      utof r0.w, r0.y
      mul r2.xyz, r0.wwww, l(0.062500, 0.062500, 0.062500, 0.000000)
      mov r2.w, l(1.000000)
      store_uav_typed u5.xyzw, vThreadID.xyyy, r2.xyzw
    endif 
  endif 
else 
  mov r3.xy, l(0,0,0,0)
  mov r1.w, l(1.000000)
  mov r0.z, l(-1.000000)
  mov r5.z, l(1.000000)
  mov r6.zw, l(0,0,0,0)
endif 
if_z r0.y
  iadd r0.y, cb1[82].x, l(1023)
  ushr r0.y, r0.y, l(10)
  umin r0.y, r0.y, l(2)
  ubfe r2.xy, l(27, 27, 0, 0), l(2, 2, 0, 0), vThreadGroupID.xyxx
  uge r0.w, r0.y, l(1)
  if_nz r0.w
    uge r0.w, r0.y, l(2)
    if_nz r0.w
      mov r2.zw, l(0,0,1,0)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r2.xyww, t26.xyzw
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.y, r2.xyzw, t26.yxzw
    else 
      mov r2.zw, l(0,0,0,0)
      ld_indexable(texture2darray)(uint,uint,uint,uint) r1.x, r2.xyzw, t26.xyzw
      mov r1.y, l(0)
    endif 
  else 
    mov r1.xy, l(0,0,0,0)
  endif 
  or r0.w, r1.y, r1.x
  if_z r0.w
    store_uav_typed u4.xyzw, vThreadID.xyyy, l(1.000000,1.000000,1.000000,1.000000)
    mov r4.xy, vThreadID.xyxx
    mov r4.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.z, r4.xyzw, t0.yzxw
    store_uav_typed u7.xyzw, vThreadID.xyyy, r1.zzzz
  endif 
  if_nz r0.w
    and r0.w, r0.x, l(0xff000000)
    ieq r0.w, r0.w, l(0)
    ult r0.x, cb2[58].z, r0.x
    if_nz r0.x
      mov r4.xy, vThreadID.xyxx
      mov r4.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r5.xyw, r4.xyww, t21.xywz
      ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t22.xyzw
      mad r4.xyz, r4.wwww, r5.wxyw, r4.zxyz
      mov r6.xy, r4.yzyy
    else 
      mov r7.xy, vThreadID.xyxx
      mov r7.zw, l(0,0,0,0)
      ld_indexable(texture2d)(float,float,float,float) r4.xyz, r7.xyzw, t21.zxyw
      mov r6.xy, r4.yzyy
    endif 
    mov r7.xy, vThreadID.xyxx
    mov r7.w, l(0)
    ld_indexable(texture2d)(float,float,float,float) r0.x, r7.xyww, t0.xyzw
    lt r1.z, r1.w, l(0.800000)
    and r0.w, r0.w, r1.z
    if_nz r0.w
      max r0.z, r0.x, r0.z
    else 
      mov r0.z, r0.x
    endif 
    store_uav_typed u7.xyzw, vThreadID.xyyy, r0.zzzz
    if_nz r0.y
      ushr r3.xyzw, r3.xxyy, l(2, 2, 2, 2)
      and r3.xyzw, r3.xyzw, l(0x3ffffe00, 0x3ffffe00, 0x3ffffe00, 0x3ffffe00)
      ge r0.zw, r3.yyyw, l(0.000000, 0.000000, 0.984375, 0.984375)
      mul r3.yw, r3.yyyw, l(0.000000, 1.01587307, 0.000000, 1.01587307)
      mad r3.xz, r3.xxzx, l(64.000000, 0.000000, 64.000000, 0.000000), l(-63.000000, 0.000000, -63.000000, 0.000000)
      movc r0.zw, r0.zzzw, r3.xxxz, r3.yyyw
      max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.00000001, 0.00000001)
      rcp r0.zw, r0.zzzw
      ge r1.z, r0.x, l(0.984375)
      mul r3.x, r0.x, l(1.01587307)
      mad r3.y, r0.x, l(64.000000), l(-63.000000)
      movc r1.z, r1.z, r3.y, r3.x
      max r1.z, r1.z, l(0.00000001)
      rcp r1.z, r1.z
      utof r3.xyzw, vThreadID.xyxy
      mov r2.w, l(0)
      mov r8.w, l(0.00392157)
      mov r9.xw, l(1.000000,0,0,4)
      mov r10.xy, r6.zwzz
      mov r10.zw, r6.xxxy
      mov r4.y, r4.x
      mov r4.z, r1.w
      mov r4.w, r1.x
      loop 
        breakc_z r4.w
        firstbit_lo r2.z, r4.w
        ishl r5.x, l(1), r2.z
        not r5.x, r5.x
        and r4.w, r4.w, r5.x
        ld_indexable(texture2darray)(uint,uint,uint,uint) r5.x, r2.xyzw, t25.xyzw
        ishl r5.y, r2.z, l(5)
        mov r11.xyzw, r10.xyzw
        mov r12.x, r4.y
        mov r5.w, r4.z
        mov r12.w, r5.x
        loop 
          breakc_z r12.w
          firstbit_lo r13.x, r12.w
          ishl r13.y, l(1), r13.x
          not r13.y, r13.y
          and r12.w, r12.w, r13.y
          iadd r13.x, r5.y, r13.x
          ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r13.yzw, r13.x, l(16), t1.xxyz
          mov r12.yz, r11.zzwz
          mov r14.xy, r11.xyxx
          mov r15.z, r12.x
          loop 
            break 
          endloop 
          mov r11.xy, r14.xyxx
          mov r12.x, r15.z
          lt r14.z, r0.x, r13.w
          if_nz r14.z
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r16.xyzw, r13.x, l(0), t1.xyzw
            mul r17.xyzw, r3.xyzw, r16.xyzw
            add r14.zw, r17.yyyw, r17.xxxz
            add r17.xy, r13.yzyy, r14.zwzz
            mad r13.yz, r17.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
            max r13.y, |r13.z|, |r13.y|
            lt r13.y, r13.y, l(1.000000)
            if_nz r13.y
              ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r18.xyzw, r13.x, l(40), t2.xyzw
              ushr r13.y, r18.x, l(24)
              utof r13.y, r13.y
              mul r13.z, r13.y, l(0.00390625)
              ubfe r15.xyw, l(4, 4, 0, 1), l(26, 16, 0, 20), r18.zwzw
              ishl r19.xyzw, l(1, 1, 1, 1), r15.xyxy
              if_nz r15.w
                ubfe r14.z, l(12), l(12), r18.x
                and r15.xy, r18.xzxx, l(4095, 1023, 0, 0)
                utof r20.xyzw, r19.zwzw
                mad r21.xy, r17.xyxx, r20.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r21.zw, r20.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r21.xy, r21.zwzz, r21.xyxx
                utof r22.xz, r15.xxyx
                utof r22.y, r14.z
                add r14.zw, r21.xxxy, r22.xxxy
                mul r22.xy, r14.zwzz, cb1[83].xyxx
                mul r20.xyzw, r16.xzyw, r20.xyzw
                sample_d_indexable(texture2darray)(float,float,float,float) r23.xyzw, r22.xyzx, t42.xyzw, s0, r20.xyxx, r20.zwzz
                lt r14.z, l(0.000000), r13.y
                if_nz r14.z
                  and r14.z, r18.y, l(4095)
                  ubfe r14.w, l(12), l(12), r18.y
                  utof r15.xy, r14.zwzz
                  add r14.zw, r15.xxxy, r21.xxxy
                  mul r22.xy, r14.zwzz, cb1[83].xyxx
                  sample_d_indexable(texture2darray)(float,float,float,float) r20.xyzw, r22.xyzx, t42.xyzw, s0, r20.xyxx, r20.zwzz
                  add r20.xyzw, -r23.xyzw, r20.xyzw
                  mad r23.xyzw, r13.zzzz, r20.xyzw, r23.xyzw
                endif 
              else 
                ubfe r14.z, l(12), l(12), r18.x
                and r15.xy, r18.xzxx, l(4095, 1023, 0, 0)
                utof r20.xyzw, r19.zwzw
                mad r21.xy, r17.xyxx, r20.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                add r21.zw, r20.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                min r21.xy, r21.zwzz, r21.xyxx
                utof r22.x, r15.x
                utof r22.y, r14.z
                add r14.zw, r21.xxxy, r22.xxxy
                mul r21.xy, r14.zwzz, cb1[83].zwzz
                utof r21.z, r15.y
                mul r20.xyzw, r16.xzyw, r20.xyzw
                sample_d_indexable(texture2darray)(float,float,float,float) r23.xyzw, r21.xyzx, t43.xyzw, s0, r20.xyxx, r20.zwzz
                lt r14.z, l(0.000000), r13.y
                if_nz r14.z
                  ubfe r14.z, l(12), l(12), r18.y
                  and r15.xy, r18.yzyy, l(4095, 1023, 0, 0)
                  utof r19.xyzw, r19.xyzw
                  mad r20.xy, r17.xyxx, r19.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r20.zw, r19.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r20.xy, r20.zwzz, r20.xyxx
                  utof r21.x, r15.x
                  utof r21.y, r14.z
                  add r14.zw, r20.xxxy, r21.xxxy
                  mul r20.xy, r14.zwzz, cb1[83].zwzz
                  utof r20.z, r15.y
                  mul r19.xyzw, r16.xzyw, r19.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r19.xyzw, r20.xyzx, t43.xyzw, s0, r19.xyxx, r19.zwzz
                  add r19.xyzw, -r23.xyzw, r19.xyzw
                  mad r23.xyzw, r13.zzzz, r19.xyzw, r23.xyzw
                endif 
              endif 
              ne r19.xyzw, r23.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
              or r14.zw, r19.zzzw, r19.xxxy
              or r14.z, r14.w, r14.z
              if_nz r14.z
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r19.xyzw, r13.x, l(0), t2.xyzw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r20.xyzw, r13.x, l(16), t2.zxyw
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r14.z, r13.x, l(32), t2.xxxx
                ubfe r15.xyw, l(8, 8, 0, 8), l(8, 10, 0, 18), r18.wzwz
                utof r15.xyw, r15.xyxw
                mul r21.xy, r15.xwxx, l(0.00392157, 0.00392157, 0.000000, 0.000000)
                dp3 r14.w, r23.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                add r22.xyz, -r23.xyzx, r14.wwww
                mad r21.xzw, r21.xxxx, r22.xxyz, r23.xxyz
                ushr r14.w, r18.y, l(24)
                utof r14.w, r14.w
                mul r15.x, r14.w, l(0.00392157)
                and r17.w, r18.w, l(255)
                utof r17.w, r17.w
                eq r18.x, r14.w, l(0.000000)
                eq r22.xy, r15.ywyy, l(255.000000, 0.000000, 0.000000, 0.000000)
                and r15.w, r18.x, r22.x
                and r15.w, r22.y, r15.w
                eq r18.x, r17.w, l(255.000000)
                and r15.w, r15.w, r18.x
                max r18.x, r23.w, l(0.000100)
                div_sat r22.xyz, r21.xzwx, r18.xxxx
                mad r22.xyz, -r14.wwww, l(0.00392157, 0.00392157, 0.00392157, 0.000000), r22.xyzx
                max r22.xyz, r22.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                mad r14.w, r15.y, l(0.00392157), -r15.x
                max r14.w, r14.w, l(0.000100)
                div r22.xyz, r22.xyzx, r14.wwww
                min r22.xyz, r22.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                mad r14.w, r17.w, l(0.00392157), -r21.y
                mad r22.xyz, r22.xyzx, r14.wwww, r21.yyyy
                ge r24.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r22.xyzx
                mul r25.xyz, r22.xyzx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                add r22.xyz, r22.xyzx, l(0.055000, 0.055000, 0.055000, 0.000000)
                mul r22.xyz, |r22.xyzx|, l(0.94786733, 0.94786733, 0.94786733, 0.000000)
                log r22.xyz, r22.xyzx
                mul r22.xyz, r22.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
                exp r22.xyz, r22.xyzx
                movc r22.xyz, r24.xyzx, r25.xyzx, r22.xyzx
                mul r22.xyz, r23.wwww, r22.xyzx
                movc r23.xyz, r15.wwww, r21.xzwx, r22.xyzx
                utof r17.z, r13.x
                sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r17.xyzx, t29.xyzw, s0, l(0.000000)
                and r14.w, r19.x, l(255)
                utof r14.w, r14.w
                mul r21.x, r14.w, l(0.00392157)
                ubfe r15.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r19.xxxx
                utof r15.xy, r15.xyxx
                mul r21.yz, r15.xxyx, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                ushr r14.w, r19.x, l(24)
                utof r21.w, r14.w
                mul r22.xyzw, r8.xyzw, r21.xyzw
                ge r8.x, r13.w, l(0.984375)
                mul r8.y, r13.w, l(1.01587307)
                mad r8.z, r13.w, l(64.000000), l(-63.000000)
                movc r8.x, r8.x, r8.z, r8.y
                max r8.x, r8.x, l(0.00000001)
                rcp r8.x, r8.x
                f16tof32 r8.y, r20.x
                f16tof32 r8.z, r14.z
                ne r14.w, r8.z, l(1.000000)
                div r15.xyw, r23.xyxz, r18.xxxx
                mad r17.z, r8.w, r21.w, r23.w
                mad_sat r24.w, r17.z, r8.z, -r8.z
                mul r24.xyz, r15.xywx, r24.wwww
                movc r23.xyzw, r14.wwww, r24.xyzw, r23.xyzw
                mov r9.y, r24.w
                movc r15.xy, r14.wwww, r9.xyxx, r22.wwww
                lt r8.z, r8.x, r1.z
                add r9.y, r1.z, -r8.x
                mul_sat r9.y, r8.y, r9.y
                movc r8.z, r8.z, r9.y, l(1.000000)
                add r17.zw, r0.zzzw, -r8.xxxx
                mul r8.xy, r8.yyyy, r17.zwzz
                min r8.xy, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                mul r8.x, r8.x, r8.z
                mul r8.x, r8.y, r8.x
                mul r23.xyzw, r8.xxxx, r23.xyzw
                mul r24.xyzw, r15.xxxx, r23.xyzw
                ne r25.xyzw, r24.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                or r8.yz, r25.zzwz, r25.xxyx
                or r8.y, r8.z, r8.y
                if_nz r8.y
                  ubfe r8.y, l(1), l(30), r18.z
                  if_nz r8.y
                    mul r8.x, r8.x, r15.y
                    ushr r8.y, r18.z, l(31)
                    if_nz r8.y
                      ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r18.xyz, r13.x, l(24), t3.xyzx
                      ushr r8.y, r18.x, l(28)
                      ishl r8.y, l(1), r8.y
                      ubfe r23.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r18.yxzy
                      ishl r8.z, l(1), r23.x
                      and r9.y, r18.y, l(4095)
                      utof r25.xyzw, r8.yzyz
                      mad r8.yz, r17.xxyx, r25.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                      add r15.yw, r25.zzzw, l(0.000000, -0.500000, 0.000000, -0.500000)
                      min r8.yz, r8.yyzy, r15.yywy
                      utof r17.xz, r23.yyzy
                      utof r17.y, r9.y
                      add r15.yw, r8.yyyz, r17.xxxy
                      mul r17.xy, r15.ywyy, cb1[84].xyxx
                      mul r16.xyzw, r16.xzyw, r25.xyzw
                      sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r17.xyzx, t45.yxzw, s0, r16.xyxx, r16.zwzz
                      lt r13.x, l(0.000000), r13.y
                      if_nz r13.x
                        ubfe r13.x, l(12), l(12), r18.y
                        and r13.y, r18.z, l(4095)
                        utof r18.xy, r13.xyxx
                        add r8.yz, r8.yyzy, r18.xxyx
                        mul r17.xy, r8.yzyy, cb1[84].xyxx
                        sample_d_indexable(texture2darray)(float,float,float,float) r8.y, r17.xyzx, t45.yxzw, s0, r16.xyxx, r16.zwzz
                        add r8.y, -r9.y, r8.y
                        mad r9.y, r13.z, r8.y, r9.y
                      endif 
                    else 
                      mov r9.y, l(1.000000)
                    endif 
                    mul r8.x, r8.x, r9.y
                    ushr r8.y, r14.z, l(16)
                    f16tof32 r8.y, r8.y
                    ubfe r8.z, l(1), l(21), r18.w
                    dp3 r9.y, r22.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                    max r9.y, r9.y, l(0.000100)
                    max r9.y, r9.y, cb1[85].x
                    mul r9.y, r8.y, r9.y
                    movc r8.y, r8.z, r8.y, r9.y
                    mul r8.x, r8.y, r8.x
                    mad r22.xyz, r21.xyzx, r8.xxxx, r22.xyzx
                  endif 
                  mad r8.x, -r23.w, r15.x, l(1.000000)
                  mul r5.w, r5.w, r8.x
                  lt r8.y, r5.w, l(0.800000)
                  lt r8.z, l(0.200000), r24.w
                  or r8.y, r8.z, r8.y
                  if_nz r8.y
                    ge r8.y, r13.w, l(0.00049219)
                    if_nz r8.y
                      add r8.y, -r13.w, l(1.000000)
                      mov r13.xy, l(4,0,0,0)
                      loop 
                        ige r8.z, r13.y, l(4)
                        breakc_nz r8.z
                        ishl r8.z, r13.y, l(2)
                        ld_structured r8.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                        ge r8.z, r8.z, r8.y
                        if_nz r8.z
                          mov r13.x, r13.y
                          break 
                        endif 
                        iadd r9.z, r13.y, l(1)
                        mov r13.xy, r9.wzww
                      endloop 
                      store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                      store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                      ishl r8.z, r13.x, l(2)
                      iadd r9.y, r8.z, l(-4)
                      ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                      movc r9.y, r13.x, r9.y, l(1.000000)
                      mov r9.z, l(3)
                      loop 
                        ilt r13.y, r9.z, l(0)
                        breakc_nz r13.y
                        ige r13.y, r9.z, r13.x
                        if_nz r13.y
                          ishl r13.y, r9.z, l(2)
                          iadd r13.z, r13.y, l(4)
                          ld_structured r13.w, vThreadIDInGroupFlattened.x, r13.y, g0.xxxx
                          store_structured g0.x, vThreadIDInGroupFlattened.x, r13.z, r13.w
                          ld_structured r13.y, vThreadIDInGroupFlattened.x, r13.y, g1.xxxx
                          mul r13.y, r8.x, r13.y
                          store_structured g1.x, vThreadIDInGroupFlattened.x, r13.z, r13.y
                        endif 
                        iadd r9.z, r9.z, l(-1)
                      endloop 
                      store_structured g0.x, vThreadIDInGroupFlattened.x, r8.z, r8.y
                      mul r8.y, r8.x, r9.y
                      store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r8.y
                      ld_structured r8.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                      ne r8.y, r8.y, l(1000000015047466219876688855040.000000)
                      if_nz r8.y
                        mov r8.y, l(2)
                        loop 
                          ige r8.z, r8.y, l(4)
                          breakc_nz r8.z
                          ishl r8.z, r8.y, l(2)
                          ld_structured r9.y, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                          iadd r8.z, r8.z, l(-4)
                          ld_structured r9.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                          add r9.y, -r9.z, r9.y
                          ld_structured r13.yz, vThreadIDInGroupFlattened.x, r8.z, g1.xxyx
                          add r8.z, -r13.z, r13.y
                          mul r8.z, r8.z, r9.y
                          mov x16[r8.y + 0].x, r8.z
                          iadd r8.y, r8.y, l(1)
                        endloop 
                        mov r8.y, x16[2].x
                        mov r8.z, x16[3].x
                        lt r8.y, r8.z, r8.y
                        movc r8.yz, r8.yyyy, l(0,3,2,0), l(0,2,1,0)
                        mov r9.y, l(2)
                        loop 
                          ige r9.z, r9.y, l(4)
                          breakc_nz r9.z
                          ige r9.z, r9.y, r8.y
                          if_nz r9.z
                            ishl r9.z, r9.y, l(2)
                            iadd r13.y, r9.z, l(4)
                            ld_structured r13.y, vThreadIDInGroupFlattened.x, r13.y, g0.xxxx
                            store_structured g0.x, vThreadIDInGroupFlattened.x, r9.z, r13.y
                          endif 
                          iadd r9.y, r9.y, l(1)
                        endloop 
                        mov r8.y, l(1)
                        loop 
                          ige r9.y, r8.y, l(4)
                          breakc_nz r9.y
                          ige r9.y, r8.y, r8.z
                          if_nz r9.y
                            ishl r9.y, r8.y, l(2)
                            iadd r9.z, r9.y, l(4)
                            ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.z, g1.xxxx
                            store_structured g1.x, vThreadIDInGroupFlattened.x, r9.y, r9.z
                          endif 
                          iadd r8.y, r8.y, l(1)
                        endloop 
                      endif 
                    endif 
                  endif 
                  ushr r8.yz, r20.xxwx, l(0, 16, 16, 0)
                  f16tof32 r16.y, r20.w
                  f16tof32 r16.xz, r8.yyzy
                  ushr r8.yz, r19.yyzy, l(0, 16, 16, 0)
                  f16tof32 r17.xy, r19.yzyy
                  f16tof32 r17.zw, r8.yyyz
                  mul r13.yzw, r24.wwww, r17.xxzy
                  mov r20.x, r19.w
                  mul r15.xyw, r24.wwww, r20.xyxz
                  mad r17.xyz, r24.xyzx, r22.xyzx, -r13.yzwy
                  mad r13.yzw, r17.wwww, r17.xxyz, r13.yyzw
                  mad r13.yzw, r13.yyzw, r16.xxyz, r15.xxyw
                  mul r13.yzw, r13.yyzw, cb1[85].yyyy
                  mad r12.xyz, r12.xyzx, r8.xxxx, r13.wyzw
                  mov r11.zw, r12.yyyz
                else 
                  mov r11.zw, r12.yyyz
                endif 
              else 
                mov r11.zw, r12.yyyz
              endif 
            else 
              mov r11.zw, r12.yyyz
            endif 
          else 
            mov r11.zw, r12.yyyz
          endif 
        endloop 
        mov r10.xyzw, r11.xyzw
        mov r4.y, r12.x
        mov r4.z, r5.w
      endloop 
      mov r6.xyzw, r10.zwxy
      mov r4.x, r4.y
      mov r1.w, r4.z
      ult r0.y, l(1), r0.y
      if_nz r0.y
        mov r2.w, l(0)
        mov r8.w, l(0.00392157)
        mov r9.xw, l(1.000000,0,0,4)
        mov r10.xyzw, r6.zwxy
        mov r0.y, r4.x
        mov r1.x, r1.w
        mov r4.y, r1.y
        loop 
          breakc_z r4.y
          firstbit_lo r4.z, r4.y
          ishl r4.w, l(1), r4.z
          not r4.w, r4.w
          and r4.y, r4.w, r4.y
          iadd r2.z, r4.z, l(32)
          ld_indexable(texture2darray)(uint,uint,uint,uint) r4.z, r2.xyzw, t25.yzxw
          ishl r2.z, r2.z, l(5)
          mov r11.xyzw, r10.xyzw
          mov r5.x, r0.y
          mov r4.w, r1.x
          mov r12.x, r4.z
          loop 
            breakc_z r12.x
            firstbit_lo r12.y, r12.x
            ishl r12.z, l(1), r12.y
            not r12.z, r12.z
            and r12.x, r12.z, r12.x
            iadd r12.y, r2.z, r12.y
            ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r13.xyz, r12.y, l(16), t1.xyzx
            mov r5.yw, r11.zzzw
            mov r12.zw, r11.xxxy
            mov r14.z, r5.x
            loop 
              break 
            endloop 
            mov r11.xy, r12.zwzz
            mov r5.x, r14.z
            lt r13.w, r0.x, r13.z
            if_nz r13.w
              ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r15.xyzw, r12.y, l(0), t1.xyzw
              mul r16.xyzw, r3.xyzw, r15.xyzw
              add r14.xy, r16.ywyy, r16.xzxx
              add r16.xy, r13.xyxx, r14.xyxx
              mad r13.xy, r16.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
              max r13.x, |r13.y|, |r13.x|
              lt r13.x, r13.x, l(1.000000)
              if_nz r13.x
                ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r17.xyzw, r12.y, l(40), t2.xyzw
                ushr r13.x, r17.x, l(24)
                utof r13.x, r13.x
                mul r13.y, r13.x, l(0.00390625)
                ubfe r14.xyw, l(4, 4, 0, 1), l(26, 16, 0, 20), r17.zwzw
                ishl r18.xyzw, l(1, 1, 1, 1), r14.xyxy
                if_nz r14.w
                  ubfe r13.w, l(12), l(12), r17.x
                  and r14.xy, r17.xzxx, l(4095, 1023, 0, 0)
                  utof r19.xyzw, r18.zwzw
                  mad r20.xy, r16.xyxx, r19.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r20.zw, r19.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r20.xy, r20.zwzz, r20.xyxx
                  utof r21.xz, r14.xxyx
                  utof r21.y, r13.w
                  add r14.xw, r20.xxxy, r21.xxxy
                  mul r21.xy, r14.xwxx, cb1[83].xyxx
                  mul r19.xyzw, r15.xzyw, r19.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r22.xyzw, r21.xyzx, t42.xyzw, s0, r19.xyxx, r19.zwzz
                  lt r13.w, l(0.000000), r13.x
                  if_nz r13.w
                    and r13.w, r17.y, l(4095)
                    ubfe r14.x, l(12), l(12), r17.y
                    utof r23.x, r13.w
                    utof r23.y, r14.x
                    add r14.xy, r20.xyxx, r23.xyxx
                    mul r21.xy, r14.xyxx, cb1[83].xyxx
                    sample_d_indexable(texture2darray)(float,float,float,float) r19.xyzw, r21.xyzx, t42.xyzw, s0, r19.xyxx, r19.zwzz
                    add r19.xyzw, -r22.xyzw, r19.xyzw
                    mad r22.xyzw, r13.yyyy, r19.xyzw, r22.xyzw
                  endif 
                else 
                  ubfe r13.w, l(12), l(12), r17.x
                  and r14.xy, r17.xzxx, l(4095, 1023, 0, 0)
                  utof r19.xyzw, r18.zwzw
                  mad r20.xy, r16.xyxx, r19.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                  add r20.zw, r19.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                  min r20.xy, r20.zwzz, r20.xyxx
                  utof r21.x, r14.x
                  utof r21.y, r13.w
                  add r14.xw, r20.xxxy, r21.xxxy
                  mul r20.xy, r14.xwxx, cb1[83].zwzz
                  utof r20.z, r14.y
                  mul r19.xyzw, r15.xzyw, r19.xyzw
                  sample_d_indexable(texture2darray)(float,float,float,float) r22.xyzw, r20.xyzx, t43.xyzw, s0, r19.xyxx, r19.zwzz
                  lt r13.w, l(0.000000), r13.x
                  if_nz r13.w
                    ubfe r13.w, l(12), l(12), r17.y
                    and r14.xy, r17.yzyy, l(4095, 1023, 0, 0)
                    utof r18.xyzw, r18.xyzw
                    mad r19.xy, r16.xyxx, r18.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
                    add r19.zw, r18.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
                    min r19.xy, r19.zwzz, r19.xyxx
                    utof r20.x, r14.x
                    utof r20.y, r13.w
                    add r14.xw, r19.xxxy, r20.xxxy
                    mul r19.xy, r14.xwxx, cb1[83].zwzz
                    utof r19.z, r14.y
                    mul r18.xyzw, r15.xzyw, r18.xyzw
                    sample_d_indexable(texture2darray)(float,float,float,float) r18.xyzw, r19.xyzx, t43.xyzw, s0, r18.xyxx, r18.zwzz
                    add r18.xyzw, -r22.xyzw, r18.xyzw
                    mad r22.xyzw, r13.yyyy, r18.xyzw, r22.xyzw
                  endif 
                endif 
                ne r18.xyzw, r22.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                or r14.xy, r18.zwzz, r18.xyxx
                or r13.w, r14.y, r14.x
                if_nz r13.w
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r18.xyzw, r12.y, l(0), t2.xyzw
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r19.xyzw, r12.y, l(16), t2.zxyw
                  ld_structured_indexable(structured_buffer, stride=64)(mixed,mixed,mixed,mixed) r13.w, r12.y, l(32), t2.xxxx
                  ubfe r14.xyw, l(8, 8, 0, 8), l(8, 10, 0, 18), r17.wzwz
                  utof r14.xyw, r14.xyxw
                  mul r20.xy, r14.xwxx, l(0.00392157, 0.00392157, 0.000000, 0.000000)
                  dp3 r14.x, r22.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
                  add r21.xyz, -r22.xyzx, r14.xxxx
                  mad r20.xzw, r20.xxxx, r21.xxyz, r22.xxyz
                  ushr r14.x, r17.y, l(24)
                  utof r14.x, r14.x
                  mul r16.w, r14.x, l(0.00392157)
                  and r17.x, r17.w, l(255)
                  utof r17.x, r17.x
                  eq r17.y, r14.x, l(0.000000)
                  eq r21.xy, r14.ywyy, l(255.000000, 0.000000, 0.000000, 0.000000)
                  and r14.w, r17.y, r21.x
                  and r14.w, r21.y, r14.w
                  eq r17.y, r17.x, l(255.000000)
                  and r14.w, r14.w, r17.y
                  max r17.y, r22.w, l(0.000100)
                  div_sat r21.xyz, r20.xzwx, r17.yyyy
                  mad r21.xyz, -r14.xxxx, l(0.00392157, 0.00392157, 0.00392157, 0.000000), r21.xyzx
                  max r21.xyz, r21.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
                  mad r14.x, r14.y, l(0.00392157), -r16.w
                  max r14.x, r14.x, l(0.000100)
                  div r21.xyz, r21.xyzx, r14.xxxx
                  min r21.xyz, r21.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
                  mad r14.x, r17.x, l(0.00392157), -r20.y
                  mad r21.xyz, r21.xyzx, r14.xxxx, r20.yyyy
                  ge r23.xyz, l(0.040450, 0.040450, 0.040450, 0.000000), r21.xyzx
                  mul r24.xyz, r21.xyzx, l(0.07739938, 0.07739938, 0.07739938, 0.000000)
                  add r21.xyz, r21.xyzx, l(0.055000, 0.055000, 0.055000, 0.000000)
                  mul r21.xyz, |r21.xyzx|, l(0.94786733, 0.94786733, 0.94786733, 0.000000)
                  log r21.xyz, r21.xyzx
                  mul r21.xyz, r21.xyzx, l(2.400000, 2.400000, 2.400000, 0.000000)
                  exp r21.xyz, r21.xyzx
                  movc r21.xyz, r23.xyzx, r24.xyzx, r21.xyzx
                  mul r21.xyz, r22.wwww, r21.xyzx
                  movc r22.xyz, r14.wwww, r20.xzwx, r21.xyzx
                  utof r16.z, r12.y
                  sample_l_indexable(texture2darray)(float,float,float,float) r8.xyz, r16.xyzx, t29.xyzw, s0, l(0.000000)
                  and r14.x, r18.x, l(255)
                  utof r14.x, r14.x
                  mul r20.x, r14.x, l(0.00392157)
                  ubfe r14.xy, l(8, 8, 0, 0), l(8, 16, 0, 0), r18.xxxx
                  utof r14.xy, r14.xyxx
                  mul r20.yz, r14.xxyx, l(0.000000, 0.00392157, 0.00392157, 0.000000)
                  ushr r14.x, r18.x, l(24)
                  utof r20.w, r14.x
                  mul r21.xyzw, r8.xyzw, r20.xyzw
                  ge r8.x, r13.z, l(0.984375)
                  mul r8.y, r13.z, l(1.01587307)
                  mad r8.z, r13.z, l(64.000000), l(-63.000000)
                  movc r8.x, r8.x, r8.z, r8.y
                  max r8.x, r8.x, l(0.00000001)
                  rcp r8.x, r8.x
                  f16tof32 r8.y, r19.x
                  f16tof32 r8.z, r13.w
                  ne r14.x, r8.z, l(1.000000)
                  div r23.xyz, r22.xyzx, r17.yyyy
                  mad r14.y, r8.w, r20.w, r22.w
                  mad_sat r24.w, r14.y, r8.z, -r8.z
                  mul r24.xyz, r23.xyzx, r24.wwww
                  movc r22.xyzw, r14.xxxx, r24.xyzw, r22.xyzw
                  mov r9.y, r24.w
                  movc r14.xy, r14.xxxx, r9.xyxx, r21.wwww
                  lt r8.z, r8.x, r1.z
                  add r9.y, r1.z, -r8.x
                  mul_sat r9.y, r8.y, r9.y
                  movc r8.z, r8.z, r9.y, l(1.000000)
                  add r16.zw, r0.zzzw, -r8.xxxx
                  mul r8.xy, r8.yyyy, r16.zwzz
                  min r8.xy, |r8.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
                  mul r8.x, r8.x, r8.z
                  mul r8.x, r8.y, r8.x
                  mul r22.xyzw, r8.xxxx, r22.xyzw
                  mul r23.xyzw, r14.xxxx, r22.xyzw
                  ne r24.xyzw, r23.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
                  or r8.yz, r24.zzwz, r24.xxyx
                  or r8.y, r8.z, r8.y
                  if_nz r8.y
                    ubfe r8.y, l(1), l(30), r17.z
                    if_nz r8.y
                      mul r8.x, r8.x, r14.y
                      ushr r8.y, r17.z, l(31)
                      if_nz r8.y
                        ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r17.xyz, r12.y, l(24), t3.xyzx
                        ushr r8.y, r17.x, l(28)
                        ishl r8.y, l(1), r8.y
                        ubfe r22.xyz, l(4, 12, 10, 0), l(24, 16, 12, 0), r17.yxzy
                        ishl r8.z, l(1), r22.x
                        and r9.y, r17.y, l(4095)
                        utof r24.xyzw, r8.yzyz
                        mad r8.yz, r16.xxyx, r24.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
                        add r14.yw, r24.zzzw, l(0.000000, -0.500000, 0.000000, -0.500000)
                        min r8.yz, r8.yyzy, r14.yywy
                        utof r16.xz, r22.yyzy
                        utof r16.y, r9.y
                        add r14.yw, r8.yyyz, r16.xxxy
                        mul r16.xy, r14.ywyy, cb1[84].xyxx
                        mul r15.xyzw, r15.xzyw, r24.xyzw
                        sample_d_indexable(texture2darray)(float,float,float,float) r9.y, r16.xyzx, t45.yxzw, s0, r15.xyxx, r15.zwzz
                        lt r12.y, l(0.000000), r13.x
                        if_nz r12.y
                          ubfe r12.y, l(12), l(12), r17.y
                          and r13.x, r17.z, l(4095)
                          utof r17.x, r12.y
                          utof r17.y, r13.x
                          add r8.yz, r8.yyzy, r17.xxyx
                          mul r16.xy, r8.yzyy, cb1[84].xyxx
                          sample_d_indexable(texture2darray)(float,float,float,float) r8.y, r16.xyzx, t45.yxzw, s0, r15.xyxx, r15.zwzz
                          add r8.y, -r9.y, r8.y
                          mad r9.y, r13.y, r8.y, r9.y
                        endif 
                      else 
                        mov r9.y, l(1.000000)
                      endif 
                      mul r8.x, r8.x, r9.y
                      ushr r8.y, r13.w, l(16)
                      f16tof32 r8.y, r8.y
                      ubfe r8.z, l(1), l(21), r17.w
                      dp3 r9.y, r21.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
                      max r9.y, r9.y, l(0.000100)
                      max r9.y, r9.y, cb1[85].x
                      mul r9.y, r8.y, r9.y
                      movc r8.y, r8.z, r8.y, r9.y
                      mul r8.x, r8.y, r8.x
                      mad r21.xyz, r20.xyzx, r8.xxxx, r21.xyzx
                    endif 
                    mad r8.x, -r22.w, r14.x, l(1.000000)
                    mul r4.w, r4.w, r8.x
                    lt r8.y, r4.w, l(0.800000)
                    lt r8.z, l(0.200000), r23.w
                    or r8.y, r8.z, r8.y
                    if_nz r8.y
                      ge r8.y, r13.z, l(0.00049219)
                      if_nz r8.y
                        add r8.y, -r13.z, l(1.000000)
                        mov r13.xy, l(4,0,0,0)
                        loop 
                          ige r8.z, r13.y, l(4)
                          breakc_nz r8.z
                          ishl r8.z, r13.y, l(2)
                          ld_structured r8.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                          ge r8.z, r8.z, r8.y
                          if_nz r8.z
                            mov r13.x, r13.y
                            break 
                          endif 
                          iadd r9.z, r13.y, l(1)
                          mov r13.xy, r9.wzww
                        endloop 
                        store_structured g0.x, vThreadIDInGroupFlattened.x, l(16), l(1000000015047466219876688855040.000000)
                        store_structured g1.x, vThreadIDInGroupFlattened.x, l(16), l(1.000000)
                        ishl r8.z, r13.x, l(2)
                        iadd r9.y, r8.z, l(-4)
                        ld_structured r9.y, vThreadIDInGroupFlattened.x, r9.y, g1.xxxx
                        movc r9.y, r13.x, r9.y, l(1.000000)
                        mov r9.z, l(3)
                        loop 
                          ilt r12.y, r9.z, l(0)
                          breakc_nz r12.y
                          ige r12.y, r9.z, r13.x
                          if_nz r12.y
                            ishl r12.y, r9.z, l(2)
                            iadd r13.y, r12.y, l(4)
                            ld_structured r13.z, vThreadIDInGroupFlattened.x, r12.y, g0.xxxx
                            store_structured g0.x, vThreadIDInGroupFlattened.x, r13.y, r13.z
                            ld_structured r12.y, vThreadIDInGroupFlattened.x, r12.y, g1.xxxx
                            mul r12.y, r8.x, r12.y
                            store_structured g1.x, vThreadIDInGroupFlattened.x, r13.y, r12.y
                          endif 
                          iadd r9.z, r9.z, l(-1)
                        endloop 
                        store_structured g0.x, vThreadIDInGroupFlattened.x, r8.z, r8.y
                        mul r8.y, r8.x, r9.y
                        store_structured g1.x, vThreadIDInGroupFlattened.x, r8.z, r8.y
                        ld_structured r8.y, vThreadIDInGroupFlattened.x, l(16), g0.xxxx
                        ne r8.y, r8.y, l(1000000015047466219876688855040.000000)
                        if_nz r8.y
                          mov r8.y, l(2)
                          loop 
                            ige r8.z, r8.y, l(4)
                            breakc_nz r8.z
                            ishl r8.z, r8.y, l(2)
                            ld_structured r9.y, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                            iadd r8.z, r8.z, l(-4)
                            ld_structured r9.z, vThreadIDInGroupFlattened.x, r8.z, g0.xxxx
                            add r9.y, -r9.z, r9.y
                            ld_structured r13.yz, vThreadIDInGroupFlattened.x, r8.z, g1.xxyx
                            add r8.z, -r13.z, r13.y
                            mul r8.z, r8.z, r9.y
                            mov x17[r8.y + 0].x, r8.z
                            iadd r8.y, r8.y, l(1)
                          endloop 
                          mov r8.y, x17[2].x
                          mov r8.z, x17[3].x
                          lt r8.y, r8.z, r8.y
                          movc r8.yz, r8.yyyy, l(0,3,2,0), l(0,2,1,0)
                          mov r9.y, l(2)
                          loop 
                            ige r9.z, r9.y, l(4)
                            breakc_nz r9.z
                            ige r9.z, r9.y, r8.y
                            if_nz r9.z
                              ishl r9.z, r9.y, l(2)
                              iadd r12.y, r9.z, l(4)
                              ld_structured r12.y, vThreadIDInGroupFlattened.x, r12.y, g0.xxxx
                              store_structured g0.x, vThreadIDInGroupFlattened.x, r9.z, r12.y
                            endif 
                            iadd r9.y, r9.y, l(1)
                          endloop 
                          mov r8.y, l(1)
                          loop 
                            ige r9.y, r8.y, l(4)
                            breakc_nz r9.y
                            ige r9.y, r8.y, r8.z
                            if_nz r9.y
                              ishl r9.y, r8.y, l(2)
                              iadd r9.z, r9.y, l(4)
                              ld_structured r9.z, vThreadIDInGroupFlattened.x, r9.z, g1.xxxx
                              store_structured g1.x, vThreadIDInGroupFlattened.x, r9.y, r9.z
                            endif 
                            iadd r8.y, r8.y, l(1)
                          endloop 
                        endif 
                      endif 
                    endif 
                    ushr r8.yz, r19.xxwx, l(0, 16, 16, 0)
                    f16tof32 r15.y, r19.w
                    f16tof32 r15.xz, r8.yyzy
                    ushr r8.yz, r18.yyzy, l(0, 16, 16, 0)
                    f16tof32 r16.xy, r18.yzyy
                    f16tof32 r16.zw, r8.yyyz
                    mul r13.yzw, r23.wwww, r16.xxzy
                    mov r19.x, r18.w
                    mul r14.xyw, r23.wwww, r19.xyxz
                    mad r16.xyz, r23.xyzx, r21.xyzx, -r13.yzwy
                    mad r13.yzw, r16.wwww, r16.xxyz, r13.yyzw
                    mad r13.yzw, r13.yyzw, r15.xxyz, r14.xxyw
                    mul r13.yzw, r13.yyzw, cb1[85].yyyy
                    mad r5.xyw, r5.xyxw, r8.xxxx, r13.wywz
                    mov r11.zw, r5.yyyw
                  else 
                    mov r11.zw, r5.yyyw
                  endif 
                else 
                  mov r11.zw, r5.yyyw
                endif 
              else 
                mov r11.zw, r5.yyyw
              endif 
            else 
              mov r11.zw, r5.yyyw
            endif 
          endloop 
          mov r10.xyzw, r11.xyzw
          mov r0.y, r5.x
          mov r1.x, r4.w
        endloop 
        mov r6.xyzw, r10.zwxy
        mov r4.x, r0.y
        mov r1.w, r1.x
      endif 
    endif 
    add_sat r0.x, -r1.w, l(0.800000)
    mad r0.x, -r0.x, l(1.250000), l(1.000000)
    mul r0.x, r5.z, r0.x
    store_uav_typed u4.xyzw, vThreadID.xyyy, r0.xxxx
    ge r0.x, l(0.900000), r0.x
    if_nz r0.x
      ld_structured r0.xyzw, vThreadIDInGroupFlattened.x, l(0), g0.xyzw
      ld_structured r1.xyzw, vThreadIDInGroupFlattened.x, l(0), g1.xyzw
      add r0.xyzw, -r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      ge r2.xyzw, r0.xyzw, l(0.984375, 0.984375, 0.984375, 0.984375)
      mul r3.xy, r0.xyxx, l(1.01587307, 1.01587307, 0.000000, 0.000000)
      mad r0.xy, r0.xyxx, l(64.000000, 64.000000, 0.000000, 0.000000), l(-63.000000, -63.000000, 0.000000, 0.000000)
      movc r0.xy, r2.xyxx, r0.xyxx, r3.xyxx
      max r0.xy, r0.xyxx, l(0.00000001, 0.00000001, 0.000000, 0.000000)
      rcp r3.xy, r0.xyxx
      mul r0.xy, r0.zwzz, l(1.01587307, 1.01587307, 0.000000, 0.000000)
      mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 64.000000, 64.000000), l(0.000000, 0.000000, -63.000000, -63.000000)
      movc r0.xy, r2.zwzz, r0.zwzz, r0.xyxx
      max r0.xy, r0.xyxx, l(0.00000001, 0.00000001, 0.000000, 0.000000)
      rcp r3.zw, r0.xxxy
      mul r0.xyzw, r3.xyzw, l(0.000500, 0.000500, 0.000500, 0.000500)
      min r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
      store_uav_typed u2.xyzw, vThreadID.xyyy, r0.xyzw
      store_uav_typed u3.xyzw, vThreadID.xyyy, r1.xyzw
    endif 
    mov r0.xy, r6.xyxx
    mov r0.z, r4.x
    mov r1.xy, r6.zwzz
    loop 
      break 
    endloop 
    mov r0.w, l(0)
    store_uav_typed u5.xyzw, vThreadID.xyyy, r0.xyzw
  endif 
endif 
ret 
// Approximately 3617 instruction slots used
